/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { ServiceLineConfigService } from './service-line-config.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "./service-line-config.service";
var ServiceLineRestService = /** @class */ (function () {
    function ServiceLineRestService(http, serviceLineConfig) {
        this.http = http;
        this.serviceLineConfig = serviceLineConfig;
    }
    /**
     * return all service line descriptions
     */
    /**
     * return all service line descriptions
     * @return {?}
     */
    ServiceLineRestService.prototype.getAllServiceLineDescriptions = /**
     * return all service line descriptions
     * @return {?}
     */
    function () {
        return this.http.get(this.serviceLineConfig.getServiceLineDescriptionsEndpoint());
    };
    ServiceLineRestService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ServiceLineRestService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: ServiceLineConfigService }
    ]; };
    /** @nocollapse */ ServiceLineRestService.ngInjectableDef = i0.defineInjectable({ factory: function ServiceLineRestService_Factory() { return new ServiceLineRestService(i0.inject(i1.HttpClient), i0.inject(i2.ServiceLineConfigService)); }, token: ServiceLineRestService, providedIn: "root" });
    return ServiceLineRestService;
}());
export { ServiceLineRestService };
if (false) {
    /** @type {?} */
    ServiceLineRestService.prototype.http;
    /** @type {?} */
    ServiceLineRestService.prototype.serviceLineConfig;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS1saW5lLXJlc3Quc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWZpbHRlcnMtbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9maWx0ZXIvc2VydmljZS1saW5lL3NlcnZpY2UtbGluZS1yZXN0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRWhELE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLCtCQUErQixDQUFDOzs7OztJQU9yRSxnQ0FBb0IsSUFBZ0IsRUFBVSxpQkFBMkM7UUFBckUsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUFVLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBMEI7S0FBSztJQUU5Rjs7T0FFRzs7Ozs7SUFDSCw4REFBNkI7Ozs7SUFBN0I7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQVcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGtDQUFrQyxFQUFFLENBQUMsQ0FBQztLQUM3Rjs7Z0JBWkYsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7OztnQkFOTyxVQUFVO2dCQUVWLHdCQUF3Qjs7O2lDQUhoQzs7U0FRYSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0h0dHBDbGllbnR9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge1NlcnZpY2VMaW5lQ29uZmlnU2VydmljZX0gZnJvbSAnLi9zZXJ2aWNlLWxpbmUtY29uZmlnLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBTZXJ2aWNlTGluZVJlc3RTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQsIHByaXZhdGUgc2VydmljZUxpbmVDb25maWc6IFNlcnZpY2VMaW5lQ29uZmlnU2VydmljZSkgeyB9XG5cbiAgLyoqXG4gICAqIHJldHVybiBhbGwgc2VydmljZSBsaW5lIGRlc2NyaXB0aW9uc1xuICAgKi9cbiAgZ2V0QWxsU2VydmljZUxpbmVEZXNjcmlwdGlvbnMoKTogT2JzZXJ2YWJsZTxzdHJpbmdbXT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PHN0cmluZ1tdPih0aGlzLnNlcnZpY2VMaW5lQ29uZmlnLmdldFNlcnZpY2VMaW5lRGVzY3JpcHRpb25zRW5kcG9pbnQoKSk7XG4gIH1cbn1cbiJdfQ==