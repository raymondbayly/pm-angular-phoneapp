/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var ProvidersConfigService = /** @class */ (function () {
    function ProvidersConfigService() {
        this.allProvidersEndpoint = null;
    }
    /**
     * @return {?}
     */
    ProvidersConfigService.prototype.getAllProvidersEndpoint = /**
     * @return {?}
     */
    function () {
        if (!this.allProvidersEndpoint) {
            console.warn('All Providers Endpoint is not set!');
        }
        return this.allProvidersEndpoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ProvidersConfigService.prototype.setAllProvidersEndpoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.allProvidersEndpoint = value;
    };
    ProvidersConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ ProvidersConfigService.ngInjectableDef = i0.defineInjectable({ factory: function ProvidersConfigService_Factory() { return new ProvidersConfigService(); }, token: ProvidersConfigService, providedIn: "root" });
    return ProvidersConfigService;
}());
export { ProvidersConfigService };
if (false) {
    /** @type {?} */
    ProvidersConfigService.prototype.allProvidersEndpoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXJzLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctZmlsdGVycy1saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2ZpbHRlci9wcm92aWRlcnMvcHJvdmlkZXJzLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7O29DQU9SLElBQUk7Ozs7O0lBRTVCLHdEQUF1Qjs7OztRQUM1QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7WUFDL0IsT0FBTyxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7O0lBRzVCLHdEQUF1Qjs7OztjQUFDLEtBQWE7UUFDMUMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLEtBQUssQ0FBQzs7O2dCQWZyQyxVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7aUNBSkQ7O1NBS2Esc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUHJvdmlkZXJzQ29uZmlnU2VydmljZSB7XG5cbiAgcHJpdmF0ZSBhbGxQcm92aWRlcnNFbmRwb2ludCA9IG51bGw7XG5cbiAgcHVibGljIGdldEFsbFByb3ZpZGVyc0VuZHBvaW50KCk6IHN0cmluZyB7XG4gICAgaWYgKCF0aGlzLmFsbFByb3ZpZGVyc0VuZHBvaW50KSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0FsbCBQcm92aWRlcnMgRW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuYWxsUHJvdmlkZXJzRW5kcG9pbnQ7XG4gIH1cblxuICBwdWJsaWMgc2V0QWxsUHJvdmlkZXJzRW5kcG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuYWxsUHJvdmlkZXJzRW5kcG9pbnQgPSB2YWx1ZTtcbiAgfVxufVxuIl19