/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from "@angular/common/http";
import { ProvidersConfigService } from './providers-config.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "./providers-config.service";
var ProvidersApiService = /** @class */ (function () {
    function ProvidersApiService(http, providersConfigService) {
        this.http = http;
        this.providersConfigService = providersConfigService;
    }
    /**
     * @return {?}
     */
    ProvidersApiService.prototype.getAllProviders = /**
     * @return {?}
     */
    function () {
        return this.http.get(this.providersConfigService.getAllProvidersEndpoint());
    };
    ProvidersApiService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ProvidersApiService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: ProvidersConfigService }
    ]; };
    /** @nocollapse */ ProvidersApiService.ngInjectableDef = i0.defineInjectable({ factory: function ProvidersApiService_Factory() { return new ProvidersApiService(i0.inject(i1.HttpClient), i0.inject(i2.ProvidersConfigService)); }, token: ProvidersApiService, providedIn: "root" });
    return ProvidersApiService;
}());
export { ProvidersApiService };
if (false) {
    /** @type {?} */
    ProvidersApiService.prototype.http;
    /** @type {?} */
    ProvidersApiService.prototype.providersConfigService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXJzLWFwaS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctZmlsdGVycy1saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2ZpbHRlci9wcm92aWRlcnMvcHJvdmlkZXJzLWFwaS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUdoRCxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQzs7Ozs7SUFPOUQsNkJBQW9CLElBQWdCLEVBQVUsc0JBQThDO1FBQXhFLFNBQUksR0FBSixJQUFJLENBQVk7UUFBVSwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO0tBQzNGOzs7O0lBRUQsNkNBQWU7OztJQUFmO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFzQixJQUFJLENBQUMsc0JBQXNCLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxDQUFDO0tBQ3BHOztnQkFWSixVQUFVLFNBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCOzs7O2dCQVBPLFVBQVU7Z0JBR1Ysc0JBQXNCOzs7OEJBSjlCOztTQVNhLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0h0dHBDbGllbnR9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xuaW1wb3J0IHtBdHRlbmRpbmdQcm92aWRlcn0gZnJvbSBcIm5nLWNvbW1vbi1saWJyYXJ5L2xpYi9tb2RlbC9BdHRlbmRpbmdQcm92aWRlclwiO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHtQcm92aWRlcnNDb25maWdTZXJ2aWNlfSBmcm9tICcuL3Byb3ZpZGVycy1jb25maWcuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUHJvdmlkZXJzQXBpU2VydmljZSB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQsIHByaXZhdGUgcHJvdmlkZXJzQ29uZmlnU2VydmljZTogUHJvdmlkZXJzQ29uZmlnU2VydmljZSkge1xuICAgIH1cblxuICAgIGdldEFsbFByb3ZpZGVycygpOiBPYnNlcnZhYmxlPEF0dGVuZGluZ1Byb3ZpZGVyW10+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8QXR0ZW5kaW5nUHJvdmlkZXJbXT4odGhpcy5wcm92aWRlcnNDb25maWdTZXJ2aWNlLmdldEFsbFByb3ZpZGVyc0VuZHBvaW50KCkpO1xuICAgIH1cbn1cbiJdfQ==