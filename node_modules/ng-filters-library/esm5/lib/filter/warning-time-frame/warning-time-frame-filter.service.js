/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var WarningTimeFrameFilterService = /** @class */ (function () {
    function WarningTimeFrameFilterService() {
    }
    /**
     * filters out graphs with warnings older than warning timeframe limit
     * @param warningTimeFrame - # of hours to check back for warning activity
     */
    /**
     * filters out graphs with warnings older than warning timeframe limit
     * @param {?} warningTimeFrame - # of hours to check back for warning activity
     * @return {?}
     */
    WarningTimeFrameFilterService.prototype.getFilterFunction = /**
     * filters out graphs with warnings older than warning timeframe limit
     * @param {?} warningTimeFrame - # of hours to check back for warning activity
     * @return {?}
     */
    function (warningTimeFrame) {
        /** @type {?} */
        var warningTimeFrameLocal = warningTimeFrame;
        return function (peraGraph) {
            if (peraGraph.activeWarning && peraGraph.activeWarning.createdDate) {
                // check if date warning was created is older then the warning time frame limit
                if (peraGraph.activeWarning.createdDate >= ((new Date()).getTime()) - (warningTimeFrameLocal * 3600000)) {
                    return true;
                }
            }
            else {
                return false;
            }
        };
    };
    WarningTimeFrameFilterService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    WarningTimeFrameFilterService.ctorParameters = function () { return []; };
    /** @nocollapse */ WarningTimeFrameFilterService.ngInjectableDef = i0.defineInjectable({ factory: function WarningTimeFrameFilterService_Factory() { return new WarningTimeFrameFilterService(); }, token: WarningTimeFrameFilterService, providedIn: "root" });
    return WarningTimeFrameFilterService;
}());
export { WarningTimeFrameFilterService };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FybmluZy10aW1lLWZyYW1lLWZpbHRlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctZmlsdGVycy1saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2ZpbHRlci93YXJuaW5nLXRpbWUtZnJhbWUvd2FybmluZy10aW1lLWZyYW1lLWZpbHRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7SUFRekM7S0FBaUI7SUFFakI7OztPQUdHOzs7Ozs7SUFDSCx5REFBaUI7Ozs7O0lBQWpCLFVBQWtCLGdCQUF3Qjs7UUFDeEMsSUFBTSxxQkFBcUIsR0FBRyxnQkFBZ0IsQ0FBQztRQUMvQyxNQUFNLENBQUMsVUFBVSxTQUFvQjtZQUNuQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsYUFBYSxJQUFJLFNBQVMsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs7Z0JBRW5FLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxDQUFDLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDeEcsTUFBTSxDQUFDLElBQUksQ0FBQztpQkFDYjthQUNGO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sTUFBTSxDQUFDLEtBQUssQ0FBQzthQUNkO1NBQ0YsQ0FBQztLQUNIOztnQkF2QkYsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7d0NBTEQ7O1NBTWEsNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtQZXJhR3JhcGh9IGZyb20gJ25nLWNvbW1vbi1saWJyYXJ5JztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgV2FybmluZ1RpbWVGcmFtZUZpbHRlclNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgLyoqXG4gICAqIGZpbHRlcnMgb3V0IGdyYXBocyB3aXRoIHdhcm5pbmdzIG9sZGVyIHRoYW4gd2FybmluZyB0aW1lZnJhbWUgbGltaXRcbiAgICogQHBhcmFtIHdhcm5pbmdUaW1lRnJhbWUgLSAjIG9mIGhvdXJzIHRvIGNoZWNrIGJhY2sgZm9yIHdhcm5pbmcgYWN0aXZpdHlcbiAgICovXG4gIGdldEZpbHRlckZ1bmN0aW9uKHdhcm5pbmdUaW1lRnJhbWU6IG51bWJlcikge1xuICAgIGNvbnN0IHdhcm5pbmdUaW1lRnJhbWVMb2NhbCA9IHdhcm5pbmdUaW1lRnJhbWU7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChwZXJhR3JhcGg6IFBlcmFHcmFwaCk6IGJvb2xlYW4ge1xuICAgICAgaWYgKHBlcmFHcmFwaC5hY3RpdmVXYXJuaW5nICYmIHBlcmFHcmFwaC5hY3RpdmVXYXJuaW5nLmNyZWF0ZWREYXRlKSB7XG4gICAgICAgIC8vIGNoZWNrIGlmIGRhdGUgd2FybmluZyB3YXMgY3JlYXRlZCBpcyBvbGRlciB0aGVuIHRoZSB3YXJuaW5nIHRpbWUgZnJhbWUgbGltaXRcbiAgICAgICAgaWYgKHBlcmFHcmFwaC5hY3RpdmVXYXJuaW5nLmNyZWF0ZWREYXRlID49ICgobmV3IERhdGUoKSkuZ2V0VGltZSgpKSAtICh3YXJuaW5nVGltZUZyYW1lTG9jYWwgKiAzNjAwMDAwKSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfTtcbiAgfVxufVxuIl19