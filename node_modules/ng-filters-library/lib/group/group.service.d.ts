import { PeraGraph } from 'ng-common-library';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { WarningCategoryGroupService } from './warning-category-group.service';
import { HospitalLosGroupService } from './hospital-los-group.service';
import { ProviderGroupService } from './provider-group.service';
import { UnitGroupService } from './unit-group.service';
import { FacilityGroupService } from './facility-group.service';
import { GroupOption } from './GroupOption';
export declare class GroupService {
    private warningGroupService;
    private hospitalLosGroupService;
    private providerGroupService;
    private facilityGroupService;
    private unitGroupService;
    /**
     * subject used to change how many groups to be open initially after applying filtering, grouping and/or sorting
     */
    changeNumberOfGroupsToShow$: BehaviorSubject<number>;
    /**
     * subject to expand groups if necessary
     */
    expandGroups$: BehaviorSubject<boolean>;
    /**
     * switch to decide if it is necessary to recalculate how many groups should be closed
     */
    changeGroupsClosed: boolean;
    /**
     * emits when it is okay to display group options
     */
    groupsLoaded$: Subject<void>;
    /**
     * different options to group by and corresponding logic to divide graphs into groups
     */
    groupOptions: {
        groupName: string;
        lanes: {
            laneFunction: (peraGraph: PeraGraph) => boolean;
            laneTitle: string;
        }[];
    }[];
    /**
     * tells the groups to update themselves
     */
    groupSubject$: BehaviorSubject<{
        laneFunction: (peraGraph: PeraGraph) => boolean;
        laneTitle: string;
    }[]>;
    /**
     * groups active in the array view
     */
    activeGroup: {
        groupName: string;
        lanes: {
            laneFunction: (peraGraph: PeraGraph) => boolean;
            laneTitle: string;
        }[];
    };
    /**
     * groups currently selected in sidebar
     */
    stagedGroup: {
        groupName: string;
        lanes: {
            laneFunction: (peraGraph: PeraGraph) => boolean;
            laneTitle: string;
        }[];
    };
    constructor(warningGroupService: WarningCategoryGroupService, hospitalLosGroupService: HospitalLosGroupService, providerGroupService: ProviderGroupService, facilityGroupService: FacilityGroupService, unitGroupService: UnitGroupService);
    /**
     * compiles a list of dependencies from all the Group Option classes
     * @param options - list of Services to compile dependencies from
     */
    compileDependencies(options: GroupOption[]): Observable<any>[];
    /**
     * generate filter functions and titles for all the group by options and add them to the options list
     */
    generateGroupByOptions(options: GroupOption[]): void;
    /**
     * set default value of group by
     */
    setDefaults(): void;
    /**
     * what to do if sidebar is destroyed
     */
    clearGroupBy(): void;
}
