/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { ServiceLineConfigService } from './service-line-config.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "./service-line-config.service";
export class ServiceLineRestService {
    /**
     * @param {?} http
     * @param {?} serviceLineConfig
     */
    constructor(http, serviceLineConfig) {
        this.http = http;
        this.serviceLineConfig = serviceLineConfig;
    }
    /**
     * return all service line descriptions
     * @return {?}
     */
    getAllServiceLineDescriptions() {
        return this.http.get(this.serviceLineConfig.getServiceLineDescriptionsEndpoint());
    }
}
ServiceLineRestService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
ServiceLineRestService.ctorParameters = () => [
    { type: HttpClient },
    { type: ServiceLineConfigService }
];
/** @nocollapse */ ServiceLineRestService.ngInjectableDef = i0.defineInjectable({ factory: function ServiceLineRestService_Factory() { return new ServiceLineRestService(i0.inject(i1.HttpClient), i0.inject(i2.ServiceLineConfigService)); }, token: ServiceLineRestService, providedIn: "root" });
if (false) {
    /** @type {?} */
    ServiceLineRestService.prototype.http;
    /** @type {?} */
    ServiceLineRestService.prototype.serviceLineConfig;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS1saW5lLXJlc3Quc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWZpbHRlcnMtbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9maWx0ZXIvc2VydmljZS1saW5lL3NlcnZpY2UtbGluZS1yZXN0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRWhELE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLCtCQUErQixDQUFDOzs7O0FBS3ZFLE1BQU07Ozs7O0lBRUosWUFBb0IsSUFBZ0IsRUFBVSxpQkFBMkM7UUFBckUsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUFVLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBMEI7S0FBSzs7Ozs7SUFLOUYsNkJBQTZCO1FBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBVyxJQUFJLENBQUMsaUJBQWlCLENBQUMsa0NBQWtDLEVBQUUsQ0FBQyxDQUFDO0tBQzdGOzs7WUFaRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7WUFOTyxVQUFVO1lBRVYsd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtIdHRwQ2xpZW50fSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtTZXJ2aWNlTGluZUNvbmZpZ1NlcnZpY2V9IGZyb20gJy4vc2VydmljZS1saW5lLWNvbmZpZy5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgU2VydmljZUxpbmVSZXN0U2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LCBwcml2YXRlIHNlcnZpY2VMaW5lQ29uZmlnOiBTZXJ2aWNlTGluZUNvbmZpZ1NlcnZpY2UpIHsgfVxuXG4gIC8qKlxuICAgKiByZXR1cm4gYWxsIHNlcnZpY2UgbGluZSBkZXNjcmlwdGlvbnNcbiAgICovXG4gIGdldEFsbFNlcnZpY2VMaW5lRGVzY3JpcHRpb25zKCk6IE9ic2VydmFibGU8c3RyaW5nW10+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxzdHJpbmdbXT4odGhpcy5zZXJ2aWNlTGluZUNvbmZpZy5nZXRTZXJ2aWNlTGluZURlc2NyaXB0aW9uc0VuZHBvaW50KCkpO1xuICB9XG59XG4iXX0=