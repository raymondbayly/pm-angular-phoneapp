/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChildren, ViewEncapsulation } from '@angular/core';
import { LoginService } from './services/login.service';
import { LoginIp } from './model/LoginIp';
import { LoginIpService } from './services/login-ip.service';
import { User } from 'ng-common-library';
import { first } from 'rxjs/operators';
var LoginComponent = /** @class */ (function () {
    function LoginComponent(loginService, loginLibraryIpService) {
        this.loginService = loginService;
        this.loginLibraryIpService = loginLibraryIpService;
        this.NO_DICE = 'Error:  Username or password is incorrect';
        this.loginInfo = new LoginIp();
    }
    /**
     * @return {?}
     */
    LoginComponent.prototype.getUser = /**
     * @return {?}
     */
    function () {
        if (!this.loginService.getCurrentUser()) {
            this.loginService.setCurrentUser(new User());
        }
        return this.loginService.getCurrentUser();
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.logoSrc = this.loginService.getLogoSrc();
        this.loginLibraryIpService.loginIp$.pipe(first()).subscribe(function (loginIp) {
            if (loginIp) {
                _this.loginInfo = loginIp;
            }
            else {
                console.log('Could not get Login Information from server, using defaults.');
            }
        });
        this.loginLibraryIpService.getLoginIp();
        localStorage.removeItem('currentUser');
        this.loginService.setCurrentUser(new User());
        this.errorMessage = null;
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.login = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // Retrieve a reference to the current user from the loginService
        /** @type {?} */
        var user = this.getUser();
        if (user.username && this.userPassword) {
            // Base64 encode the password
            user.password = btoa(this.userPassword);
            this.loginService.login$.pipe(first()).subscribe(function (usr) {
                if (!usr) {
                    /*
                       Any error = this message. This is a security best practice as you
                       do not want to give the user any information that they can use to
                       get into the system.
                       Wipe out the encoded password
                     */
                    user.password = null;
                    _this.userPassword = null;
                    _this.errorMessage = _this.NO_DICE;
                    _this.loginErrored();
                }
                else {
                    // Wipe out the encoded password
                    user.password = null;
                    _this.errorMessage = null;
                    _this.userPassword = null;
                }
            });
            this.loginService.logIn(user);
        }
        else {
            this.errorMessage = this.NO_DICE;
            this.loginErrored();
        }
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.loginErrored = /**
     * @return {?}
     */
    function () {
        this.setFocusToUsernameField();
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.setFocusToUsernameField();
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.setFocusToUsernameField = /**
     * @return {?}
     */
    function () {
        if (this.vc && this.vc.first && this.vc.first.nativeElement) {
            this.vc.first.nativeElement.focus();
        }
    };
    LoginComponent.decorators = [
        { type: Component, args: [{
                    selector: 'phlib-login',
                    template: "<!-- Hide the component if the user is already logged in. -->\n<div class=\"container\" [hidden]=\"loginService.hideLogin\">\n  <div class=\"card card-container\">\n    <img id=\"profile-img\" class=\"profile-img-card\" src={{logoSrc}} />\n    <p id=\"login-subtitle\" class=\"login-subtitle\">\n        Log Into Your <strong>{{title}}</strong> Account\n    </p>\n\n    <form name=\"form-signin\" (ngSubmit)=\"f.form.valid && login()\" #f=\"ngForm\" novalidate>\n      <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n      <span id=\"reauth-email\" class=\"reauth-email\"></span>\n      <div class=\"form-group\" [ngClass]=\"{ 'has-error': f.submitted && !username.valid }\">\n        <label for=\"username\">User Name</label>\n        <input #input autofocus type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"getUser().username\" #username=\"ngModel\" required />\n      </div>\n      <div class=\"form-group\" [ngClass]=\"{ 'has-error': f.submitted && !password.valid }\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" autocomplete=\"off\" [(ngModel)]=\"userPassword\" #password=\"ngModel\" required />\n      </div>\n      <div id=\"remember\" class=\"checkbox\">\n\n      </div>\n      <button [disabled]=\"username.invalid || password.invalid\" class=\"btn btn-lg btn-primary btn-block btn-signin\" type=\"submit\">LOGIN</button>\n    </form>\n  </div>\n  <footer>\n    <div class=\"footer\">\n      <span>{{loginInfo.copyRightInfo}} <strong>Version:</strong> {{loginInfo.versionInfo}}\n          | <strong>UDI: </strong>{{loginInfo.uniqueDeviceIdentifier}} <span [innerHtml]=\"loginInfo.patentInfo\"></span>\n      </span>\n    </div>\n  </footer>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["body,html{height:100%;background:no-repeat #3b3b3b}.ph-login-button{display:none}.card-container.card{max-width:490px;height:500px;padding:33px 55px 0}.btn{font-weight:700;height:36px;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.card{background-color:#fff;padding:20px 25px 30px;margin:100px auto 25px;border-radius:4px;box-shadow:0 2px 2px rgba(0,0,0,.3)}.profile-img-card{width:100%;height:3.5em;margin:0 auto 10px;display:block}.login-subtitle{font-size:1.2em;font-weight:700;color:#999;font-family:Tahoma;margin:10px 0 20px;min-height:1em}.reauth-email{display:block;color:#404040;line-height:2;margin-bottom:10px;font-size:14px;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box}.form-signin #inputEmail,.form-signin #inputPassword{direction:ltr;height:44px;font-size:16px}label{color:#d9d9d9;text-transform:uppercase;font-weight:400;font-size:14px;font-family:Tahoma}.form-signin button,.form-signin input[type=email],.form-signin input[type=password],.form-signin input[type=text]{width:100%;display:block;margin-bottom:10px;z-index:1;position:relative;box-sizing:border-box}.form-control:focus{border-left-color:#fff;border-right-color:#fff;border-top-color:#fff;box-shadow:none;-webkit-box-shadow:none}.form-control{background-color:#fff;border-radius:0}.form-group input{border-top:none;border-left:none;border-right:none;box-shadow:none;margin-bottom:2em;font-size:1.2em}.btn.btn-signin{background-color:#999;display:block;margin-right:auto;margin-left:auto;padding:0;font-weight:700;font-size:14px;font-family:Tahoma;width:50%;height:36px;border-radius:3px;border:#666;transition:218ms}.forgot-password{color:#6891a2}.forgot-password:active,.forgot-password:focus,.forgot-password:hover{color:#0c6121}.footer{font-size:.7em;position:fixed;width:100%;bottom:0;left:0;padding-left:5px;background-color:#fff}"]
                }] }
    ];
    /** @nocollapse */
    LoginComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: LoginIpService }
    ]; };
    LoginComponent.propDecorators = {
        vc: [{ type: ViewChildren, args: ['input',] }]
    };
    return LoginComponent;
}());
export { LoginComponent };
if (false) {
    /** @type {?} */
    LoginComponent.prototype.vc;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.NO_DICE;
    /** @type {?} */
    LoginComponent.prototype.loginInfo;
    /** @type {?} */
    LoginComponent.prototype.errorMessage;
    /** @type {?} */
    LoginComponent.prototype.logoSrc;
    /** @type {?} */
    LoginComponent.prototype.title;
    /** @type {?} */
    LoginComponent.prototype.userPassword;
    /** @type {?} */
    LoginComponent.prototype.loginService;
    /** @type {?} */
    LoginComponent.prototype.loginLibraryIpService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbG9naW4tbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBZ0IsU0FBUyxFQUFVLFlBQVksRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVoRyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdEQsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3hDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUMzRCxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDdkMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXJDO0lBa0JFLHdCQUFtQixZQUEwQixFQUMxQixxQkFBcUM7UUFEckMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUFnQjtRQVR2QyxZQUFPLEdBQUcsMkNBQTJDLENBQUM7UUFFdkUsY0FBUyxHQUFZLElBQUksT0FBTyxFQUFFLENBQUM7SUFRbkMsQ0FBQzs7OztJQUVNLGdDQUFPOzs7SUFBZDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsRUFBRSxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztTQUM5QztRQUNELE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUM1QyxDQUFDOzs7O0lBRUQsaUNBQVE7OztJQUFSO1FBQUEsaUJBY0M7UUFiQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLENBQUM7UUFFOUMsSUFBSSxDQUFDLHFCQUFx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Q0FBNEI7O0lBRWhCLHNDQUFpQzs7SUFDakMsK0NBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkcmVuLCBWaWV3RW5jYXBzdWxhdGlvbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7TG9naW5TZXJ2aWNlfSBmcm9tICcuL3NlcnZpY2VzL2xvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHtMb2dpbklwfSBmcm9tICcuL21vZGVsL0xvZ2luSXAnO1xuaW1wb3J0IHtMb2dpbklwU2VydmljZX0gZnJvbSAnLi9zZXJ2aWNlcy9sb2dpbi1pcC5zZXJ2aWNlJztcbmltcG9ydCB7VXNlcn0gZnJvbSAnbmctY29tbW9uLWxpYnJhcnknO1xuaW1wb3J0IHtmaXJzdH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwaGxpYi1sb2dpbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb2dpbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xvZ2luLmNvbXBvbmVudC5jc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBMb2dpbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XG5cbiAgQFZpZXdDaGlsZHJlbignaW5wdXQnKSB2YztcblxuICBwcml2YXRlIHJlYWRvbmx5IE5PX0RJQ0UgPSAnRXJyb3I6ICBVc2VybmFtZSBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3QnO1xuXG4gIGxvZ2luSW5mbzogTG9naW5JcCA9IG5ldyBMb2dpbklwKCk7XG4gIGVycm9yTWVzc2FnZTogc3RyaW5nO1xuICBsb2dvU3JjOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHB1YmxpYyB1c2VyUGFzc3dvcmQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgbG9naW5TZXJ2aWNlOiBMb2dpblNlcnZpY2UsXG4gICAgICAgICAgICAgIHB1YmxpYyBsb2dpbkxpYnJhcnlJcFNlcnZpY2U6IExvZ2luSXBTZXJ2aWNlKSB7XG4gIH1cblxuICBwdWJsaWMgZ2V0VXNlcigpIHtcbiAgICBpZiAoIXRoaXMubG9naW5TZXJ2aWNlLmdldEN1cnJlbnRVc2VyKCkpIHtcbiAgICAgIHRoaXMubG9naW5TZXJ2aWNlLnNldEN1cnJlbnRVc2VyKG5ldyBVc2VyKCkpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5sb2dpblNlcnZpY2UuZ2V0Q3VycmVudFVzZXIoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubG9nb1NyYyA9IHRoaXMubG9naW5TZXJ2aWNlLmdldExvZ29TcmMoKTtcblxuICAgIHRoaXMubG9naW5MaWJyYXJ5SXBTZXJ2aWNlLmxvZ2luSXAkLnBpcGUoZmlyc3QoKSkuc3Vic2NyaWJlKChsb2dpbklwOiBMb2dpbklwKSA9PiB7XG4gICAgICBpZiAobG9naW5JcCkge1xuICAgICAgICB0aGlzLmxvZ2luSW5mbyA9IGxvZ2luSXA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZygnQ291bGQgbm90IGdldCBMb2dpbiBJbmZvcm1hdGlvbiBmcm9tIHNlcnZlciwgdXNpbmcgZGVmYXVsdHMuJyk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5sb2dpbkxpYnJhcnlJcFNlcnZpY2UuZ2V0TG9naW5JcCgpO1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdjdXJyZW50VXNlcicpO1xuICAgIHRoaXMubG9naW5TZXJ2aWNlLnNldEN1cnJlbnRVc2VyKG5ldyBVc2VyKCkpO1xuICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gbnVsbDtcbiAgfVxuXG4gIGxvZ2luKCkge1xuICAgIC8vIFJldHJpZXZlIGEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IHVzZXIgZnJvbSB0aGUgbG9naW5TZXJ2aWNlXG4gICAgY29uc3QgdXNlcjogVXNlciA9IHRoaXMuZ2V0VXNlcigpO1xuICAgIGlmICh1c2VyLnVzZXJuYW1lICYmIHRoaXMudXNlclBhc3N3b3JkKSB7XG4gICAgICAvLyBCYXNlNjQgZW5jb2RlIHRoZSBwYXNzd29yZFxuICAgICAgdXNlci5wYXNzd29yZCA9IGJ0b2EodGhpcy51c2VyUGFzc3dvcmQpO1xuICAgICAgdGhpcy5sb2dpblNlcnZpY2UubG9naW4kLnBpcGUoZmlyc3QoKSkuc3Vic2NyaWJlKCh1c3I6IFVzZXIpID0+IHtcbiAgICAgICAgaWYgKCF1c3IpIHtcbiAgICAgICAgICAvKlxuICAgICAgICAgICAgIEFueSBlcnJvciA9IHRoaXMgbWVzc2FnZS4gVGhpcyBpcyBhIHNlY3VyaXR5IGJlc3QgcHJhY3RpY2UgYXMgeW91XG4gICAgICAgICAgICAgZG8gbm90IHdhbnQgdG8gZ2l2ZSB0aGUgdXNlciBhbnkgaW5mb3JtYXRpb24gdGhhdCB0aGV5IGNhbiB1c2UgdG9cbiAgICAgICAgICAgICBnZXQgaW50byB0aGUgc3lzdGVtLlxuICAgICAgICAgICAgIFdpcGUgb3V0IHRoZSBlbmNvZGVkIHBhc3N3b3JkXG4gICAgICAgICAgICovXG4gICAgICAgICAgdXNlci5wYXNzd29yZCA9IG51bGw7XG4gICAgICAgICAgdGhpcy51c2VyUGFzc3dvcmQgPSBudWxsO1xuICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gdGhpcy5OT19ESUNFO1xuICAgICAgICAgIHRoaXMubG9naW5FcnJvcmVkKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gV2lwZSBvdXQgdGhlIGVuY29kZWQgcGFzc3dvcmRcbiAgICAgICAgICB1c2VyLnBhc3N3b3JkID0gbnVsbDtcbiAgICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IG51bGw7XG4gICAgICAgICAgdGhpcy51c2VyUGFzc3dvcmQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMubG9naW5TZXJ2aWNlLmxvZ0luKHVzZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IHRoaXMuTk9fRElDRTtcbiAgICAgIHRoaXMubG9naW5FcnJvcmVkKCk7XG4gICAgfVxuICB9XG5cbiAgbG9naW5FcnJvcmVkKCkge1xuICAgIHRoaXMuc2V0Rm9jdXNUb1VzZXJuYW1lRmllbGQoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnNldEZvY3VzVG9Vc2VybmFtZUZpZWxkKCk7XG4gIH1cblxuICBwdWJsaWMgc2V0Rm9jdXNUb1VzZXJuYW1lRmllbGQoKSB7XG4gICAgaWYgKHRoaXMudmMgJiYgdGhpcy52Yy5maXJzdCAmJiB0aGlzLnZjLmZpcnN0Lm5hdGl2ZUVsZW1lbnQpIHtcbiAgICAgIHRoaXMudmMuZmlyc3QubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgIH1cbiAgfVxufVxuIl19