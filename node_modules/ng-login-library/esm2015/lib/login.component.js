/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChildren, ViewEncapsulation } from '@angular/core';
import { LoginService } from './services/login.service';
import { LoginIp } from './model/LoginIp';
import { LoginIpService } from './services/login-ip.service';
import { User } from 'ng-common-library';
import { first } from 'rxjs/operators';
export class LoginComponent {
    /**
     * @param {?} loginService
     * @param {?} loginLibraryIpService
     */
    constructor(loginService, loginLibraryIpService) {
        this.loginService = loginService;
        this.loginLibraryIpService = loginLibraryIpService;
        this.NO_DICE = 'Error:  Username or password is incorrect';
        this.loginInfo = new LoginIp();
    }
    /**
     * @return {?}
     */
    getUser() {
        if (!this.loginService.getCurrentUser()) {
            this.loginService.setCurrentUser(new User());
        }
        return this.loginService.getCurrentUser();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.logoSrc = this.loginService.getLogoSrc();
        this.loginLibraryIpService.loginIp$.pipe(first()).subscribe((loginIp) => {
            if (loginIp) {
                this.loginInfo = loginIp;
            }
            else {
                console.log('Could not get Login Information from server, using defaults.');
            }
        });
        this.loginLibraryIpService.getLoginIp();
        localStorage.removeItem('currentUser');
        this.loginService.setCurrentUser(new User());
        this.errorMessage = null;
    }
    /**
     * @return {?}
     */
    login() {
        // Retrieve a reference to the current user from the loginService
        /** @type {?} */
        const user = this.getUser();
        if (user.username && this.userPassword) {
            // Base64 encode the password
            user.password = btoa(this.userPassword);
            this.loginService.login$.pipe(first()).subscribe((usr) => {
                if (!usr) {
                    /*
                       Any error = this message. This is a security best practice as you
                       do not want to give the user any information that they can use to
                       get into the system.
                       Wipe out the encoded password
                     */
                    user.password = null;
                    this.userPassword = null;
                    this.errorMessage = this.NO_DICE;
                    this.loginErrored();
                }
                else {
                    // Wipe out the encoded password
                    user.password = null;
                    this.errorMessage = null;
                    this.userPassword = null;
                }
            });
            this.loginService.logIn(user);
        }
        else {
            this.errorMessage = this.NO_DICE;
            this.loginErrored();
        }
    }
    /**
     * @return {?}
     */
    loginErrored() {
        this.setFocusToUsernameField();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.setFocusToUsernameField();
    }
    /**
     * @return {?}
     */
    setFocusToUsernameField() {
        if (this.vc && this.vc.first && this.vc.first.nativeElement) {
            this.vc.first.nativeElement.focus();
        }
    }
}
LoginComponent.decorators = [
    { type: Component, args: [{
                selector: 'phlib-login',
                template: "<!-- Hide the component if the user is already logged in. -->\n<div class=\"container\" [hidden]=\"loginService.hideLogin\">\n  <div class=\"card card-container\">\n    <img id=\"profile-img\" class=\"profile-img-card\" src={{logoSrc}} />\n    <p id=\"login-subtitle\" class=\"login-subtitle\">\n        Log Into Your <strong>{{title}}</strong> Account\n    </p>\n\n    <form name=\"form-signin\" (ngSubmit)=\"f.form.valid && login()\" #f=\"ngForm\" novalidate>\n      <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n      <span id=\"reauth-email\" class=\"reauth-email\"></span>\n      <div class=\"form-group\" [ngClass]=\"{ 'has-error': f.submitted && !username.valid }\">\n        <label for=\"username\">User Name</label>\n        <input #input autofocus type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"getUser().username\" #username=\"ngModel\" required />\n      </div>\n      <div class=\"form-group\" [ngClass]=\"{ 'has-error': f.submitted && !password.valid }\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" autocomplete=\"off\" [(ngModel)]=\"userPassword\" #password=\"ngModel\" required />\n      </div>\n      <div id=\"remember\" class=\"checkbox\">\n\n      </div>\n      <button [disabled]=\"username.invalid || password.invalid\" class=\"btn btn-lg btn-primary btn-block btn-signin\" type=\"submit\">LOGIN</button>\n    </form>\n  </div>\n  <footer>\n    <div class=\"footer\">\n      <span>{{loginInfo.copyRightInfo}} <strong>Version:</strong> {{loginInfo.versionInfo}}\n          | <strong>UDI: </strong>{{loginInfo.uniqueDeviceIdentifier}} <span [innerHtml]=\"loginInfo.patentInfo\"></span>\n      </span>\n    </div>\n  </footer>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: ["body,html{height:100%;background:no-repeat #3b3b3b}.ph-login-button{display:none}.card-container.card{max-width:490px;height:500px;padding:33px 55px 0}.btn{font-weight:700;height:36px;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.card{background-color:#fff;padding:20px 25px 30px;margin:100px auto 25px;border-radius:4px;box-shadow:0 2px 2px rgba(0,0,0,.3)}.profile-img-card{width:100%;height:3.5em;margin:0 auto 10px;display:block}.login-subtitle{font-size:1.2em;font-weight:700;color:#999;font-family:Tahoma;margin:10px 0 20px;min-height:1em}.reauth-email{display:block;color:#404040;line-height:2;margin-bottom:10px;font-size:14px;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box}.form-signin #inputEmail,.form-signin #inputPassword{direction:ltr;height:44px;font-size:16px}label{color:#d9d9d9;text-transform:uppercase;font-weight:400;font-size:14px;font-family:Tahoma}.form-signin button,.form-signin input[type=email],.form-signin input[type=password],.form-signin input[type=text]{width:100%;display:block;margin-bottom:10px;z-index:1;position:relative;box-sizing:border-box}.form-control:focus{border-left-color:#fff;border-right-color:#fff;border-top-color:#fff;box-shadow:none;-webkit-box-shadow:none}.form-control{background-color:#fff;border-radius:0}.form-group input{border-top:none;border-left:none;border-right:none;box-shadow:none;margin-bottom:2em;font-size:1.2em}.btn.btn-signin{background-color:#999;display:block;margin-right:auto;margin-left:auto;padding:0;font-weight:700;font-size:14px;font-family:Tahoma;width:50%;height:36px;border-radius:3px;border:#666;transition:218ms}.forgot-password{color:#6891a2}.forgot-password:active,.forgot-password:focus,.forgot-password:hover{color:#0c6121}.footer{font-size:.7em;position:fixed;width:100%;bottom:0;left:0;padding-left:5px;background-color:#fff}"]
            }] }
];
/** @nocollapse */
LoginComponent.ctorParameters = () => [
    { type: LoginService },
    { type: LoginIpService }
];
LoginComponent.propDecorators = {
    vc: [{ type: ViewChildren, args: ['input',] }]
};
if (false) {
    /** @type {?} */
    LoginComponent.prototype.vc;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.NO_DICE;
    /** @type {?} */
    LoginComponent.prototype.loginInfo;
    /** @type {?} */
    LoginComponent.prototype.errorMessage;
    /** @type {?} */
    LoginComponent.prototype.logoSrc;
    /** @type {?} */
    LoginComponent.prototype.title;
    /** @type {?} */
    LoginComponent.prototype.userPassword;
    /** @type {?} */
    LoginComponent.prototype.loginService;
    /** @type {?} */
    LoginComponent.prototype.loginLibraryIpService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbG9naW4tbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBZ0IsU0FBUyxFQUFVLFlBQVksRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVoRyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdEQsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3hDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUMzRCxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDdkMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBUXJDLE1BQU0sT0FBTyxjQUFjOzs7OztJQVl6QixZQUFtQixZQUEwQixFQUMxQixxQkFBcUM7UUFEckMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUFnQjtRQVR2QyxZQUFPLEdBQUcsMkNBQTJDLENBQUM7UUFFdkUsY0FBUyxHQUFZLElBQUksT0FBTyxFQUFFLENBQUM7SUFRbkMsQ0FBQzs7OztJQUVNLE9BQU87UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsRUFBRTtZQUN2QyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7U0FDOUM7UUFDRCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDNUMsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLENBQUM7UUFFOUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFB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Q29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZHJlbiwgVmlld0VuY2Fwc3VsYXRpb259IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge0xvZ2luU2VydmljZX0gZnJvbSAnLi9zZXJ2aWNlcy9sb2dpbi5zZXJ2aWNlJztcbmltcG9ydCB7TG9naW5JcH0gZnJvbSAnLi9tb2RlbC9Mb2dpbklwJztcbmltcG9ydCB7TG9naW5JcFNlcnZpY2V9IGZyb20gJy4vc2VydmljZXMvbG9naW4taXAuc2VydmljZSc7XG5pbXBvcnQge1VzZXJ9IGZyb20gJ25nLWNvbW1vbi1saWJyYXJ5JztcbmltcG9ydCB7Zmlyc3R9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncGhsaWItbG9naW4nLFxuICB0ZW1wbGF0ZVVybDogJy4vbG9naW4uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9sb2dpbi5jb21wb25lbnQuY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgTG9naW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuXG4gIEBWaWV3Q2hpbGRyZW4oJ2lucHV0JykgdmM7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBOT19ESUNFID0gJ0Vycm9yOiAgVXNlcm5hbWUgb3IgcGFzc3dvcmQgaXMgaW5jb3JyZWN0JztcblxuICBsb2dpbkluZm86IExvZ2luSXAgPSBuZXcgTG9naW5JcCgpO1xuICBlcnJvck1lc3NhZ2U6IHN0cmluZztcbiAgbG9nb1NyYzogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBwdWJsaWMgdXNlclBhc3N3b3JkOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGxvZ2luU2VydmljZTogTG9naW5TZXJ2aWNlLFxuICAgICAgICAgICAgICBwdWJsaWMgbG9naW5MaWJyYXJ5SXBTZXJ2aWNlOiBMb2dpbklwU2VydmljZSkge1xuICB9XG5cbiAgcHVibGljIGdldFVzZXIoKSB7XG4gICAgaWYgKCF0aGlzLmxvZ2luU2VydmljZS5nZXRDdXJyZW50VXNlcigpKSB7XG4gICAgICB0aGlzLmxvZ2luU2VydmljZS5zZXRDdXJyZW50VXNlcihuZXcgVXNlcigpKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubG9naW5TZXJ2aWNlLmdldEN1cnJlbnRVc2VyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmxvZ29TcmMgPSB0aGlzLmxvZ2luU2VydmljZS5nZXRMb2dvU3JjKCk7XG5cbiAgICB0aGlzLmxvZ2luTGlicmFyeUlwU2VydmljZS5sb2dpbklwJC5waXBlKGZpcnN0KCkpLnN1YnNjcmliZSgobG9naW5JcDogTG9naW5JcCkgPT4ge1xuICAgICAgaWYgKGxvZ2luSXApIHtcbiAgICAgICAgdGhpcy5sb2dpbkluZm8gPSBsb2dpbklwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0NvdWxkIG5vdCBnZXQgTG9naW4gSW5mb3JtYXRpb24gZnJvbSBzZXJ2ZXIsIHVzaW5nIGRlZmF1bHRzLicpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMubG9naW5MaWJyYXJ5SXBTZXJ2aWNlLmdldExvZ2luSXAoKTtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnY3VycmVudFVzZXInKTtcbiAgICB0aGlzLmxvZ2luU2VydmljZS5zZXRDdXJyZW50VXNlcihuZXcgVXNlcigpKTtcbiAgICB0aGlzLmVycm9yTWVzc2FnZSA9IG51bGw7XG4gIH1cblxuICBsb2dpbigpIHtcbiAgICAvLyBSZXRyaWV2ZSBhIHJlZmVyZW5jZSB0byB0aGUgY3VycmVudCB1c2VyIGZyb20gdGhlIGxvZ2luU2VydmljZVxuICAgIGNvbnN0IHVzZXI6IFVzZXIgPSB0aGlzLmdldFVzZXIoKTtcbiAgICBpZiAodXNlci51c2VybmFtZSAmJiB0aGlzLnVzZXJQYXNzd29yZCkge1xuICAgICAgLy8gQmFzZTY0IGVuY29kZSB0aGUgcGFzc3dvcmRcbiAgICAgIHVzZXIucGFzc3dvcmQgPSBidG9hKHRoaXMudXNlclBhc3N3b3JkKTtcbiAgICAgIHRoaXMubG9naW5TZXJ2aWNlLmxvZ2luJC5waXBlKGZpcnN0KCkpLnN1YnNjcmliZSgodXNyOiBVc2VyKSA9PiB7XG4gICAgICAgIGlmICghdXNyKSB7XG4gICAgICAgICAgLypcbiAgICAgICAgICAgICBBbnkgZXJyb3IgPSB0aGlzIG1lc3NhZ2UuIFRoaXMgaXMgYSBzZWN1cml0eSBiZXN0IHByYWN0aWNlIGFzIHlvdVxuICAgICAgICAgICAgIGRvIG5vdCB3YW50IHRvIGdpdmUgdGhlIHVzZXIgYW55IGluZm9ybWF0aW9uIHRoYXQgdGhleSBjYW4gdXNlIHRvXG4gICAgICAgICAgICAgZ2V0IGludG8gdGhlIHN5c3RlbS5cbiAgICAgICAgICAgICBXaXBlIG91dCB0aGUgZW5jb2RlZCBwYXNzd29yZFxuICAgICAgICAgICAqL1xuICAgICAgICAgIHVzZXIucGFzc3dvcmQgPSBudWxsO1xuICAgICAgICAgIHRoaXMudXNlclBhc3N3b3JkID0gbnVsbDtcbiAgICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IHRoaXMuTk9fRElDRTtcbiAgICAgICAgICB0aGlzLmxvZ2luRXJyb3JlZCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFdpcGUgb3V0IHRoZSBlbmNvZGVkIHBhc3N3b3JkXG4gICAgICAgICAgdXNlci5wYXNzd29yZCA9IG51bGw7XG4gICAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBudWxsO1xuICAgICAgICAgIHRoaXMudXNlclBhc3N3b3JkID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLmxvZ2luU2VydmljZS5sb2dJbih1c2VyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSB0aGlzLk5PX0RJQ0U7XG4gICAgICB0aGlzLmxvZ2luRXJyb3JlZCgpO1xuICAgIH1cbiAgfVxuXG4gIGxvZ2luRXJyb3JlZCgpIHtcbiAgICB0aGlzLnNldEZvY3VzVG9Vc2VybmFtZUZpZWxkKCk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5zZXRGb2N1c1RvVXNlcm5hbWVGaWVsZCgpO1xuICB9XG5cbiAgcHVibGljIHNldEZvY3VzVG9Vc2VybmFtZUZpZWxkKCkge1xuICAgIGlmICh0aGlzLnZjICYmIHRoaXMudmMuZmlyc3QgJiYgdGhpcy52Yy5maXJzdC5uYXRpdmVFbGVtZW50KSB7XG4gICAgICB0aGlzLnZjLmZpcnN0Lm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==