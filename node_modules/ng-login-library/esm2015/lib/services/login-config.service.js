/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class LoginConfigService {
    /**
     * @return {?}
     */
    getAppid() {
        return this.appid;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setAppid(value) {
        this.appid = value;
    }
    /**
     * @return {?}
     */
    getTitle() {
        return this.title;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setTitle(value) {
        this.title = value;
    }
    /**
     * @return {?}
     */
    getLoginUrl() {
        return this.loginUrl;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setLoginUrl(value) {
        this.loginUrl = value;
    }
    /**
     * @return {?}
     */
    getLoginApiUrl() {
        return this.loginApiUrl;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setLoginApiUrl(value) {
        this.loginApiUrl = value;
    }
    /**
     * @return {?}
     */
    getLoginIpUrl() {
        return this.loginIpUrl;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setLoginIpUrl(value) {
        this.loginIpUrl = value;
    }
    /**
     * @return {?}
     */
    getLogoutUrl() {
        return this.logoutUrl;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setLogoutUrl(value) {
        this.logoutUrl = value;
    }
    /**
     * @return {?}
     */
    getLogoSrc() {
        return this.logoSrc;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setLogoSrc(value) {
        this.logoSrc = value;
    }
}
LoginConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ LoginConfigService.ngInjectableDef = i0.defineInjectable({ factory: function LoginConfigService_Factory() { return new LoginConfigService(); }, token: LoginConfigService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    LoginConfigService.prototype.title;
    /**
     * @type {?}
     * @private
     */
    LoginConfigService.prototype.loginUrl;
    /**
     * @type {?}
     * @private
     */
    LoginConfigService.prototype.loginApiUrl;
    /**
     * @type {?}
     * @private
     */
    LoginConfigService.prototype.loginIpUrl;
    /**
     * @type {?}
     * @private
     */
    LoginConfigService.prototype.logoutUrl;
    /**
     * @type {?}
     * @private
     */
    LoginConfigService.prototype.logoSrc;
    /**
     * @type {?}
     * @private
     */
    LoginConfigService.prototype.appid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1sb2dpbi1saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2xvZ2luLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUt6QyxNQUFNLE9BQU8sa0JBQWtCOzs7O0lBVXRCLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7Ozs7SUFFTSxRQUFRLENBQUMsS0FBYTtRQUMzQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDOzs7O0lBRU0sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7OztJQUVNLFFBQVEsQ0FBQyxLQUFhO1FBQzNCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFTSxXQUFXO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDOzs7OztJQUVNLFdBQVcsQ0FBQyxLQUFhO1FBQzlCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFTSxjQUFjO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDOzs7OztJQUVNLGNBQWMsQ0FBQyxLQUFhO1FBQ2pDLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0lBQzNCLENBQUM7Ozs7SUFFTSxhQUFhO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDOzs7OztJQUVNLGFBQWEsQ0FBQyxLQUFhO1FBQ2hDLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7Ozs7SUFFTSxZQUFZO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDOzs7OztJQUVNLFlBQVksQ0FBQyxLQUFhO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFFTSxVQUFVO1FBQ2YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRU0sVUFBVSxDQUFDLEtBQWE7UUFDN0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQzs7O1lBbkVGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs7Ozs7SUFHQyxtQ0FBc0I7Ozs7O0lBQ3RCLHNDQUF5Qjs7Ozs7SUFDekIseUNBQTRCOzs7OztJQUM1Qix3Q0FBMkI7Ozs7O0lBQzNCLHVDQUEwQjs7Ozs7SUFDMUIscUNBQXdCOzs7OztJQUN4QixtQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBMb2dpbkNvbmZpZ1NlcnZpY2Uge1xuXG4gIHByaXZhdGUgdGl0bGU6IHN0cmluZztcbiAgcHJpdmF0ZSBsb2dpblVybDogc3RyaW5nO1xuICBwcml2YXRlIGxvZ2luQXBpVXJsOiBzdHJpbmc7XG4gIHByaXZhdGUgbG9naW5JcFVybDogc3RyaW5nO1xuICBwcml2YXRlIGxvZ291dFVybDogc3RyaW5nO1xuICBwcml2YXRlIGxvZ29TcmM6IHN0cmluZztcbiAgcHJpdmF0ZSBhcHBpZDogc3RyaW5nO1xuXG4gIHB1YmxpYyBnZXRBcHBpZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmFwcGlkO1xuICB9XG5cbiAgcHVibGljIHNldEFwcGlkKHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmFwcGlkID0gdmFsdWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0VGl0bGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy50aXRsZTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRUaXRsZSh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy50aXRsZSA9IHZhbHVlO1xuICB9XG5cbiAgcHVibGljIGdldExvZ2luVXJsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubG9naW5Vcmw7XG4gIH1cblxuICBwdWJsaWMgc2V0TG9naW5VcmwodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMubG9naW5VcmwgPSB2YWx1ZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRMb2dpbkFwaVVybCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmxvZ2luQXBpVXJsO1xuICB9XG5cbiAgcHVibGljIHNldExvZ2luQXBpVXJsKHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmxvZ2luQXBpVXJsID0gdmFsdWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0TG9naW5JcFVybCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmxvZ2luSXBVcmw7XG4gIH1cblxuICBwdWJsaWMgc2V0TG9naW5JcFVybCh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5sb2dpbklwVXJsID0gdmFsdWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0TG9nb3V0VXJsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubG9nb3V0VXJsO1xuICB9XG5cbiAgcHVibGljIHNldExvZ291dFVybCh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5sb2dvdXRVcmwgPSB2YWx1ZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRMb2dvU3JjKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubG9nb1NyYztcbiAgfVxuXG4gIHB1YmxpYyBzZXRMb2dvU3JjKHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmxvZ29TcmMgPSB2YWx1ZTtcbiAgfVxufVxuIl19