{"version":3,"sources":["ng://ngx-pipes/src/pipes/array/diff.ts","ng://ngx-pipes/src/pipes/array/initial.ts","ng://ngx-pipes/src/pipes/array/flatten.ts","ng://ngx-pipes/src/pipes/array/intersection.ts","node_modules/tslib/tslib.es6.js","ng://ngx-pipes/src/pipes/helpers/helpers.ts","ng://ngx-pipes/src/pipes/array/reverse.ts","ng://ngx-pipes/src/pipes/array/tail.ts","ng://ngx-pipes/src/pipes/array/truthify.ts","ng://ngx-pipes/src/pipes/array/union.ts","ng://ngx-pipes/src/pipes/array/unique.ts","ng://ngx-pipes/src/pipes/array/without.ts","ng://ngx-pipes/src/pipes/array/pluck.ts","ng://ngx-pipes/src/pipes/array/shuffle.ts","ng://ngx-pipes/src/pipes/array/every.ts","ng://ngx-pipes/src/pipes/array/some.ts","ng://ngx-pipes/src/pipes/array/sample.ts","ng://ngx-pipes/src/pipes/array/group-by.ts","ng://ngx-pipes/src/pipes/array/filter-by.ts","ng://ngx-pipes/src/pipes/array/order-by.ts","ng://ngx-pipes/src/pipes/array/group-by-impure.ts","ng://ngx-pipes/src/pipes/array/filter-by-impure.ts","ng://ngx-pipes/src/pipes/array/order-by-impure.ts","ng://ngx-pipes/src/pipes/array/range.ts","ng://ngx-pipes/src/pipes/array/index.ts","ng://ngx-pipes/src/pipes/object/keys.ts","ng://ngx-pipes/src/pipes/object/values.ts","ng://ngx-pipes/src/pipes/object/pairs.ts","ng://ngx-pipes/src/pipes/object/pick.ts","ng://ngx-pipes/src/pipes/object/omit.ts","ng://ngx-pipes/src/pipes/object/invert.ts","ng://ngx-pipes/src/pipes/object/invert-by.ts","ng://ngx-pipes/src/pipes/object/diff-obj.ts","ng://ngx-pipes/src/pipes/object/index.ts","ng://ngx-pipes/src/pipes/string/a-or-an.ts","ng://ngx-pipes/src/pipes/string/ucwords.ts","ng://ngx-pipes/src/pipes/string/ltrim.ts","ng://ngx-pipes/src/pipes/string/repeat.ts","ng://ngx-pipes/src/pipes/string/rtrim.ts","ng://ngx-pipes/src/pipes/string/scan.ts","ng://ngx-pipes/src/pipes/string/shorten.ts","ng://ngx-pipes/src/pipes/string/strip-tags.ts","ng://ngx-pipes/src/pipes/string/trim.ts","ng://ngx-pipes/src/pipes/string/ucfirst.ts","ng://ngx-pipes/src/pipes/string/slugify.ts","ng://ngx-pipes/src/pipes/string/camelize.ts","ng://ngx-pipes/src/pipes/string/latinise.ts","ng://ngx-pipes/src/pipes/string/lines.ts","ng://ngx-pipes/src/pipes/string/underscore.ts","ng://ngx-pipes/src/pipes/string/match.ts","ng://ngx-pipes/src/pipes/string/test.ts","ng://ngx-pipes/src/pipes/string/lpad.ts","ng://ngx-pipes/src/pipes/string/rpad.ts","ng://ngx-pipes/src/pipes/string/pluralize.ts","ng://ngx-pipes/src/pipes/string/wrap.ts","ng://ngx-pipes/src/pipes/string/index.ts","ng://ngx-pipes/src/pipes/math/max.ts","ng://ngx-pipes/src/pipes/math/min.ts","ng://ngx-pipes/src/pipes/math/percentage.ts","ng://ngx-pipes/src/pipes/math/sum.ts","ng://ngx-pipes/src/pipes/math/floor.ts","ng://ngx-pipes/src/pipes/math/round.ts","ng://ngx-pipes/src/pipes/math/sqrt.ts","ng://ngx-pipes/src/pipes/math/pow.ts","ng://ngx-pipes/src/pipes/math/ceil.ts","ng://ngx-pipes/src/pipes/math/degrees.ts","ng://ngx-pipes/src/pipes/math/bytes.ts","ng://ngx-pipes/src/pipes/math/radians.ts","ng://ngx-pipes/src/pipes/math/index.ts","ng://ngx-pipes/src/pipes/boolean/is-defined.ts","ng://ngx-pipes/src/pipes/boolean/is-null.ts","ng://ngx-pipes/src/pipes/boolean/is-undefined.ts","ng://ngx-pipes/src/pipes/boolean/is-string.ts","ng://ngx-pipes/src/pipes/boolean/is-function.ts","ng://ngx-pipes/src/pipes/boolean/is-number.ts","ng://ngx-pipes/src/pipes/boolean/is-array.ts","ng://ngx-pipes/src/pipes/boolean/is-object.ts","ng://ngx-pipes/src/pipes/boolean/is-greater-equal-than.ts","ng://ngx-pipes/src/pipes/boolean/is-greater-than.ts","ng://ngx-pipes/src/pipes/boolean/is-less-equal-than.ts","ng://ngx-pipes/src/pipes/boolean/is-equal-to.ts","ng://ngx-pipes/src/pipes/boolean/is-not-equal-to.ts","ng://ngx-pipes/src/pipes/boolean/is-identical-to.ts","ng://ngx-pipes/src/pipes/boolean/is-not-identical-to.ts","ng://ngx-pipes/src/pipes/boolean/is-less-than.ts","ng://ngx-pipes/src/pipes/boolean/index.ts","ng://ngx-pipes/src/pipes/date/time-ago.ts","ng://ngx-pipes/src/pipes/date/index.ts","ng://ngx-pipes/src/pipes/index.ts"],"names":["DiffPipe","prototype","transform","input","args","_i","arguments","length","Array","isArray","reduce","d","c","filter","e","indexOf","Pipe","name","InitialPipe","num","slice","FlattenPipe","shallow","concat","apply","this","flatten","array","_this","arr","elm","IntersectionPipe","n","extendStatics","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__read","o","m","Symbol","iterator","r","i","call","ar","next","done","push","value","error","__spread","isUndefined","isFunction","isNumber","isString","isObject","isNumberFinite","isFinite","isVowel","letter","ucFirst","text","_a","split","part","tslib_1.__spread","toLowerCase","map","word","toUpperCase","join","applyPrecision","precision","Math","round","tho","pow","extractDeepPropertyByMapKey","obj","keys","head","shift","prop","key","undefined","getKeysTwoObjects","other","index","ReversePipe","reverse","TailPipe","TrurthifyPipe","UnionPipe","newArr","currArr","noDupArr","curr","UniquePipe","propertyName","uniques","JSON","stringify","WithoutPipe","PluckPipe","pure","ShufflePipe","shuffled","j","floor","random","EveryPipe","predicate","every","SomePipe","some","SamplePipe","len","sample","tmp","l","splice","GroupByPipe","discriminator","delimiter","groupBy","list","acc","payload","extractKeyByDiscriminator","k","FilterByPipe","props","search","strict","isBoolean","terms","String","term","extractDeepPropertyByParentMapKey","tail","pop","parent","str","strValue","OrderByPipe","config","out","sort","a","extractFromConfig","asc","pos","orderCompare","sign","simpleSort","bind","localeCompare","first","second","substr","replace","GroupByImpurePipe","_super","tslib_1.__extends","FilterByImpurePipe","OrderByImpurePipe","RangePipe","start","count","step","fill","v","ARRAY_PIPES","NgArrayPipesModule","NgModule","declarations","imports","exports","KeysPipe","ValuesPipe","PairsPipe","PickPipe","assign","OmitPipe","InvertPipe","InvertByPipe","cb","DiffObjPipe","original","diff","isDeepEqual","OBJECT_PIPES","NgObjectPipesModule","AorAnPipe","irregularMap","herb","honor","honorable","hour","mba","msc","m.sc.","unicorn","stringEntity","firstWord","trim","toLocaleLowerCase","UcWordsPipe","sub","LeftTrimPipe","chars","RegExp","RepeatPipe","separator","RangeError","repeat","RightTrimPipe","ScanPipe","match","ShortenPipe","suffix","wordBreak","StripTagsPipe","allowedTags","TrimPipe","UcFirstPipe","SlugifyPipe","CamelizePipe","LatinisePipe","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","ẞ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ß","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","LinesPipe","UnderscorePipe","MatchPipe","pattern","flags","TestPipe","test","LeftPadPipe","padCharacter","RightPadPipe","MakePluralStringPipe","addendum","alga","alumna","alumnus","analysis","antenna","appendix","aquarium","arch","axe","axis","bacillus","bacterium","basis","batch","beach","beau","bison","brush","buffalo","bureau","bus","cactus","calf","chateau","cherry","child","church","circus","cod","corps","corpus","crisis","criterion","curriculum","datum","deer","diagnosis","die","domino","dwarf","echo","elf","ellipsis","embargo","emphasis","erratum","fax","fireman","fish","flush","focus","foot","formula","fungus","genus","goose","grafito","half","hero","hoax","hoof","hypothesis","kiss","knife","leaf","life","loaf","louse","man","mango","matrix","means","medium","memorandum","millennium","moose","mosquito","motto","mouse","nebula","neurosis","nucleus","oasis","octopus","ovum","ox","paralysis","parenthesis","person","phenomenon","plateau","potato","quiz","radius","reflex","runner-up","scampo","scarf","scissors","scratch","self","series","sheaf","sheep","shelf","son-in-law","species","splash","stimulus","stitch","stratum","syllabus","symposium","synopsis","synthesis","tableau","tax","that","thesis","thief","tomato","tooth","tornado","torpedo","vertebra","veto","vita","volcano","waltz","wash","watch","wharf","wife","wolf","woman","zero","singularEntity","quantity","lastWord","toLocaleUpperCase","WrapPipe","prefix","STRING_PIPES","NgStringPipesModule","MaxPipe","max","MinPipe","min","PercentagePipe","total","isNaN","percent","SumPipe","sum","FloorPipe","RoundPipe","SqrtPipe","sqrt","PowerPipe","power","CeilPipe","ceil","DegreesPipe","radians","PI","NaN","BytesPipe","dictionary","type","format","find","calc","RadiansPipe","degrees","MATH_PIPES","NgMathPipesModule","IsDefinedPipe","IsNullPipe","IsUndefinedPipe","IsStringPipe","IsFunctionPipe","IsNumberPipe","IsArrayPipe","IsObjectPipe","IsGreaterEqualThanPipe","IsGreaterThanPipe","IsLessEqualThanPipe","IsEqualToPipe","IsNotEqualToPipe","IsIdenticalToPipe","IsNotIdenticalToPipe","IsLessThanPipe","BOOLEAN_PIPES","NgBooleanPipesModule","TimeAgoPipe","inputDate","getTime","toDate","past","now","Date","MAPPER","ms","div","YEAR_MS","unit","single","many","DATE_PIPES","NgDatePipesModule","NgPipesModule"],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'diff' })\nexport class DiffPipe implements PipeTransform {\n  transform(input: any[], ...args: any[]): any[];\n  transform<T>(input: T, ...args: any[]): T;\n\n  transform(input: any, ...args: any[]): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    // tslint:disable-next-line no-bitwise\n    return args.reduce((d, c) => d.filter((e: any) => !~c.indexOf(e)), input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'initial' })\nexport class InitialPipe implements PipeTransform {\n  transform(input: any[], num: number): any[];\n  transform(input: any): any;\n\n  transform(input: any, num: number = 0): any[] {\n    return Array.isArray(input) ? input.slice(0, input.length - num) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'flatten' })\nexport class FlattenPipe implements PipeTransform {\n  transform(input: any[], shallow?: boolean): any[];\n  transform<T>(input: T, shallow?: boolean): T;\n\n  transform(input: any, shallow: boolean = false): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    return shallow ? [].concat.apply([], input) : this.flatten(input);\n  }\n\n  private flatten(array: any[]): any[] {\n    return array.reduce((arr: any[], elm: any) => {\n      if (Array.isArray(elm)) {\n        return arr.concat(this.flatten(elm));\n      }\n\n      return arr.concat(elm);\n    }, []);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'intersection' })\nexport class IntersectionPipe implements PipeTransform {\n  transform(input: any[], ...args: any[]): any[];\n  transform<T>(input: T, ...args: any[]): T;\n\n  transform(input: any, ...args: any[]): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    // tslint:disable-next-line no-bitwise\n    return args.reduce((n, c) => n.filter((e: any) => !!~c.indexOf(e)), input);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isUndefined(value: any) {\n  return typeof value === 'undefined';\n}\n\nexport function isFunction(value: any) {\n  return typeof value === 'function';\n}\n\nexport function isNumber(value: any) {\n  return typeof value === 'number';\n}\n\nexport function isString(value: any) {\n  return typeof value === 'string';\n}\n\nexport function isBoolean(value: any) {\n  return typeof value === 'boolean';\n}\n\nexport function isObject(value: any) {\n  return value !== null && typeof value === 'object';\n}\n\nexport function isNumberFinite(value: any) {\n  return isNumber(value) && isFinite(value);\n}\n\nexport function isVowel(letter: string): boolean {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n\n  return vowels.indexOf(letter) !== -1;\n}\n\nexport function ucFirst(text: string) {\n  const [part, ...split] = text.split(/\\s/g);\n\n  const ucd = part\n    .toLowerCase()\n    .split(/(?=['|-])/g)\n    .map(\n      (word: any) =>\n        word.indexOf('-') + word.indexOf(\"'\") > -2\n          ? word.slice(0, 2).toUpperCase() + word.slice(2)\n          : word.slice(0, 1).toUpperCase() + word.slice(1)\n    )\n    .join('');\n\n  return [ucd, ...split].join(' ');\n}\n\nexport function applyPrecision(num: number, precision: number) {\n  if (precision <= 0) {\n    return Math.round(num);\n  }\n\n  const tho = 10 ** precision;\n\n  return Math.round(num * tho) / tho;\n}\n\nexport function extractDeepPropertyByMapKey(obj: any, map: string): any {\n  const keys = map.split('.');\n  const head = keys.shift();\n\n  return keys.reduce((prop: any, key: string) => {\n    return !isUndefined(prop) && !isUndefined(prop[key]) ? prop[key] : undefined;\n  }, obj[head || '']);\n}\n\nexport function extractDeepPropertyByParentMapKey(obj: any, map: string): any {\n  const keys = map.split('.');\n  const tail = keys.pop();\n  const props = extractDeepPropertyByMapKey(obj, keys.join('.'));\n\n  return { props, tail };\n}\n\nexport function getKeysTwoObjects(obj: any, other: any): any {\n  return [...Object.keys(obj), ...Object.keys(other)].filter((key, index, array) => array.indexOf(key) === index);\n}\n\nexport function isDeepEqual(obj: any, other: any): any {\n  if (!isObject(obj) || !isObject(other)) {\n    return obj === other;\n  }\n\n  return getKeysTwoObjects(obj, other).every(\n    (key: any): boolean => {\n      if (!isObject(obj[key]) && !isObject(other[key])) {\n        return obj[key] === other[key];\n      }\n      if (!isObject(obj[key]) || !isObject(other[key])) {\n        return false;\n      }\n\n      return isDeepEqual(obj[key], other[key]);\n    }\n  );\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'reverse' })\nexport class ReversePipe implements PipeTransform {\n  transform(input: any): any {\n    if (isString(input)) {\n      return input\n        .split('')\n        .reverse()\n        .join('');\n    }\n\n    return Array.isArray(input) ? input.slice().reverse() : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'tail' })\nexport class TailPipe implements PipeTransform {\n  transform(input: any[], num?: number): any[];\n  transform<T>(input: T, num?: number): T;\n\n  transform(input: any, num: number = 0): any {\n    return Array.isArray(input) ? input.slice(num) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'truthify' })\nexport class TrurthifyPipe implements PipeTransform {\n  transform(input: any[]): any[];\n  transform<T>(input: T): T;\n\n  transform(input: any): any {\n    return Array.isArray(input) ? input.filter(e => !!e) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'union' })\nexport class UnionPipe implements PipeTransform {\n  transform(input: any[], args?: any[]): any[];\n  transform<T>(input: T, args?: any[]): T;\n\n  transform(input: any, args: any[] = []): any {\n    if (!Array.isArray(input) || !Array.isArray(args)) {\n      return input;\n    }\n\n    return args.reduce((newArr, currArr) => {\n      return newArr.concat(\n        currArr.reduce((noDupArr: any[], curr: any) => {\n          // tslint:disable-next-line:no-bitwise\n          return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr) ? noDupArr.concat([curr]) : noDupArr;\n        }, [])\n      );\n    }, input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isObject, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'unique' })\nexport class UniquePipe implements PipeTransform {\n  transform(input: any[], args?: string | undefined): any[];\n  transform<T>(input: T, args?: string | undefined): T;\n\n  transform(input: any, propertyName?: string | undefined): any {\n    const uniques: boolean[] = [];\n\n    return Array.isArray(input)\n      ? isUndefined(propertyName)\n        ? input.filter((e, i) => input.indexOf(e) === i)\n        : input.filter((e, i) => {\n            let value = extractDeepPropertyByMapKey(e, propertyName);\n            value = isObject(value) ? JSON.stringify(value) : value;\n\n            if (isUndefined(value) || uniques[value]) {\n              return false;\n            }\n\n            uniques[value] = true;\n\n            return true;\n          })\n      : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'without' })\nexport class WithoutPipe implements PipeTransform {\n  transform(input: any[], args?: any[]): any[];\n  transform(input: any, args?: any[]): any;\n\n  transform(input: any, args: any[] = []): any[] {\n    return Array.isArray(input)\n      ? // tslint:disable-next-line:no-bitwise\n        input.filter(e => !~args.indexOf(e))\n      : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'pluck', pure: false })\nexport class PluckPipe implements PipeTransform {\n  transform(input: any[], map: string): any[];\n  transform(input: any, map: string): any;\n  transform<T>(input: T, map: string): T;\n\n  transform(input: any, map: string): any {\n    if (Array.isArray(input)) {\n      return input.map(e => extractDeepPropertyByMapKey(e, map));\n    }\n\n    return isObject(input) ? extractDeepPropertyByMapKey(input, map) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'shuffle' })\nexport class ShufflePipe implements PipeTransform {\n  transform(input: any[]): any[];\n  transform<T>(input: T): T;\n\n  // Using a version of the Fisher-Yates shuffle algorithm\n  // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n  transform(input: any): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    const shuffled = [...input];\n    const n = input.length - 1;\n    for (let i = 0; i < n; ++i) {\n      const j = Math.floor(Math.random() * (n - i + 1)) + i;\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n\n    return shuffled;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'every' })\nexport class EveryPipe implements PipeTransform {\n  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): boolean | any[] {\n    return Array.isArray(input) ? input.every(predicate) : false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'some' })\nexport class SomePipe implements PipeTransform {\n  transform(input: any[], predicate: (value: any, index: number, array: any[]) => boolean): boolean;\n  transform<T>(input: T, predicate: (value: any, index: number, array: any[]) => boolean): T;\n\n  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): any {\n    return Array.isArray(input) ? input.some(predicate) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'sample' })\nexport class SamplePipe implements PipeTransform {\n  transform(input: any[], len?: number): any[];\n  transform<T>(input: T, len?: number): T;\n\n  transform(input: any, len: number = 1): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    let sample: any[] = [];\n    const tmp = [...input];\n    const l = len < tmp.length ? len : tmp.length;\n    for (let i = 0; i < l; ++i) {\n      sample = sample.concat(tmp.splice(Math.floor(Math.random() * tmp.length), 1));\n    }\n\n    return sample;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isFunction } from '../helpers/helpers';\n\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe implements PipeTransform {\n  transform(input: any, discriminator: any = [], delimiter: string = '|'): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    return this.groupBy(input, discriminator, delimiter);\n  }\n\n  private groupBy(list: any[], discriminator: any, delimiter: string) {\n    return list.reduce((acc: any, payload: string) => {\n      const key = this.extractKeyByDiscriminator(discriminator, payload, delimiter);\n\n      acc[key] = Array.isArray(acc[key]) ? acc[key].concat([payload]) : [payload];\n\n      return acc;\n    }, {});\n  }\n\n  private extractKeyByDiscriminator(discriminator: any, payload: string, delimiter: string) {\n    if (isFunction(discriminator)) {\n      return (<Function>discriminator)(payload);\n    }\n\n    if (Array.isArray(discriminator)) {\n      return discriminator.map(k => extractDeepPropertyByMapKey(payload, k)).join(delimiter);\n    }\n\n    return extractDeepPropertyByMapKey(payload, <string>discriminator);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  extractDeepPropertyByMapKey,\n  extractDeepPropertyByParentMapKey,\n  isBoolean,\n  isNumberFinite,\n  isString,\n  isUndefined,\n} from '../helpers/helpers';\n\n// tslint:disable no-bitwise\n@Pipe({ name: 'filterBy' })\nexport class FilterByPipe implements PipeTransform {\n  transform(input: any[], props: Array<string>, search?: any, strict?: boolean): any[];\n  transform<T>(input: T, props: Array<string>, search?: any, strict?: boolean): T;\n  transform(input: any, props: Array<string>, search: any = '', strict: boolean = false): any {\n    if (\n      !Array.isArray(input) ||\n      (!Array.isArray(search) && !isString(search) && !isNumberFinite(search) && !isBoolean(search))\n    ) {\n      return input;\n    }\n\n    const terms = String(search)\n      .toLowerCase()\n      .split(',');\n\n    return input.filter(obj => {\n      return props.some(prop => {\n        return terms.some(term => {\n          const value = extractDeepPropertyByMapKey(obj, prop);\n          /* tslint:disable */\n          const { props, tail } = extractDeepPropertyByParentMapKey(obj, prop);\n\n          if (isUndefined(value) && !isUndefined(props) && Array.isArray(props)) {\n            return props.some(parent => {\n              const str = String(parent[tail]).toLowerCase();\n\n              return strict ? str === term : !!~str.indexOf(term);\n            });\n          }\n\n          if (isUndefined(value)) {\n            return false;\n          }\n\n          const strValue: string = String(value).toLowerCase();\n\n          return strict ? term === strValue : !!~strValue.indexOf(term);\n        });\n      });\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isString, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'orderBy' })\nexport class OrderByPipe implements PipeTransform {\n  transform(input: any[], config?: any): any[];\n  transform<T>(input: T, config?: any): T;\n\n  transform(input: any, config?: any): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    const out = [...input];\n\n    // sort by multiple properties\n    if (Array.isArray(config)) {\n      return out.sort((a, b) => {\n        const l = config.length;\n        for (let i = 0; i < l; ++i) {\n          const [prop, asc] = OrderByPipe.extractFromConfig(config[i]);\n          const pos = OrderByPipe.orderCompare(prop, asc, a, b);\n          if (pos !== 0) {\n            return pos;\n          }\n        }\n\n        return 0;\n      });\n    }\n\n    // sort by a single property value\n    if (isString(config)) {\n      const [prop, asc, sign] = OrderByPipe.extractFromConfig(config);\n\n      if (config.length === 1) {\n        // tslint:disable-next-line:switch-default\n        switch (sign) {\n          case '+':\n            return out.sort(OrderByPipe.simpleSort.bind(this));\n          case '-':\n            return out.sort(OrderByPipe.simpleSort.bind(this)).reverse();\n        }\n      }\n\n      return out.sort(OrderByPipe.orderCompare.bind(this, prop, asc));\n    }\n\n    // default sort by value\n    return out.sort(OrderByPipe.simpleSort.bind(this));\n  }\n\n  private static simpleSort(a: any, b: any) {\n    return isString(a) && isString(b) ? a.toLowerCase().localeCompare(b.toLowerCase()) : a - b;\n  }\n\n  private static orderCompare(prop: string, asc: boolean, a: any, b: any) {\n    const first = extractDeepPropertyByMapKey(a, prop);\n    const second = extractDeepPropertyByMapKey(b, prop);\n\n    if (first === second) {\n      return 0;\n    }\n\n    if (isUndefined(first) || first === '') {\n      return 1;\n    }\n\n    if (isUndefined(second) || second === '') {\n      return -1;\n    }\n\n    if (isString(first) && isString(second)) {\n      const pos = first.toLowerCase().localeCompare(second.toLowerCase());\n\n      return asc ? pos : -pos;\n    }\n\n    return asc ? first - second : second - first;\n  }\n\n  private static extractFromConfig(config: any) {\n    const sign = config.substr(0, 1);\n    const prop = config.replace(/^[-+]/, '');\n    const asc = sign !== '-';\n\n    return [prop, asc, sign];\n  }\n}\n","import { Pipe } from '@angular/core';\nimport { GroupByPipe } from './group-by';\n\n// tslint:disable use-pipe-transform-interface\n@Pipe({ name: 'groupByImpure', pure: false })\nexport class GroupByImpurePipe extends GroupByPipe {}\n","import { Pipe } from '@angular/core';\nimport { FilterByPipe } from './filter-by';\n\n// tslint:disable use-pipe-transform-interface\n@Pipe({ name: 'filterByImpure', pure: false })\nexport class FilterByImpurePipe extends FilterByPipe {}\n","import { Pipe } from '@angular/core';\nimport { OrderByPipe } from './order-by';\n\n// tslint:disable use-pipe-transform-interface\n@Pipe({ name: 'orderByImpure', pure: false })\nexport class OrderByImpurePipe extends OrderByPipe {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'range' })\nexport class RangePipe implements PipeTransform {\n  transform(start: number = 1, count: number = 0, step: number = 1): any {\n    return Array(count)\n      .fill('')\n      .map((v, i) => step * i + start);\n  }\n}\n","import { DiffPipe } from './diff';\nimport { InitialPipe } from './initial';\nimport { FlattenPipe } from './flatten';\nimport { IntersectionPipe } from './intersection';\nimport { ReversePipe } from './reverse';\nimport { TailPipe } from './tail';\nimport { TrurthifyPipe } from './truthify';\nimport { UnionPipe } from './union';\nimport { UniquePipe } from './unique';\nimport { WithoutPipe } from './without';\nimport { PluckPipe } from './pluck';\nimport { ShufflePipe } from './shuffle';\nimport { EveryPipe } from './every';\nimport { SomePipe } from './some';\nimport { SamplePipe } from './sample';\nimport { GroupByPipe } from './group-by';\nimport { FilterByPipe } from './filter-by';\nimport { OrderByPipe } from './order-by';\nimport { NgModule } from '@angular/core';\nimport { GroupByImpurePipe } from './group-by-impure';\nimport { FilterByImpurePipe } from './filter-by-impure';\nimport { OrderByImpurePipe } from './order-by-impure';\nimport { RangePipe } from './range';\n\nconst ARRAY_PIPES = [\n  DiffPipe,\n  FlattenPipe,\n  InitialPipe,\n  IntersectionPipe,\n  ReversePipe,\n  TailPipe,\n  TrurthifyPipe,\n  UnionPipe,\n  UniquePipe,\n  WithoutPipe,\n  PluckPipe,\n  ShufflePipe,\n  EveryPipe,\n  SomePipe,\n  SamplePipe,\n  GroupByPipe,\n  GroupByImpurePipe,\n  FilterByPipe,\n  FilterByImpurePipe,\n  OrderByPipe,\n  OrderByImpurePipe,\n  RangePipe,\n];\n\n@NgModule({\n  declarations: ARRAY_PIPES,\n  imports: [],\n  exports: ARRAY_PIPES,\n})\nexport class NgArrayPipesModule {}\n\nexport { DiffPipe } from './diff';\nexport { InitialPipe } from './initial';\nexport { FlattenPipe } from './flatten';\nexport { IntersectionPipe } from './intersection';\nexport { ReversePipe } from './reverse';\nexport { TailPipe } from './tail';\nexport { TrurthifyPipe } from './truthify';\nexport { UnionPipe } from './union';\nexport { UniquePipe } from './unique';\nexport { WithoutPipe } from './without';\nexport { PluckPipe } from './pluck';\nexport { ShufflePipe } from './shuffle';\nexport { EveryPipe } from './every';\nexport { SomePipe } from './some';\nexport { SamplePipe } from './sample';\nexport { GroupByPipe } from './group-by';\nexport { FilterByPipe } from './filter-by';\nexport { OrderByPipe } from './order-by';\nexport { GroupByImpurePipe } from './group-by-impure';\nexport { FilterByImpurePipe } from './filter-by-impure';\nexport { OrderByImpurePipe } from './order-by-impure';\nexport { RangePipe } from './range';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'keys' })\nexport class KeysPipe implements PipeTransform {\n  transform(obj: any): any[] {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'values' })\nexport class ValuesPipe implements PipeTransform {\n  transform(obj: any): any[] {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj).map(k => obj[k]);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'pairs' })\nexport class PairsPipe implements PipeTransform {\n  transform(obj: any): any[] {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj).map(k => [k, obj[k]]);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'pick' })\nexport class PickPipe implements PipeTransform {\n  transform(obj: any, ...args: Array<string>): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return args.reduce((o, k) => {\n      return Object.assign(o, { [k]: obj[k] });\n    }, {});\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'omit' })\nexport class OmitPipe implements PipeTransform {\n  transform(obj: any, ...args: Array<string>): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return (\n      Object.keys(obj)\n        // tslint:disable-next-line:no-bitwise\n        .filter(k => !~args.indexOf(k))\n        .reduce((o, k) => {\n          return Object.assign(o, { [k]: obj[k] });\n        }, {})\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'invert' })\nexport class InvertPipe implements PipeTransform {\n  transform(obj: any): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj).reduce((o, k) => {\n      return Object.assign(o, { [obj[k]]: k });\n    }, {});\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'invertBy' })\nexport class InvertByPipe implements PipeTransform {\n  transform(obj: any, cb?: Function): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj).reduce((o: any, k: string) => {\n      const key = cb ? cb(obj[k]) : obj[k];\n\n      return Array.isArray(o[key]) ? (o[key].push(k), o) : Object.assign(o, { [key]: [k] });\n    }, {});\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { getKeysTwoObjects, isDeepEqual, isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'diffObj' })\nexport class DiffObjPipe implements PipeTransform {\n  transform(obj: any, original: any = {}): any {\n    if (Array.isArray(obj) || Array.isArray(original) || !isObject(obj) || !isObject(original)) {\n      return {};\n    }\n\n    return getKeysTwoObjects(obj, original).reduce((diff: any, key: any) => {\n      if (!isDeepEqual(original[key], obj[key])) {\n        diff[key] = obj[key];\n      }\n\n      return diff;\n    }, {});\n  }\n}\n","import { KeysPipe } from './keys';\nimport { ValuesPipe } from './values';\nimport { PairsPipe } from './pairs';\nimport { PickPipe } from './pick';\nimport { OmitPipe } from './omit';\nimport { InvertPipe } from './invert';\nimport { InvertByPipe } from './invert-by';\nimport { DiffObjPipe } from './diff-obj';\nimport { NgModule } from '@angular/core';\n\nconst OBJECT_PIPES = [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe];\n\n@NgModule({\n  declarations: OBJECT_PIPES,\n  imports: [],\n  exports: OBJECT_PIPES,\n})\nexport class NgObjectPipesModule {}\n\nexport { KeysPipe } from './keys';\nexport { ValuesPipe } from './values';\nexport { PairsPipe } from './pairs';\nexport { PickPipe } from './pick';\nexport { OmitPipe } from './omit';\nexport { InvertPipe } from './invert';\nexport { InvertByPipe } from './invert-by';\nexport { DiffObjPipe } from './diff-obj';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isVowel } from '../helpers/helpers';\n\n@Pipe({\n  name: 'aOrAn',\n})\n/**\n * Takes a string and returns the string prepended by 'a' or 'an'.\n * Uses both naive and holdout-list approaches.\n * @constructor\n * @param {string} stringEntity - Entity to prepend 'a' or 'an' to.\n */\nexport class AorAnPipe implements PipeTransform {\n  private irregularMap: any = {\n    herb: 'an',\n    honor: 'an',\n    honorable: 'an',\n    hour: 'an',\n    mba: 'an',\n    msc: 'an',\n    'm.sc.': 'an',\n    unicorn: 'a',\n  };\n  transform(stringEntity: string): string {\n    if (!stringEntity || stringEntity === '') {\n      return '';\n    } else {\n      const firstWord = stringEntity.trim().split(' ')[0];\n      if (this.irregularMap[firstWord.toLocaleLowerCase()]) {\n        return `${this.irregularMap[firstWord.toLocaleLowerCase()]} ${stringEntity}`;\n      } else {\n        return isVowel(stringEntity[0]) ? `an ${stringEntity}` : `a ${stringEntity}`;\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString, ucFirst } from '../helpers/helpers';\n\n@Pipe({ name: 'ucwords' })\nexport class UcWordsPipe implements PipeTransform {\n  transform(input: string): string;\n  transform(input: any): any;\n\n  transform(text: any): string {\n    if (isString(text)) {\n      return text\n        .split(' ')\n        .map((sub: any) => ucFirst(sub))\n        .join(' ');\n    }\n\n    return text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'ltrim' })\nexport class LeftTrimPipe implements PipeTransform {\n  transform(text: string, chars: string = '\\\\s'): string {\n    return isString(text) ? text.replace(new RegExp(`^[${chars}]+`), '') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'repeat' })\nexport class RepeatPipe implements PipeTransform {\n  transform(str: string, n: number = 1, separator: string = ''): string {\n    if (n <= 0) {\n      throw new RangeError();\n    }\n\n    return n === 1 ? str : this.repeat(str, n - 1, separator);\n  }\n\n  private repeat(str: string, n: number, separator: string): string {\n    return isString(str) ? (n === 0 ? str : str + separator + this.repeat(str, n - 1, separator)) : str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'rtrim' })\nexport class RightTrimPipe implements PipeTransform {\n  transform(text: string, chars: string = '\\\\s'): string {\n    return isString(text) ? text.replace(new RegExp(`[${chars}]+$`), '') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'scan' })\nexport class ScanPipe implements PipeTransform {\n  transform(text: string, args: string[] = []): string {\n    return isString(text)\n      ? text.replace(/\\{(\\d+)}/g, (match, index) => (!isUndefined(args[index]) ? args[index] : match))\n      : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'shorten' })\nexport class ShortenPipe implements PipeTransform {\n  transform(input: string, length?: number, suffix?: string, wordBreak?: boolean): string;\n  transform(input: any, length?: number, suffix?: string, wordBreak?: boolean): any;\n\n  transform(text: any, length: number = 0, suffix: string = '', wordBreak: boolean = true): string {\n    if (!isString(text)) {\n      return text;\n    }\n\n    if (text.length > length) {\n      if (wordBreak) {\n        return text.slice(0, length) + suffix;\n      }\n\n      // tslint:disable-next-line:no-bitwise\n      if (!!~text.indexOf(' ', length)) {\n        return text.slice(0, text.indexOf(' ', length)) + suffix;\n      }\n    }\n\n    return text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'stripTags' })\nexport class StripTagsPipe implements PipeTransform {\n  transform(text: string, ...allowedTags: any[]): string {\n    return allowedTags.length > 0\n      ? text.replace(new RegExp(`<(?!\\/?(${allowedTags.join('|')})\\s*\\/?)[^>]+>`, 'g'), '')\n      : text.replace(/<(?:.|\\s)*?>/g, '');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'trim' })\nexport class TrimPipe implements PipeTransform {\n  transform(text: string, chars: string = '\\\\s'): string {\n    return isString(text) ? text.replace(new RegExp(`^[${chars}]+|[${chars}]+$`, 'g'), '') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString, ucFirst } from '../helpers/helpers';\n\n@Pipe({ name: 'ucfirst' })\nexport class UcFirstPipe implements PipeTransform {\n  transform(input: string): string;\n  transform(input: any): any;\n\n  transform(text: any): string {\n    return isString(text) ? ucFirst(text) : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'slugify' })\nexport class SlugifyPipe implements PipeTransform {\n  transform(str: string): string {\n    return isString(str)\n      ? str\n          .toLowerCase()\n          .trim()\n          .replace(/[^\\w\\-]+/g, ' ')\n          .replace(/\\s+/g, '-')\n      : str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'camelize' })\nexport class CamelizePipe implements PipeTransform {\n  transform(input: string, chars?: string): string;\n  transform(input: any, chars?: string): any;\n\n  transform(text: any, chars: string = '\\\\s'): string {\n    if (!isString(text)) {\n      return text;\n    }\n\n    return text\n      .toLowerCase()\n      .split(/[-_\\s]/g)\n      .filter((v: string) => !!v)\n      .map((word: string, key: any) => {\n        return !key ? word : word.slice(0, 1).toUpperCase() + word.slice(1);\n      })\n      .join('');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'latinise' })\nexport class LatinisePipe implements PipeTransform {\n  // Source: http://semplicewebsites.com/removing-accents-javascript\n  // tslint:disable-next-line whitespace max-line-length object-literal-key-quotes\n  private latinMap: any = {\n    Ã: 'A',\n    Ä: 'A',\n    áº®: 'A',\n    áº¶: 'A',\n    áº°: 'A',\n    áº²: 'A',\n    áº´: 'A',\n    Ç: 'A',\n    Ã: 'A',\n    áº¤: 'A',\n    áº¬: 'A',\n    áº¦: 'A',\n    áº¨: 'A',\n    áºª: 'A',\n    Ã: 'A',\n    Ç: 'A',\n    È¦: 'A',\n    Ç : 'A',\n    áº : 'A',\n    È: 'A',\n    Ã: 'A',\n    áº¢: 'A',\n    È: 'A',\n    Ä: 'A',\n    Ä: 'A',\n    Ã: 'A',\n    Çº: 'A',\n    á¸: 'A',\n    Èº: 'A',\n    Ã: 'A',\n    ê²: 'AA',\n    Ã: 'AE',\n    Ç¼: 'AE',\n    Ç¢: 'AE',\n    ê´: 'AO',\n    ê¶: 'AU',\n    ê¸: 'AV',\n    êº: 'AV',\n    ê¼: 'AY',\n    á¸: 'B',\n    á¸: 'B',\n    Æ: 'B',\n    á¸: 'B',\n    É: 'B',\n    Æ: 'B',\n    Ä: 'C',\n    Ä: 'C',\n    Ã: 'C',\n    á¸: 'C',\n    Ä: 'C',\n    Ä: 'C',\n    Æ: 'C',\n    È»: 'C',\n    Ä: 'D',\n    á¸: 'D',\n    á¸: 'D',\n    á¸: 'D',\n    á¸: 'D',\n    Æ: 'D',\n    á¸: 'D',\n    Ç²: 'D',\n    Ç: 'D',\n    Ä: 'D',\n    Æ: 'D',\n    Ç±: 'DZ',\n    Ç: 'DZ',\n    Ã: 'E',\n    Ä: 'E',\n    Ä: 'E',\n    È¨: 'E',\n    á¸: 'E',\n    Ã: 'E',\n    áº¾: 'E',\n    á»: 'E',\n    á»: 'E',\n    á»: 'E',\n    á»: 'E',\n    á¸: 'E',\n    Ã: 'E',\n    Ä: 'E',\n    áº¸: 'E',\n    È: 'E',\n    Ã: 'E',\n    áºº: 'E',\n    È: 'E',\n    Ä: 'E',\n    á¸: 'E',\n    á¸: 'E',\n    Ä: 'E',\n    É: 'E',\n    áº¼: 'E',\n    á¸: 'E',\n    êª: 'ET',\n    á¸: 'F',\n    Æ: 'F',\n    Ç´: 'G',\n    Ä: 'G',\n    Ç¦: 'G',\n    Ä¢: 'G',\n    Ä: 'G',\n    Ä : 'G',\n    Æ: 'G',\n    á¸ : 'G',\n    Ç¤: 'G',\n    á¸ª: 'H',\n    È: 'H',\n    á¸¨: 'H',\n    Ä¤: 'H',\n    â±§: 'H',\n    á¸¦: 'H',\n    á¸¢: 'H',\n    á¸¤: 'H',\n    Ä¦: 'H',\n    Ã: 'I',\n    Ä¬: 'I',\n    Ç: 'I',\n    Ã: 'I',\n    Ã: 'I',\n    á¸®: 'I',\n    Ä°: 'I',\n    á»: 'I',\n    È: 'I',\n    Ã: 'I',\n    á»: 'I',\n    È: 'I',\n    Äª: 'I',\n    Ä®: 'I',\n    Æ: 'I',\n    Ä¨: 'I',\n    á¸¬: 'I',\n    ê¹: 'D',\n    ê»: 'F',\n    ê½: 'G',\n    ê: 'R',\n    ê: 'S',\n    ê: 'T',\n    ê¬: 'IS',\n    Ä´: 'J',\n    É: 'J',\n    á¸°: 'K',\n    Ç¨: 'K',\n    Ä¶: 'K',\n    â±©: 'K',\n    ê: 'K',\n    á¸²: 'K',\n    Æ: 'K',\n    á¸´: 'K',\n    ê: 'K',\n    ê: 'K',\n    Ä¹: 'L',\n    È½: 'L',\n    Ä½: 'L',\n    Ä»: 'L',\n    á¸¼: 'L',\n    á¸¶: 'L',\n    á¸¸: 'L',\n    â± : 'L',\n    ê: 'L',\n    á¸º: 'L',\n    Ä¿: 'L',\n    â±¢: 'L',\n    Ç: 'L',\n    Å: 'L',\n    Ç: 'LJ',\n    á¸¾: 'M',\n    á¹: 'M',\n    á¹: 'M',\n    â±®: 'M',\n    Å: 'N',\n    Å: 'N',\n    Å: 'N',\n    á¹: 'N',\n    á¹: 'N',\n    á¹: 'N',\n    Ç¸: 'N',\n    Æ: 'N',\n    á¹: 'N',\n    È : 'N',\n    Ç: 'N',\n    Ã: 'N',\n    Ç: 'NJ',\n    Ã: 'O',\n    Å: 'O',\n    Ç: 'O',\n    Ã: 'O',\n    á»: 'O',\n    á»: 'O',\n    á»: 'O',\n    á»: 'O',\n    á»: 'O',\n    Ã: 'O',\n    Èª: 'O',\n    È®: 'O',\n    È°: 'O',\n    á»: 'O',\n    Å: 'O',\n    È: 'O',\n    Ã: 'O',\n    á»: 'O',\n    Æ : 'O',\n    á»: 'O',\n    á»¢: 'O',\n    á»: 'O',\n    á»: 'O',\n    á» : 'O',\n    È: 'O',\n    ê: 'O',\n    ê: 'O',\n    Å: 'O',\n    á¹: 'O',\n    á¹: 'O',\n    Æ: 'O',\n    Çª: 'O',\n    Ç¬: 'O',\n    Ã: 'O',\n    Ç¾: 'O',\n    Ã: 'O',\n    á¹: 'O',\n    á¹: 'O',\n    È¬: 'O',\n    Æ¢: 'OI',\n    ê: 'OO',\n    Æ: 'E',\n    Æ: 'O',\n    È¢: 'OU',\n    á¹: 'P',\n    á¹: 'P',\n    ê: 'P',\n    Æ¤: 'P',\n    ê: 'P',\n    â±£: 'P',\n    ê: 'P',\n    ê: 'Q',\n    ê: 'Q',\n    Å: 'R',\n    Å: 'R',\n    Å: 'R',\n    á¹: 'R',\n    á¹: 'R',\n    á¹: 'R',\n    È: 'R',\n    È: 'R',\n    á¹: 'R',\n    É: 'R',\n    â±¤: 'R',\n    ê¾: 'C',\n    Æ: 'E',\n    Å: 'S',\n    á¹¤: 'S',\n    Å : 'S',\n    á¹¦: 'S',\n    Å: 'S',\n    Å: 'S',\n    È: 'S',\n    á¹ : 'S',\n    á¹¢: 'S',\n    á¹¨: 'S',\n    áº: 'SS',\n    Å¤: 'T',\n    Å¢: 'T',\n    á¹°: 'T',\n    È: 'T',\n    È¾: 'T',\n    á¹ª: 'T',\n    á¹¬: 'T',\n    Æ¬: 'T',\n    á¹®: 'T',\n    Æ®: 'T',\n    Å¦: 'T',\n    â±¯: 'A',\n    ê: 'L',\n    Æ: 'M',\n    É: 'V',\n    ê¨: 'TZ',\n    Ã: 'U',\n    Å¬: 'U',\n    Ç: 'U',\n    Ã: 'U',\n    á¹¶: 'U',\n    Ã: 'U',\n    Ç: 'U',\n    Ç: 'U',\n    Ç: 'U',\n    Ç: 'U',\n    á¹²: 'U',\n    á»¤: 'U',\n    Å°: 'U',\n    È: 'U',\n    Ã: 'U',\n    á»¦: 'U',\n    Æ¯: 'U',\n    á»¨: 'U',\n    á»°: 'U',\n    á»ª: 'U',\n    á»¬: 'U',\n    á»®: 'U',\n    È: 'U',\n    Åª: 'U',\n    á¹º: 'U',\n    Å²: 'U',\n    Å®: 'U',\n    Å¨: 'U',\n    á¹¸: 'U',\n    á¹´: 'U',\n    ê: 'V',\n    á¹¾: 'V',\n    Æ²: 'V',\n    á¹¼: 'V',\n    ê : 'VY',\n    áº: 'W',\n    Å´: 'W',\n    áº: 'W',\n    áº: 'W',\n    áº: 'W',\n    áº: 'W',\n    â±²: 'W',\n    áº: 'X',\n    áº: 'X',\n    Ã: 'Y',\n    Å¶: 'Y',\n    Å¸: 'Y',\n    áº: 'Y',\n    á»´: 'Y',\n    á»²: 'Y',\n    Æ³: 'Y',\n    á»¶: 'Y',\n    á»¾: 'Y',\n    È²: 'Y',\n    É: 'Y',\n    á»¸: 'Y',\n    Å¹: 'Z',\n    Å½: 'Z',\n    áº: 'Z',\n    â±«: 'Z',\n    Å»: 'Z',\n    áº: 'Z',\n    È¤: 'Z',\n    áº: 'Z',\n    Æµ: 'Z',\n    Ä²: 'IJ',\n    Å: 'OE',\n    á´: 'A',\n    á´: 'AE',\n    Ê: 'B',\n    á´: 'B',\n    á´: 'C',\n    á´: 'D',\n    á´: 'E',\n    ê°: 'F',\n    É¢: 'G',\n    Ê: 'G',\n    Ê: 'H',\n    Éª: 'I',\n    Ê: 'R',\n    á´: 'J',\n    á´: 'K',\n    Ê: 'L',\n    á´: 'L',\n    á´: 'M',\n    É´: 'N',\n    á´: 'O',\n    É¶: 'OE',\n    á´: 'O',\n    á´: 'OU',\n    á´: 'P',\n    Ê: 'R',\n    á´: 'N',\n    á´: 'R',\n    ê±: 'S',\n    á´: 'T',\n    â±»: 'E',\n    á´: 'R',\n    á´: 'U',\n    á´ : 'V',\n    á´¡: 'W',\n    Ê: 'Y',\n    á´¢: 'Z',\n    Ã¡: 'a',\n    Ä: 'a',\n    áº¯: 'a',\n    áº·: 'a',\n    áº±: 'a',\n    áº³: 'a',\n    áºµ: 'a',\n    Ç: 'a',\n    Ã¢: 'a',\n    áº¥: 'a',\n    áº­: 'a',\n    áº§: 'a',\n    áº©: 'a',\n    áº«: 'a',\n    Ã¤: 'a',\n    Ç: 'a',\n    È§: 'a',\n    Ç¡: 'a',\n    áº¡: 'a',\n    È: 'a',\n    Ã : 'a',\n    áº£: 'a',\n    È: 'a',\n    Ä: 'a',\n    Ä: 'a',\n    á¶: 'a',\n    áº: 'a',\n    Ã¥: 'a',\n    Ç»: 'a',\n    á¸: 'a',\n    â±¥: 'a',\n    Ã£: 'a',\n    ê³: 'aa',\n    Ã¦: 'ae',\n    Ç½: 'ae',\n    Ç£: 'ae',\n    êµ: 'ao',\n    ê·: 'au',\n    ê¹: 'av',\n    ê»: 'av',\n    ê½: 'ay',\n    á¸: 'b',\n    á¸: 'b',\n    É: 'b',\n    á¸: 'b',\n    áµ¬: 'b',\n    á¶: 'b',\n    Æ: 'b',\n    Æ: 'b',\n    Éµ: 'o',\n    Ä: 'c',\n    Ä: 'c',\n    Ã§: 'c',\n    á¸: 'c',\n    Ä: 'c',\n    É: 'c',\n    Ä: 'c',\n    Æ: 'c',\n    È¼: 'c',\n    Ä: 'd',\n    á¸: 'd',\n    á¸: 'd',\n    È¡: 'd',\n    á¸: 'd',\n    á¸: 'd',\n    É: 'd',\n    á¶: 'd',\n    á¸: 'd',\n    áµ­: 'd',\n    á¶: 'd',\n    Ä: 'd',\n    É: 'd',\n    Æ: 'd',\n    Ä±: 'i',\n    È·: 'j',\n    É: 'j',\n    Ê: 'j',\n    Ç³: 'dz',\n    Ç: 'dz',\n    Ã©: 'e',\n    Ä: 'e',\n    Ä: 'e',\n    È©: 'e',\n    á¸: 'e',\n    Ãª: 'e',\n    áº¿: 'e',\n    á»: 'e',\n    á»: 'e',\n    á»: 'e',\n    á»: 'e',\n    á¸: 'e',\n    Ã«: 'e',\n    Ä: 'e',\n    áº¹: 'e',\n    È: 'e',\n    Ã¨: 'e',\n    áº»: 'e',\n    È: 'e',\n    Ä: 'e',\n    á¸: 'e',\n    á¸: 'e',\n    â±¸: 'e',\n    Ä: 'e',\n    á¶: 'e',\n    É: 'e',\n    áº½: 'e',\n    á¸: 'e',\n    ê«: 'et',\n    á¸: 'f',\n    Æ: 'f',\n    áµ®: 'f',\n    á¶: 'f',\n    Çµ: 'g',\n    Ä: 'g',\n    Ç§: 'g',\n    Ä£: 'g',\n    Ä: 'g',\n    Ä¡: 'g',\n    É : 'g',\n    á¸¡: 'g',\n    á¶: 'g',\n    Ç¥: 'g',\n    á¸«: 'h',\n    È: 'h',\n    á¸©: 'h',\n    Ä¥: 'h',\n    â±¨: 'h',\n    á¸§: 'h',\n    á¸£: 'h',\n    á¸¥: 'h',\n    É¦: 'h',\n    áº: 'h',\n    Ä§: 'h',\n    Æ: 'hv',\n    Ã­: 'i',\n    Ä­: 'i',\n    Ç: 'i',\n    Ã®: 'i',\n    Ã¯: 'i',\n    á¸¯: 'i',\n    á»: 'i',\n    È: 'i',\n    Ã¬: 'i',\n    á»: 'i',\n    È: 'i',\n    Ä«: 'i',\n    Ä¯: 'i',\n    á¶: 'i',\n    É¨: 'i',\n    Ä©: 'i',\n    á¸­: 'i',\n    êº: 'd',\n    ê¼: 'f',\n    áµ¹: 'g',\n    ê: 'r',\n    ê: 's',\n    ê: 't',\n    ê­: 'is',\n    Ç°: 'j',\n    Äµ: 'j',\n    Ê: 'j',\n    É: 'j',\n    á¸±: 'k',\n    Ç©: 'k',\n    Ä·: 'k',\n    â±ª: 'k',\n    ê: 'k',\n    á¸³: 'k',\n    Æ: 'k',\n    á¸µ: 'k',\n    á¶: 'k',\n    ê: 'k',\n    ê: 'k',\n    Äº: 'l',\n    Æ: 'l',\n    É¬: 'l',\n    Ä¾: 'l',\n    Ä¼: 'l',\n    á¸½: 'l',\n    È´: 'l',\n    á¸·: 'l',\n    á¸¹: 'l',\n    â±¡: 'l',\n    ê: 'l',\n    á¸»: 'l',\n    Å: 'l',\n    É«: 'l',\n    á¶: 'l',\n    É­: 'l',\n    Å: 'l',\n    Ç: 'lj',\n    Å¿: 's',\n    áº: 's',\n    áº: 's',\n    áº: 's',\n    á¸¿: 'm',\n    á¹: 'm',\n    á¹: 'm',\n    É±: 'm',\n    áµ¯: 'm',\n    á¶: 'm',\n    Å: 'n',\n    Å: 'n',\n    Å: 'n',\n    á¹: 'n',\n    Èµ: 'n',\n    á¹: 'n',\n    á¹: 'n',\n    Ç¹: 'n',\n    É²: 'n',\n    á¹: 'n',\n    Æ: 'n',\n    áµ°: 'n',\n    á¶: 'n',\n    É³: 'n',\n    Ã±: 'n',\n    Ç: 'nj',\n    Ã³: 'o',\n    Å: 'o',\n    Ç: 'o',\n    Ã´: 'o',\n    á»: 'o',\n    á»: 'o',\n    á»: 'o',\n    á»: 'o',\n    á»: 'o',\n    Ã¶: 'o',\n    È«: 'o',\n    È¯: 'o',\n    È±: 'o',\n    á»: 'o',\n    Å: 'o',\n    È: 'o',\n    Ã²: 'o',\n    á»: 'o',\n    Æ¡: 'o',\n    á»: 'o',\n    á»£: 'o',\n    á»: 'o',\n    á»: 'o',\n    á»¡: 'o',\n    È: 'o',\n    ê: 'o',\n    ê: 'o',\n    â±º: 'o',\n    Å: 'o',\n    á¹: 'o',\n    á¹: 'o',\n    Ç«: 'o',\n    Ç­: 'o',\n    Ã¸: 'o',\n    Ç¿: 'o',\n    Ãµ: 'o',\n    á¹: 'o',\n    á¹: 'o',\n    È­: 'o',\n    Æ£: 'oi',\n    ê: 'oo',\n    É: 'e',\n    á¶: 'e',\n    É: 'o',\n    á¶: 'o',\n    È£: 'ou',\n    á¹: 'p',\n    á¹: 'p',\n    ê: 'p',\n    Æ¥: 'p',\n    áµ±: 'p',\n    á¶: 'p',\n    ê: 'p',\n    áµ½: 'p',\n    ê: 'p',\n    ê: 'q',\n    Ê : 'q',\n    É: 'q',\n    ê: 'q',\n    Å: 'r',\n    Å: 'r',\n    Å: 'r',\n    á¹: 'r',\n    á¹: 'r',\n    á¹: 'r',\n    È: 'r',\n    É¾: 'r',\n    áµ³: 'r',\n    È: 'r',\n    á¹: 'r',\n    É¼: 'r',\n    áµ²: 'r',\n    á¶: 'r',\n    É: 'r',\n    É½: 'r',\n    â: 'c',\n    ê¿: 'c',\n    É: 'e',\n    É¿: 'r',\n    Å: 's',\n    á¹¥: 's',\n    Å¡: 's',\n    á¹§: 's',\n    Å: 's',\n    Å: 's',\n    È: 's',\n    á¹¡: 's',\n    á¹£: 's',\n    á¹©: 's',\n    Ê: 's',\n    áµ´: 's',\n    á¶: 's',\n    È¿: 's',\n    É¡: 'g',\n    Ã: 'ss',\n    á´: 'o',\n    á´: 'o',\n    á´: 'u',\n    Å¥: 't',\n    Å£: 't',\n    á¹±: 't',\n    È: 't',\n    È¶: 't',\n    áº: 't',\n    â±¦: 't',\n    á¹«: 't',\n    á¹­: 't',\n    Æ­: 't',\n    á¹¯: 't',\n    áµµ: 't',\n    Æ«: 't',\n    Ê: 't',\n    Å§: 't',\n    áµº: 'th',\n    É: 'a',\n    á´: 'ae',\n    Ç: 'e',\n    áµ·: 'g',\n    É¥: 'h',\n    Ê®: 'h',\n    Ê¯: 'h',\n    á´: 'i',\n    Ê: 'k',\n    ê: 'l',\n    É¯: 'm',\n    É°: 'm',\n    á´: 'oe',\n    É¹: 'r',\n    É»: 'r',\n    Éº: 'r',\n    â±¹: 'r',\n    Ê: 't',\n    Ê: 'v',\n    Ê: 'w',\n    Ê: 'y',\n    ê©: 'tz',\n    Ãº: 'u',\n    Å­: 'u',\n    Ç: 'u',\n    Ã»: 'u',\n    á¹·: 'u',\n    Ã¼: 'u',\n    Ç: 'u',\n    Ç: 'u',\n    Ç: 'u',\n    Ç: 'u',\n    á¹³: 'u',\n    á»¥: 'u',\n    Å±: 'u',\n    È: 'u',\n    Ã¹: 'u',\n    á»§: 'u',\n    Æ°: 'u',\n    á»©: 'u',\n    á»±: 'u',\n    á»«: 'u',\n    á»­: 'u',\n    á»¯: 'u',\n    È: 'u',\n    Å«: 'u',\n    á¹»: 'u',\n    Å³: 'u',\n    á¶: 'u',\n    Å¯: 'u',\n    Å©: 'u',\n    á¹¹: 'u',\n    á¹µ: 'u',\n    áµ«: 'ue',\n    ê¸: 'um',\n    â±´: 'v',\n    ê: 'v',\n    á¹¿: 'v',\n    Ê: 'v',\n    á¶: 'v',\n    â±±: 'v',\n    á¹½: 'v',\n    ê¡: 'vy',\n    áº: 'w',\n    Åµ: 'w',\n    áº: 'w',\n    áº: 'w',\n    áº: 'w',\n    áº: 'w',\n    â±³: 'w',\n    áº: 'w',\n    áº: 'x',\n    áº: 'x',\n    á¶: 'x',\n    Ã½: 'y',\n    Å·: 'y',\n    Ã¿: 'y',\n    áº: 'y',\n    á»µ: 'y',\n    á»³: 'y',\n    Æ´: 'y',\n    á»·: 'y',\n    á»¿: 'y',\n    È³: 'y',\n    áº: 'y',\n    É: 'y',\n    á»¹: 'y',\n    Åº: 'z',\n    Å¾: 'z',\n    áº: 'z',\n    Ê: 'z',\n    â±¬: 'z',\n    Å¼: 'z',\n    áº: 'z',\n    È¥: 'z',\n    áº: 'z',\n    áµ¶: 'z',\n    á¶: 'z',\n    Ê: 'z',\n    Æ¶: 'z',\n    É: 'z',\n    ï¬: 'ff',\n    ï¬: 'ffi',\n    ï¬: 'ffl',\n    ï¬: 'fi',\n    ï¬: 'fl',\n    Ä³: 'ij',\n    Å: 'oe',\n    ï¬: 'st',\n    â: 'a',\n    â: 'e',\n    áµ¢: 'i',\n    â±¼: 'j',\n    â: 'o',\n    áµ£: 'r',\n    áµ¤: 'u',\n    áµ¥: 'v',\n    â: 'x',\n  };\n\n  transform(input: string, chars?: string): string;\n  transform(input: any, chars?: string): any;\n\n  transform(text: any, chars: string = '\\\\s'): string {\n    return isString(text)\n      ? text.replace(/[^A-Za-z0-9]/g, (key: string) => {\n          return this.latinMap[key] || key;\n        })\n      : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'lines' })\nexport class LinesPipe implements PipeTransform {\n  transform(text: any, chars: string = '\\\\s'): Array<string> | any {\n    return isString(text) ? text.replace(/\\r\\n/g, '\\n').split('\\n') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'underscore' })\nexport class UnderscorePipe implements PipeTransform {\n  transform(input: string, chars?: string): string;\n  transform(input: any, chars?: string): any;\n\n  transform(text: any, chars: string = '\\\\s'): string {\n    return isString(text)\n      ? text\n          .trim()\n          .replace(/\\s+/g, '')\n          .replace(/[A-Z]/g, (c: string, k: any) => {\n            return k ? `_${c.toLowerCase()}` : c.toLowerCase();\n          })\n      : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'match' })\nexport class MatchPipe implements PipeTransform {\n  transform(text: string, pattern: string, flags?: string): RegExpMatchArray | null;\n  transform<T>(text: T, pattern: string, flags?: string): T;\n\n  transform(text: any, pattern: string, flags?: string): any {\n    if (!isString(text)) {\n      return text;\n    }\n\n    return text.match(new RegExp(pattern, flags));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'test' })\nexport class TestPipe implements PipeTransform {\n  transform(text: string, pattern: string, flags?: string): boolean;\n  transform<T>(text: T, pattern: string, flags?: string): T;\n\n  transform(text: any, pattern: string, flags?: string): any {\n    if (!isString(text)) {\n      return text;\n    }\n\n    return new RegExp(pattern, flags).test(text);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'lpad' })\nexport class LeftPadPipe implements PipeTransform {\n  transform(str: string, length: number, padCharacter: string = ' '): string {\n    if (!isString(str) || str.length >= length) {\n      return str;\n    }\n    while (str.length < length) {\n      str = padCharacter + str;\n    }\n\n    return str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'rpad' })\nexport class RightPadPipe implements PipeTransform {\n  transform(str: string, length: number = 1, padCharacter: string = ' '): string {\n    if (!isString(str) || str.length >= length) {\n      return str;\n    }\n    while (str.length < length) {\n      str = str + padCharacter;\n    }\n\n    return str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isVowel } from '../helpers/helpers';\n\n@Pipe({\n  name: 'makePluralString',\n})\n\n/**\n * Takes a singular entity string and pluralizes it.\n * Uses both naive and holdout-list approaches.\n * If several words appear in the string, only the last word is pluralized -- this\n * means that if \"your story\" was passed in, \"your stories\" would be passed out.\n *\n * @param {string} singularEntity - Entity to pluralize. Pass as a singular ('story' or 'house').\n *          NOTE: The last word is examined. So you can pass in e.g. 'my story'.\n * @param {number} [quantity=0] quantity - How many of the entity are there? If left blank, this will\n *          pluralize the string (e.g. 'story' -> 'stories', 'house' -> 'houses'). If given a value,\n *          this will pluralize appropriately (e.g. ('story', 1) -> 'story', ('story', 2) -> 'stories').\n */\nexport class MakePluralStringPipe implements PipeTransform {\n  private irregularMap: any = {\n    addendum: 'addenda',\n    alga: 'algae',\n    alumna: 'alumnae',\n    alumnus: 'alumni',\n    analysis: 'analyses',\n    antenna: 'antennae',\n    appendix: 'appendices',\n    aquarium: 'aquaria',\n    arch: 'arches',\n    axe: 'axes',\n    axis: 'axes',\n    bacillus: 'bacilli',\n    bacterium: 'bacteria',\n    basis: 'bases',\n    batch: 'batches',\n    beach: 'beaches',\n    beau: 'beaux',\n    bison: 'bison',\n    brush: 'brushes',\n    buffalo: 'buffaloes',\n    bureau: 'bureaus',\n    bus: 'busses',\n    cactus: 'cacti',\n    calf: 'calves',\n    chateau: 'chateaux',\n    cherry: 'cherries',\n    child: 'children',\n    church: 'churches',\n    circus: 'circuses',\n    cod: 'cod',\n    corps: 'corps',\n    corpus: 'corpora',\n    crisis: 'crises',\n    criterion: 'criteria',\n    curriculum: 'curricula',\n    datum: 'data',\n    deer: 'deer',\n    diagnosis: 'diagnoses',\n    die: 'dice',\n    domino: 'dominoes',\n    dwarf: 'dwarves',\n    echo: 'echoes',\n    elf: 'elves',\n    ellipsis: 'ellipses',\n    embargo: 'embargoes',\n    emphasis: 'emphases',\n    erratum: 'errata',\n    fax: 'faxes',\n    fireman: 'firemen',\n    fish: 'fish',\n    flush: 'flushes',\n    focus: 'foci',\n    foot: 'feet',\n    formula: 'formulas',\n    fungus: 'fungi',\n    genus: 'genera',\n    goose: 'geese',\n    grafito: 'grafiti',\n    half: 'halves',\n    hero: 'heroes',\n    hoax: 'hoaxes',\n    hoof: 'hooves',\n    hypothesis: 'hypotheses',\n    index: 'indices',\n    kiss: 'kisses',\n    knife: 'knives',\n    leaf: 'leaves',\n    life: 'lives',\n    loaf: 'loaves',\n    louse: 'lice',\n    man: 'men',\n    mango: 'mangoes',\n    matrix: 'matrices',\n    means: 'means',\n    medium: 'media',\n    memorandum: 'memoranda',\n    millennium: 'milennia',\n    moose: 'moose',\n    mosquito: 'mosquitoes',\n    motto: 'mottoes',\n    mouse: 'mice',\n    nebula: 'nebulae',\n    neurosis: 'neuroses',\n    nucleus: 'nuclei',\n    oasis: 'oases',\n    octopus: 'octopodes',\n    ovum: 'ova',\n    ox: 'oxen',\n    paralysis: 'paralyses',\n    parenthesis: 'parentheses',\n    person: 'people',\n    phenomenon: 'phenomena',\n    plateau: 'plateaux',\n    potato: 'potatoes',\n    quiz: 'quizzes',\n    radius: 'radii',\n    reflex: 'reflexes',\n    'runner-up': 'runners-up',\n    scampo: 'scampi',\n    scarf: 'scarves',\n    scissors: 'scissors',\n    scratch: 'scratches',\n    self: 'selves',\n    series: 'series',\n    sheaf: 'sheaves',\n    sheep: 'sheep',\n    shelf: 'shelves',\n    'son-in-law': 'sons-in-law',\n    species: 'species',\n    splash: 'splashes',\n    stimulus: 'stimuli',\n    stitch: 'stitches',\n    stratum: 'strata',\n    syllabus: 'syllabi',\n    symposium: 'symposia',\n    synopsis: 'synopses',\n    synthesis: 'syntheses',\n    tableau: 'tableaux',\n    tax: 'taxes',\n    that: 'those',\n    thesis: 'theses',\n    thief: 'thieves',\n    this: 'these',\n    tomato: 'tomatoes',\n    tooth: 'teeth',\n    tornado: 'tornadoes',\n    torpedo: 'torpedoes',\n    vertebra: 'vertebrae',\n    veto: 'vetoes',\n    vita: 'vitae',\n    volcano: 'volcanoes',\n    waltz: 'waltzes',\n    wash: 'washes',\n    watch: 'watches',\n    wharf: 'wharves',\n    wife: 'wives',\n    wolf: 'wolves',\n    woman: 'women',\n    zero: 'zeroes',\n  };\n\n  transform(singularEntity: string, quantity: number = 0): string {\n    if (!singularEntity || singularEntity === '') {\n      return '';\n    }\n\n    if (quantity === 1) {\n      return singularEntity;\n    } else {\n      const lastWord = singularEntity.trim().split(' ')[singularEntity.trim().split(' ').length - 1];\n      if (this.irregularMap[lastWord.toLocaleLowerCase()]) {\n        if (lastWord[0] === lastWord[0].toLocaleUpperCase()) {\n          return singularEntity.replace(\n            lastWord,\n            this.irregularMap[lastWord.toLocaleLowerCase()].replace(\n              this.irregularMap[lastWord.toLocaleLowerCase()][0],\n              this.irregularMap[lastWord.toLocaleLowerCase()][0].toLocaleUpperCase()\n            )\n          );\n        }\n\n        return singularEntity.replace(lastWord, this.irregularMap[lastWord.toLocaleLowerCase()]);\n      } else if (lastWord[lastWord.length - 1] === 'y') {\n        // Naive approach:\n        // consonant+y = word - 'y' +'ies'\n        // vowel+y = word + 's'\n\n        return isVowel(lastWord[lastWord.length - 2])\n          ? singularEntity + 's'\n          : singularEntity.replace(lastWord, lastWord.slice(0, -1) + 'ies');\n      } else if (lastWord[lastWord.length - 1] === 's') {\n        return singularEntity + 'es';\n      } else {\n        return singularEntity + 's';\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'wrap' })\nexport class WrapPipe implements PipeTransform {\n  transform(str: string, prefix: string = '', suffix: string = ''): string {\n    if (!isString(str)) {\n      return str;\n    }\n\n    return (!!prefix && isString(prefix) ? prefix : '') + str + (!!suffix && isString(suffix) ? suffix : '');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AorAnPipe } from './a-or-an';\nimport { UcWordsPipe } from './ucwords';\nimport { LeftTrimPipe } from './ltrim';\nimport { RepeatPipe } from './repeat';\nimport { RightTrimPipe } from './rtrim';\nimport { ScanPipe } from './scan';\nimport { ShortenPipe } from './shorten';\nimport { StripTagsPipe } from './strip-tags';\nimport { TrimPipe } from './trim';\nimport { UcFirstPipe } from './ucfirst';\nimport { SlugifyPipe } from './slugify';\nimport { CamelizePipe } from './camelize';\nimport { LatinisePipe } from './latinise';\nimport { LinesPipe } from './lines';\nimport { UnderscorePipe } from './underscore';\nimport { MatchPipe } from './match';\nimport { TestPipe } from './test';\nimport { LeftPadPipe } from './lpad';\nimport { RightPadPipe } from './rpad';\nimport { MakePluralStringPipe } from './pluralize';\nimport { WrapPipe } from './wrap';\n\nexport const STRING_PIPES = [\n  AorAnPipe,\n  LeftTrimPipe,\n  RepeatPipe,\n  RightTrimPipe,\n  ScanPipe,\n  ShortenPipe,\n  StripTagsPipe,\n  TrimPipe,\n  UcFirstPipe,\n  UcWordsPipe,\n  SlugifyPipe,\n  CamelizePipe,\n  LatinisePipe,\n  LinesPipe,\n  UnderscorePipe,\n  MatchPipe,\n  TestPipe,\n  LeftPadPipe,\n  RightPadPipe,\n  MakePluralStringPipe,\n  WrapPipe,\n];\n\n@NgModule({\n  declarations: STRING_PIPES,\n  imports: [],\n  exports: STRING_PIPES,\n})\nexport class NgStringPipesModule {}\n\nexport { AorAnPipe } from './a-or-an';\nexport { UcWordsPipe } from './ucwords';\nexport { LeftTrimPipe } from './ltrim';\nexport { RepeatPipe } from './repeat';\nexport { RightTrimPipe } from './rtrim';\nexport { ScanPipe } from './scan';\nexport { ShortenPipe } from './shorten';\nexport { StripTagsPipe } from './strip-tags';\nexport { TrimPipe } from './trim';\nexport { UcFirstPipe } from './ucfirst';\nexport { SlugifyPipe } from './slugify';\nexport { CamelizePipe } from './camelize';\nexport { LatinisePipe } from './latinise';\nexport { LinesPipe } from './lines';\nexport { UnderscorePipe } from './underscore';\nexport { MatchPipe } from './match';\nexport { TestPipe } from './test';\nexport { LeftPadPipe } from './lpad';\nexport { RightPadPipe } from './rpad';\nexport { MakePluralStringPipe } from './pluralize';\nexport { WrapPipe } from './wrap';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'max' })\nexport class MaxPipe implements PipeTransform {\n  transform(arr: any): number | number[] {\n    return Array.isArray(arr) ? Math.max(...arr) : arr;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'min' })\nexport class MinPipe implements PipeTransform {\n  transform(arr: any): number | number[] {\n    return Array.isArray(arr) ? Math.min(...arr) : arr;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'percentage' })\nexport class PercentagePipe implements PipeTransform {\n  transform(num: number, total?: number, floor?: boolean): number;\n  transform<T>(num: T, total?: number, floor?: boolean): T;\n\n  transform(num: any, total: number = 100, floor: boolean = false): any {\n    if (isNaN(num)) {\n      return num;\n    }\n\n    const percent = (num * 100) / total;\n\n    return floor ? Math.floor(percent) : percent;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'sum' })\nexport class SumPipe implements PipeTransform {\n  transform(num: any[]): number;\n  transform<T>(num: any): T;\n\n  transform(arr: any): any {\n    return Array.isArray(arr) ? arr.reduce((sum, curr) => sum + curr, 0) : arr;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'floor' })\nexport class FloorPipe implements PipeTransform {\n  transform(num: number, precision: number = 0): number {\n    if (precision <= 0) {\n      return Math.floor(num);\n    }\n\n    const tho = 10 ** precision;\n\n    return Math.floor(num * tho) / tho;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { applyPrecision } from '../helpers/helpers';\n\n@Pipe({ name: 'round' })\nexport class RoundPipe implements PipeTransform {\n  transform(num: number, precision: number = 0): number {\n    return applyPrecision(num, precision);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'sqrt' })\nexport class SqrtPipe implements PipeTransform {\n  transform(num: number): number;\n  transform<T>(num: T): T;\n\n  transform(num: any): any {\n    return !isNaN(num) ? Math.sqrt(num) : num;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'pow' })\nexport class PowerPipe implements PipeTransform {\n  transform(num: number, power?: number): number;\n  transform(num: any, power?: number): any;\n\n  transform(num: any, power: number = 2): number {\n    return !isNaN(num) ? num ** power : num;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ceil' })\nexport class CeilPipe implements PipeTransform {\n  transform(num: number, precision: number = 0): number {\n    if (precision <= 0) {\n      return Math.ceil(num);\n    }\n\n    const tho = 10 ** precision;\n\n    return Math.ceil(num * tho) / tho;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumberFinite } from '../helpers/helpers';\n\n@Pipe({ name: 'degrees' })\nexport class DegreesPipe implements PipeTransform {\n  transform(radians: number): number {\n    if (!isNumberFinite(radians)) {\n      return NaN;\n    }\n\n    return (radians * 180) / Math.PI;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'bytes' })\nexport class BytesPipe implements PipeTransform {\n  private dictionary: Array<{ max: number; type: string }> = [\n    { max: 1024, type: 'B' },\n    { max: 1048576, type: 'KB' },\n    { max: 1073741824, type: 'MB' },\n    { max: 1.0995116e12, type: 'GB' },\n  ];\n\n  transform(value: number, precision?: number | undefined): string | number {\n    if (!isNumberFinite(value)) {\n      return NaN;\n    }\n\n    const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];\n    const calc = value / (format.max / 1024);\n    const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);\n\n    return `${num} ${format.type}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumberFinite } from '../helpers/helpers';\n\n@Pipe({ name: 'radians' })\nexport class RadiansPipe implements PipeTransform {\n  transform(degrees: number): number {\n    if (!isNumberFinite(degrees)) {\n      return NaN;\n    }\n\n    return (degrees * Math.PI) / 180;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MaxPipe } from './max';\nimport { MinPipe } from './min';\nimport { PercentagePipe } from './percentage';\nimport { SumPipe } from './sum';\nimport { FloorPipe } from './floor';\nimport { RoundPipe } from './round';\nimport { SqrtPipe } from './sqrt';\nimport { PowerPipe } from './pow';\nimport { CeilPipe } from './ceil';\nimport { DegreesPipe } from './degrees';\nimport { BytesPipe } from './bytes';\nimport { RadiansPipe } from './radians';\n\nexport const MATH_PIPES = [\n  MaxPipe,\n  MinPipe,\n  PercentagePipe,\n  SumPipe,\n  FloorPipe,\n  RoundPipe,\n  SqrtPipe,\n  PowerPipe,\n  CeilPipe,\n  DegreesPipe,\n  BytesPipe,\n  RadiansPipe,\n];\n\n@NgModule({\n  declarations: MATH_PIPES,\n  imports: [],\n  exports: MATH_PIPES,\n})\nexport class NgMathPipesModule {}\n\nexport { MaxPipe } from './max';\nexport { MinPipe } from './min';\nexport { PercentagePipe } from './percentage';\nexport { SumPipe } from './sum';\nexport { FloorPipe } from './floor';\nexport { RoundPipe } from './round';\nexport { SqrtPipe } from './sqrt';\nexport { PowerPipe } from './pow';\nexport { CeilPipe } from './ceil';\nexport { DegreesPipe } from './degrees';\nexport { BytesPipe } from './bytes';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'isDefined' })\nexport class IsDefinedPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return !isUndefined(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isNull' })\nexport class IsNullPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return input === null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'isUndefined' })\nexport class IsUndefinedPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isUndefined(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'isString' })\nexport class IsStringPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isString(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isFunction } from '../helpers/helpers';\n\n@Pipe({ name: 'isFunction' })\nexport class IsFunctionPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isFunction(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumber } from '../helpers/helpers';\n\n@Pipe({ name: 'isNumber' })\nexport class IsNumberPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isNumber(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isArray' })\nexport class IsArrayPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return Array.isArray(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'isObject' })\nexport class IsObjectPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isObject(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isGreaterEqualThan' })\nexport class IsGreaterEqualThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input >= other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isGreaterThan' })\nexport class IsGreaterThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input > other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isLessEqualThan' })\nexport class IsLessEqualThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input <= other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isEqualTo' })\nexport class IsEqualToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    // tslint:disable-next-line:triple-equals\n    return input == other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isNotEqualTo' })\nexport class IsNotEqualToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    // tslint:disable-next-line:triple-equals\n    return input != other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isIdenticalTo' })\nexport class IsIdenticalToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    return input === other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isNotIdenticalTo' })\nexport class IsNotIdenticalToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    return input !== other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isLessThan' })\nexport class IsLessThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input < other;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IsDefinedPipe } from './is-defined';\nimport { IsNullPipe } from './is-null';\nimport { IsUndefinedPipe } from './is-undefined';\nimport { IsStringPipe } from './is-string';\nimport { IsFunctionPipe } from './is-function';\nimport { IsNumberPipe } from './is-number';\nimport { IsArrayPipe } from './is-array';\nimport { IsObjectPipe } from './is-object';\nimport { IsGreaterEqualThanPipe } from './is-greater-equal-than';\nimport { IsGreaterThanPipe } from './is-greater-than';\nimport { IsLessEqualThanPipe } from './is-less-equal-than';\nimport { IsEqualToPipe } from './is-equal-to';\nimport { IsNotEqualToPipe } from './is-not-equal-to';\nimport { IsIdenticalToPipe } from './is-identical-to';\nimport { IsNotIdenticalToPipe } from './is-not-identical-to';\nimport { IsLessThanPipe } from './is-less-than';\n\nexport const BOOLEAN_PIPES = [\n  IsDefinedPipe,\n  IsNullPipe,\n  IsUndefinedPipe,\n  IsStringPipe,\n  IsFunctionPipe,\n  IsNumberPipe,\n  IsArrayPipe,\n  IsObjectPipe,\n  IsGreaterEqualThanPipe,\n  IsGreaterThanPipe,\n  IsLessEqualThanPipe,\n  IsLessEqualThanPipe,\n  IsEqualToPipe,\n  IsNotEqualToPipe,\n  IsIdenticalToPipe,\n  IsNotIdenticalToPipe,\n  IsLessThanPipe,\n];\n\n@NgModule({\n  declarations: BOOLEAN_PIPES,\n  imports: [],\n  exports: BOOLEAN_PIPES,\n})\nexport class NgBooleanPipesModule {}\n\nexport { IsDefinedPipe } from './is-defined';\nexport { IsNullPipe } from './is-null';\nexport { IsUndefinedPipe } from './is-undefined';\nexport { IsStringPipe } from './is-string';\nexport { IsFunctionPipe } from './is-function';\nexport { IsNumberPipe } from './is-number';\nexport { IsArrayPipe } from './is-array';\nexport { IsObjectPipe } from './is-object';\nexport { IsGreaterEqualThanPipe } from './is-greater-equal-than';\nexport { IsGreaterThanPipe } from './is-greater-than';\nexport { IsLessEqualThanPipe } from './is-less-equal-than';\nexport { IsEqualToPipe } from './is-equal-to';\nexport { IsNotEqualToPipe } from './is-not-equal-to';\nexport { IsIdenticalToPipe } from './is-identical-to';\nexport { IsNotIdenticalToPipe } from './is-not-identical-to';\nexport { IsLessThanPipe } from './is-less-than';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'timeAgo' })\nexport class TimeAgoPipe implements PipeTransform {\n  private static YEAR_MS: number = 1000 * 60 * 60 * 24 * 7 * 4 * 12;\n  private static MAPPER: any = [\n    { single: 'last year', many: 'years', div: 1 },\n    { single: 'last month', many: 'months', div: 12 },\n    { single: 'last week', many: 'weeks', div: 4 },\n    { single: 'yesterday', many: 'days', div: 7 },\n    { single: 'an hour ago', many: 'hours', div: 24 },\n    { single: 'just now', many: 'minutes', div: 60 },\n  ];\n\n  /**\n   * @param inputDate: Date | Moment - not included as TypeScript interface,\n   * in order to keep `ngx-pipes` \"pure\" from dependencies!\n   */\n  public transform(inputDate: any): string {\n    if (!inputDate || (!inputDate.getTime && !inputDate.toDate)) {\n      return 'Invalid date';\n    }\n\n    const past = inputDate.toDate ? inputDate.toDate() : inputDate.getTime();\n    const now = +new Date();\n\n    if (past > now) {\n      return 'in the future';\n    }\n\n    for (let i = 0, l = TimeAgoPipe.MAPPER.length, ms = now - past, div = TimeAgoPipe.YEAR_MS; i < l; ++i) {\n      const elm = TimeAgoPipe.MAPPER[i];\n      const unit = Math.floor(ms / (div /= elm.div));\n\n      if (unit >= 1) {\n        return unit === 1 ? elm.single : `${unit} ${elm.many} ago`;\n      }\n    }\n\n    return 'just now';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TimeAgoPipe } from './time-ago';\n\nexport const DATE_PIPES = [TimeAgoPipe];\n\n@NgModule({\n  declarations: DATE_PIPES,\n  imports: [],\n  exports: DATE_PIPES,\n})\nexport class NgDatePipesModule {}\n\nexport { TimeAgoPipe } from './time-ago';\n","import { NgModule } from '@angular/core';\nimport { NgArrayPipesModule } from './array/index';\nimport { NgObjectPipesModule } from './object/index';\nimport { NgStringPipesModule } from './string/index';\nimport { NgMathPipesModule } from './math/index';\nimport { NgBooleanPipesModule } from './boolean/index';\nimport { NgDatePipesModule } from './date/index';\n\n@NgModule({\n  exports: [\n    NgArrayPipesModule,\n    NgStringPipesModule,\n    NgMathPipesModule,\n    NgBooleanPipesModule,\n    NgObjectPipesModule,\n    NgDatePipesModule,\n  ],\n})\nexport class NgPipesModule {}\n\nexport * from './array/index';\nexport * from './object/index';\nexport * from './string/index';\nexport * from './math/index';\nexport * from './boolean/index';\nexport * from './date/index';\n"]}