/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isVowel } from '../helpers/helpers';
/**
 * Takes a string and returns the string prepended by 'a' or 'an'.
 * Uses both naive and holdout-list approaches.
 * @constructor
 * @param {string} stringEntity - Entity to prepend 'a' or 'an' to.
 */
export class AorAnPipe {
    constructor() {
        this.irregularMap = {
            herb: 'an',
            honor: 'an',
            honorable: 'an',
            hour: 'an',
            mba: 'an',
            msc: 'an',
            'm.sc.': 'an',
            unicorn: 'a',
        };
    }
    /**
     * @param {?} stringEntity
     * @return {?}
     */
    transform(stringEntity) {
        if (!stringEntity || stringEntity === '') {
            return '';
        }
        else {
            /** @type {?} */
            const firstWord = stringEntity.trim().split(' ')[0];
            if (this.irregularMap[firstWord.toLocaleLowerCase()]) {
                return `${this.irregularMap[firstWord.toLocaleLowerCase()]} ${stringEntity}`;
            }
            else {
                return isVowel(stringEntity[0]) ? `an ${stringEntity}` : `a ${stringEntity}`;
            }
        }
    }
}
AorAnPipe.decorators = [
    { type: Pipe, args: [{
                name: 'aOrAn',
            },] }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    AorAnPipe.prototype.irregularMap;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYS1vci1hbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1waXBlcy8iLCJzb3VyY2VzIjpbInNyYy9waXBlcy9zdHJpbmcvYS1vci1hbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBSzdDOzs7OztHQUtHO0FBQ0gsTUFBTSxPQUFPLFNBQVM7SUFUdEI7UUFVVSxpQkFBWSxHQUFRO1lBQzFCLElBQUksRUFBRSxJQUFJO1lBQ1YsS0FBSyxFQUFFLElBQUk7WUFDWCxTQUFTLEVBQUUsSUFBSTtZQUNmLElBQUksRUFBRSxJQUFJO1lBQ1YsR0FBRyxFQUFFLElBQUk7WUFDVCxHQUFHLEVBQUUsSUFBSTtZQUNULE9BQU8sRUFBRSxJQUFJO1lBQ2IsT0FBTyxFQUFFLEdBQUc7U0FDYixDQUFDO0lBYUosQ0FBQzs7Ozs7SUFaQyxTQUFTLENBQUMsWUFBb0I7UUFDNUIsSUFBSSxDQUFDLFlBQVksSUFBSSxZQUFZLEtBQUssRUFBRSxFQUFFO1lBQ3hDLE9BQU8sRUFBRSxDQUFDO1NBQ1g7YUFBTTs7a0JBQ0MsU0FBUyxHQUFHLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25ELElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFO2dCQUNwRCxPQUFPLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxJQUFJLFlBQVksRUFBRSxDQUFDO2FBQzlFO2lCQUFNO2dCQUNMLE9BQU8sT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLFlBQVksRUFBRSxDQUFDO2FBQzlFO1NBQ0Y7SUFDSCxDQUFDOzs7WUEvQkYsSUFBSSxTQUFDO2dCQUNKLElBQUksRUFBRSxPQUFPO2FBQ2Q7Ozs7Ozs7SUFRQyxpQ0FTRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGlzVm93ZWwgfSBmcm9tICcuLi9oZWxwZXJzL2hlbHBlcnMnO1xuXG5AUGlwZSh7XG4gIG5hbWU6ICdhT3JBbicsXG59KVxuLyoqXG4gKiBUYWtlcyBhIHN0cmluZyBhbmQgcmV0dXJucyB0aGUgc3RyaW5nIHByZXBlbmRlZCBieSAnYScgb3IgJ2FuJy5cbiAqIFVzZXMgYm90aCBuYWl2ZSBhbmQgaG9sZG91dC1saXN0IGFwcHJvYWNoZXMuXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdFbnRpdHkgLSBFbnRpdHkgdG8gcHJlcGVuZCAnYScgb3IgJ2FuJyB0by5cbiAqL1xuZXhwb3J0IGNsYXNzIEFvckFuUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBwcml2YXRlIGlycmVndWxhck1hcDogYW55ID0ge1xuICAgIGhlcmI6ICdhbicsXG4gICAgaG9ub3I6ICdhbicsXG4gICAgaG9ub3JhYmxlOiAnYW4nLFxuICAgIGhvdXI6ICdhbicsXG4gICAgbWJhOiAnYW4nLFxuICAgIG1zYzogJ2FuJyxcbiAgICAnbS5zYy4nOiAnYW4nLFxuICAgIHVuaWNvcm46ICdhJyxcbiAgfTtcbiAgdHJhbnNmb3JtKHN0cmluZ0VudGl0eTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBpZiAoIXN0cmluZ0VudGl0eSB8fCBzdHJpbmdFbnRpdHkgPT09ICcnKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGZpcnN0V29yZCA9IHN0cmluZ0VudGl0eS50cmltKCkuc3BsaXQoJyAnKVswXTtcbiAgICAgIGlmICh0aGlzLmlycmVndWxhck1hcFtmaXJzdFdvcmQudG9Mb2NhbGVMb3dlckNhc2UoKV0pIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMuaXJyZWd1bGFyTWFwW2ZpcnN0V29yZC50b0xvY2FsZUxvd2VyQ2FzZSgpXX0gJHtzdHJpbmdFbnRpdHl9YDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBpc1Zvd2VsKHN0cmluZ0VudGl0eVswXSkgPyBgYW4gJHtzdHJpbmdFbnRpdHl9YCA6IGBhICR7c3RyaW5nRW50aXR5fWA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=