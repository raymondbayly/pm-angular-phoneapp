/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { NgArrayPipesModule } from './array/index';
import { NgObjectPipesModule } from './object/index';
import { NgStringPipesModule } from './string/index';
import { NgMathPipesModule } from './math/index';
import { NgBooleanPipesModule } from './boolean/index';
import { NgDatePipesModule } from './date/index';
export class NgPipesModule {
}
NgPipesModule.decorators = [
    { type: NgModule, args: [{
                exports: [
                    NgArrayPipesModule,
                    NgStringPipesModule,
                    NgMathPipesModule,
                    NgBooleanPipesModule,
                    NgObjectPipesModule,
                    NgDatePipesModule,
                ],
            },] }
];
export { NgArrayPipesModule, DiffPipe, InitialPipe, FlattenPipe, IntersectionPipe, ReversePipe, TailPipe, TrurthifyPipe, UnionPipe, UniquePipe, WithoutPipe, PluckPipe, ShufflePipe, EveryPipe, SomePipe, SamplePipe, GroupByPipe, FilterByPipe, OrderByPipe, GroupByImpurePipe, FilterByImpurePipe, OrderByImpurePipe, RangePipe } from './array/index';
export { NgObjectPipesModule, KeysPipe, ValuesPipe, PairsPipe, PickPipe, OmitPipe, InvertPipe, InvertByPipe, DiffObjPipe } from './object/index';
export { STRING_PIPES, NgStringPipesModule, AorAnPipe, UcWordsPipe, LeftTrimPipe, RepeatPipe, RightTrimPipe, ScanPipe, ShortenPipe, StripTagsPipe, TrimPipe, UcFirstPipe, SlugifyPipe, CamelizePipe, LatinisePipe, LinesPipe, UnderscorePipe, MatchPipe, TestPipe, LeftPadPipe, RightPadPipe, MakePluralStringPipe, WrapPipe } from './string/index';
export { MATH_PIPES, NgMathPipesModule, MaxPipe, MinPipe, PercentagePipe, SumPipe, FloorPipe, RoundPipe, SqrtPipe, PowerPipe, CeilPipe, DegreesPipe, BytesPipe } from './math/index';
export { BOOLEAN_PIPES, NgBooleanPipesModule, IsDefinedPipe, IsNullPipe, IsUndefinedPipe, IsStringPipe, IsFunctionPipe, IsNumberPipe, IsArrayPipe, IsObjectPipe, IsGreaterEqualThanPipe, IsGreaterThanPipe, IsLessEqualThanPipe, IsEqualToPipe, IsNotEqualToPipe, IsIdenticalToPipe, IsNotIdenticalToPipe, IsLessThanPipe } from './boolean/index';
export { DATE_PIPES, NgDatePipesModule, TimeAgoPipe } from './date/index';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFZakQsTUFBTSxPQUFPLGFBQWE7OztZQVZ6QixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLGtCQUFrQjtvQkFDbEIsbUJBQW1CO29CQUNuQixpQkFBaUI7b0JBQ2pCLG9CQUFvQjtvQkFDcEIsbUJBQW1CO29CQUNuQixpQkFBaUI7aUJBQ2xCO2FBQ0Y7O0FBR0QseVVBQWMsZUFBZSxDQUFDO0FBQzlCLGdJQUFjLGdCQUFnQixDQUFDO0FBQy9CLG9VQUFjLGdCQUFnQixDQUFDO0FBQy9CLHNLQUFjLGNBQWMsQ0FBQztBQUM3QixpVUFBYyxpQkFBaUIsQ0FBQztBQUNoQywyREFBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdBcnJheVBpcGVzTW9kdWxlIH0gZnJvbSAnLi9hcnJheS9pbmRleCc7XG5pbXBvcnQgeyBOZ09iamVjdFBpcGVzTW9kdWxlIH0gZnJvbSAnLi9vYmplY3QvaW5kZXgnO1xuaW1wb3J0IHsgTmdTdHJpbmdQaXBlc01vZHVsZSB9IGZyb20gJy4vc3RyaW5nL2luZGV4JztcbmltcG9ydCB7IE5nTWF0aFBpcGVzTW9kdWxlIH0gZnJvbSAnLi9tYXRoL2luZGV4JztcbmltcG9ydCB7IE5nQm9vbGVhblBpcGVzTW9kdWxlIH0gZnJvbSAnLi9ib29sZWFuL2luZGV4JztcbmltcG9ydCB7IE5nRGF0ZVBpcGVzTW9kdWxlIH0gZnJvbSAnLi9kYXRlL2luZGV4JztcblxuQE5nTW9kdWxlKHtcbiAgZXhwb3J0czogW1xuICAgIE5nQXJyYXlQaXBlc01vZHVsZSxcbiAgICBOZ1N0cmluZ1BpcGVzTW9kdWxlLFxuICAgIE5nTWF0aFBpcGVzTW9kdWxlLFxuICAgIE5nQm9vbGVhblBpcGVzTW9kdWxlLFxuICAgIE5nT2JqZWN0UGlwZXNNb2R1bGUsXG4gICAgTmdEYXRlUGlwZXNNb2R1bGUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5nUGlwZXNNb2R1bGUge31cblxuZXhwb3J0ICogZnJvbSAnLi9hcnJheS9pbmRleCc7XG5leHBvcnQgKiBmcm9tICcuL29iamVjdC9pbmRleCc7XG5leHBvcnQgKiBmcm9tICcuL3N0cmluZy9pbmRleCc7XG5leHBvcnQgKiBmcm9tICcuL21hdGgvaW5kZXgnO1xuZXhwb3J0ICogZnJvbSAnLi9ib29sZWFuL2luZGV4JztcbmV4cG9ydCAqIGZyb20gJy4vZGF0ZS9pbmRleCc7XG4iXX0=