/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';
export class BytesPipe {
    constructor() {
        this.dictionary = [
            { max: 1024, type: 'B' },
            { max: 1048576, type: 'KB' },
            { max: 1073741824, type: 'MB' },
            { max: 1.0995116e12, type: 'GB' },
        ];
    }
    /**
     * @param {?} value
     * @param {?=} precision
     * @return {?}
     */
    transform(value, precision) {
        if (!isNumberFinite(value)) {
            return NaN;
        }
        /** @type {?} */
        const format = this.dictionary.find((/**
         * @param {?} d
         * @return {?}
         */
        d => value < d.max)) || this.dictionary[this.dictionary.length - 1];
        /** @type {?} */
        const calc = value / (format.max / 1024);
        /** @type {?} */
        const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
        return `${num} ${format.type}`;
    }
}
BytesPipe.decorators = [
    { type: Pipe, args: [{ name: 'bytes' },] }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    BytesPipe.prototype.dictionary;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnl0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvbWF0aC9ieXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHakYsTUFBTSxPQUFPLFNBQVM7SUFEdEI7UUFFVSxlQUFVLEdBQXlDO1lBQ3pELEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFO1lBQ3hCLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO1lBQzVCLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO1lBQy9CLEVBQUUsR0FBRyxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO1NBQ2xDLENBQUM7SUFhSixDQUFDOzs7Ozs7SUFYQyxTQUFTLENBQUMsS0FBYSxFQUFFLFNBQThCO1FBQ3JELElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDMUIsT0FBTyxHQUFHLENBQUM7U0FDWjs7Y0FFSyxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDOztjQUNoRyxJQUFJLEdBQUcsS0FBSyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUM7O2NBQ2xDLEdBQUcsR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUM7UUFFM0UsT0FBTyxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQzs7O1lBbkJGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7Ozs7Ozs7SUFFckIsK0JBS0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhcHBseVByZWNpc2lvbiwgaXNOdW1iZXJGaW5pdGUsIGlzVW5kZWZpbmVkIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJztcblxuQFBpcGUoeyBuYW1lOiAnYnl0ZXMnIH0pXG5leHBvcnQgY2xhc3MgQnl0ZXNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHByaXZhdGUgZGljdGlvbmFyeTogQXJyYXk8eyBtYXg6IG51bWJlcjsgdHlwZTogc3RyaW5nIH0+ID0gW1xuICAgIHsgbWF4OiAxMDI0LCB0eXBlOiAnQicgfSxcbiAgICB7IG1heDogMTA0ODU3NiwgdHlwZTogJ0tCJyB9LFxuICAgIHsgbWF4OiAxMDczNzQxODI0LCB0eXBlOiAnTUInIH0sXG4gICAgeyBtYXg6IDEuMDk5NTExNmUxMiwgdHlwZTogJ0dCJyB9LFxuICBdO1xuXG4gIHRyYW5zZm9ybSh2YWx1ZTogbnVtYmVyLCBwcmVjaXNpb24/OiBudW1iZXIgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCBudW1iZXIge1xuICAgIGlmICghaXNOdW1iZXJGaW5pdGUodmFsdWUpKSB7XG4gICAgICByZXR1cm4gTmFOO1xuICAgIH1cblxuICAgIGNvbnN0IGZvcm1hdCA9IHRoaXMuZGljdGlvbmFyeS5maW5kKGQgPT4gdmFsdWUgPCBkLm1heCkgfHwgdGhpcy5kaWN0aW9uYXJ5W3RoaXMuZGljdGlvbmFyeS5sZW5ndGggLSAxXTtcbiAgICBjb25zdCBjYWxjID0gdmFsdWUgLyAoZm9ybWF0Lm1heCAvIDEwMjQpO1xuICAgIGNvbnN0IG51bSA9IGlzVW5kZWZpbmVkKHByZWNpc2lvbikgPyBjYWxjIDogYXBwbHlQcmVjaXNpb24oY2FsYywgcHJlY2lzaW9uKTtcblxuICAgIHJldHVybiBgJHtudW19ICR7Zm9ybWF0LnR5cGV9YDtcbiAgfVxufVxuIl19