/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';
var BytesPipe = /** @class */ (function () {
    function BytesPipe() {
        this.dictionary = [
            { max: 1024, type: 'B' },
            { max: 1048576, type: 'KB' },
            { max: 1073741824, type: 'MB' },
            { max: 1.0995116e12, type: 'GB' },
        ];
    }
    /**
     * @param {?} value
     * @param {?=} precision
     * @return {?}
     */
    BytesPipe.prototype.transform = /**
     * @param {?} value
     * @param {?=} precision
     * @return {?}
     */
    function (value, precision) {
        if (!isNumberFinite(value)) {
            return NaN;
        }
        /** @type {?} */
        var format = this.dictionary.find((/**
         * @param {?} d
         * @return {?}
         */
        function (d) { return value < d.max; })) || this.dictionary[this.dictionary.length - 1];
        /** @type {?} */
        var calc = value / (format.max / 1024);
        /** @type {?} */
        var num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
        return num + " " + format.type;
    };
    BytesPipe.decorators = [
        { type: Pipe, args: [{ name: 'bytes' },] }
    ];
    return BytesPipe;
}());
export { BytesPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    BytesPipe.prototype.dictionary;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnl0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvbWF0aC9ieXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFakY7SUFBQTtRQUVVLGVBQVUsR0FBeUM7WUFDekQsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7WUFDeEIsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDNUIsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDL0IsRUFBRSxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7U0FDbEMsQ0FBQztJQWFKLENBQUM7Ozs7OztJQVhDLDZCQUFTOzs7OztJQUFULFVBQVUsS0FBYSxFQUFFLFNBQThCO1FBQ3JELElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDMUIsT0FBTyxHQUFHLENBQUM7U0FDWjs7WUFFSyxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJOzs7O1FBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBYixDQUFhLEVBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQzs7WUFDaEcsSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDOztZQUNsQyxHQUFHLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDO1FBRTNFLE9BQVUsR0FBRyxTQUFJLE1BQU0sQ0FBQyxJQUFNLENBQUM7SUFDakMsQ0FBQzs7Z0JBbkJGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7O0lBb0J2QixnQkFBQztDQUFBLEFBcEJELElBb0JDO1NBbkJZLFNBQVM7Ozs7OztJQUNwQiwrQkFLRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFwcGx5UHJlY2lzaW9uLCBpc051bWJlckZpbml0ZSwgaXNVbmRlZmluZWQgfSBmcm9tICcuLi9oZWxwZXJzL2hlbHBlcnMnO1xuXG5AUGlwZSh7IG5hbWU6ICdieXRlcycgfSlcbmV4cG9ydCBjbGFzcyBCeXRlc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgcHJpdmF0ZSBkaWN0aW9uYXJ5OiBBcnJheTx7IG1heDogbnVtYmVyOyB0eXBlOiBzdHJpbmcgfT4gPSBbXG4gICAgeyBtYXg6IDEwMjQsIHR5cGU6ICdCJyB9LFxuICAgIHsgbWF4OiAxMDQ4NTc2LCB0eXBlOiAnS0InIH0sXG4gICAgeyBtYXg6IDEwNzM3NDE4MjQsIHR5cGU6ICdNQicgfSxcbiAgICB7IG1heDogMS4wOTk1MTE2ZTEyLCB0eXBlOiAnR0InIH0sXG4gIF07XG5cbiAgdHJhbnNmb3JtKHZhbHVlOiBudW1iZXIsIHByZWNpc2lvbj86IG51bWJlciB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IG51bWJlciB7XG4gICAgaWYgKCFpc051bWJlckZpbml0ZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBOYU47XG4gICAgfVxuXG4gICAgY29uc3QgZm9ybWF0ID0gdGhpcy5kaWN0aW9uYXJ5LmZpbmQoZCA9PiB2YWx1ZSA8IGQubWF4KSB8fCB0aGlzLmRpY3Rpb25hcnlbdGhpcy5kaWN0aW9uYXJ5Lmxlbmd0aCAtIDFdO1xuICAgIGNvbnN0IGNhbGMgPSB2YWx1ZSAvIChmb3JtYXQubWF4IC8gMTAyNCk7XG4gICAgY29uc3QgbnVtID0gaXNVbmRlZmluZWQocHJlY2lzaW9uKSA/IGNhbGMgOiBhcHBseVByZWNpc2lvbihjYWxjLCBwcmVjaXNpb24pO1xuXG4gICAgcmV0dXJuIGAke251bX0gJHtmb3JtYXQudHlwZX1gO1xuICB9XG59XG4iXX0=