/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isObject } from '../helpers/helpers';
var InvertByPipe = /** @class */ (function () {
    function InvertByPipe() {
    }
    /**
     * @param {?} obj
     * @param {?=} cb
     * @return {?}
     */
    InvertByPipe.prototype.transform = /**
     * @param {?} obj
     * @param {?=} cb
     * @return {?}
     */
    function (obj, cb) {
        if (Array.isArray(obj) || !isObject(obj)) {
            return obj;
        }
        return Object.keys(obj).reduce((/**
         * @param {?} o
         * @param {?} k
         * @return {?}
         */
        function (o, k) {
            var _a;
            /** @type {?} */
            var key = cb ? cb(obj[k]) : obj[k];
            return Array.isArray(o[key]) ? (o[key].push(k), o) : Object.assign(o, (_a = {}, _a[key] = [k], _a));
        }), {});
    };
    InvertByPipe.decorators = [
        { type: Pipe, args: [{ name: 'invertBy' },] }
    ];
    return InvertByPipe;
}());
export { InvertByPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52ZXJ0LWJ5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXBpcGVzLyIsInNvdXJjZXMiOlsic3JjL3BpcGVzL29iamVjdC9pbnZlcnQtYnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUU5QztJQUFBO0lBYUEsQ0FBQzs7Ozs7O0lBWEMsZ0NBQVM7Ozs7O0lBQVQsVUFBVSxHQUFRLEVBQUUsRUFBYTtRQUMvQixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDeEMsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUVELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNOzs7OztRQUFDLFVBQUMsQ0FBTSxFQUFFLENBQVM7OztnQkFDekMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBRXBDLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsWUFBSSxHQUFDLEdBQUcsSUFBRyxDQUFDLENBQUMsQ0FBQyxNQUFHLENBQUM7UUFDeEYsQ0FBQyxHQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQzs7Z0JBWkYsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTs7SUFhMUIsbUJBQUM7Q0FBQSxBQWJELElBYUM7U0FaWSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tICcuLi9oZWxwZXJzL2hlbHBlcnMnO1xuXG5AUGlwZSh7IG5hbWU6ICdpbnZlcnRCeScgfSlcbmV4cG9ydCBjbGFzcyBJbnZlcnRCeVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKG9iajogYW55LCBjYj86IEZ1bmN0aW9uKTogT2JqZWN0IHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopIHx8ICFpc09iamVjdChvYmopKSB7XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH1cblxuICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmopLnJlZHVjZSgobzogYW55LCBrOiBzdHJpbmcpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IGNiID8gY2Iob2JqW2tdKSA6IG9ialtrXTtcblxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob1trZXldKSA/IChvW2tleV0ucHVzaChrKSwgbykgOiBPYmplY3QuYXNzaWduKG8sIHsgW2tleV06IFtrXSB9KTtcbiAgICB9LCB7fSk7XG4gIH1cbn1cbiJdfQ==