/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { extractDeepPropertyByMapKey, isObject, isUndefined } from '../helpers/helpers';
var UniquePipe = /** @class */ (function () {
    function UniquePipe() {
    }
    /**
     * @param {?} input
     * @param {?=} propertyName
     * @return {?}
     */
    UniquePipe.prototype.transform = /**
     * @param {?} input
     * @param {?=} propertyName
     * @return {?}
     */
    function (input, propertyName) {
        /** @type {?} */
        var uniques = [];
        return Array.isArray(input)
            ? isUndefined(propertyName)
                ? input.filter((/**
                 * @param {?} e
                 * @param {?} i
                 * @return {?}
                 */
                function (e, i) { return input.indexOf(e) === i; }))
                : input.filter((/**
                 * @param {?} e
                 * @param {?} i
                 * @return {?}
                 */
                function (e, i) {
                    /** @type {?} */
                    var value = extractDeepPropertyByMapKey(e, propertyName);
                    value = isObject(value) ? JSON.stringify(value) : value;
                    if (isUndefined(value) || uniques[value]) {
                        return false;
                    }
                    uniques[value] = true;
                    return true;
                }))
            : input;
    };
    UniquePipe.decorators = [
        { type: Pipe, args: [{ name: 'unique' },] }
    ];
    return UniquePipe;
}());
export { UniquePipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pcXVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXBpcGVzLyIsInNvdXJjZXMiOlsic3JjL3BpcGVzL2FycmF5L3VuaXF1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUV4RjtJQUFBO0lBeUJBLENBQUM7Ozs7OztJQXBCQyw4QkFBUzs7Ozs7SUFBVCxVQUFVLEtBQVUsRUFBRSxZQUFpQzs7WUFDL0MsT0FBTyxHQUFjLEVBQUU7UUFFN0IsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztZQUN6QixDQUFDLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQztnQkFDekIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNOzs7OztnQkFBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBdEIsQ0FBc0IsRUFBQztnQkFDaEQsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNOzs7OztnQkFBQyxVQUFDLENBQUMsRUFBRSxDQUFDOzt3QkFDWixLQUFLLEdBQUcsMkJBQTJCLENBQUMsQ0FBQyxFQUFFLFlBQVksQ0FBQztvQkFDeEQsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO29CQUV4RCxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7d0JBQ3hDLE9BQU8sS0FBSyxDQUFDO3FCQUNkO29CQUVELE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUM7b0JBRXRCLE9BQU8sSUFBSSxDQUFDO2dCQUNkLENBQUMsRUFBQztZQUNOLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDWixDQUFDOztnQkF4QkYsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRTs7SUF5QnhCLGlCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0F4QlksVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGV4dHJhY3REZWVwUHJvcGVydHlCeU1hcEtleSwgaXNPYmplY3QsIGlzVW5kZWZpbmVkIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJztcblxuQFBpcGUoeyBuYW1lOiAndW5pcXVlJyB9KVxuZXhwb3J0IGNsYXNzIFVuaXF1ZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnlbXSwgYXJncz86IHN0cmluZyB8IHVuZGVmaW5lZCk6IGFueVtdO1xuICB0cmFuc2Zvcm08VD4oaW5wdXQ6IFQsIGFyZ3M/OiBzdHJpbmcgfCB1bmRlZmluZWQpOiBUO1xuXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBwcm9wZXJ0eU5hbWU/OiBzdHJpbmcgfCB1bmRlZmluZWQpOiBhbnkge1xuICAgIGNvbnN0IHVuaXF1ZXM6IGJvb2xlYW5bXSA9IFtdO1xuXG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoaW5wdXQpXG4gICAgICA/IGlzVW5kZWZpbmVkKHByb3BlcnR5TmFtZSlcbiAgICAgICAgPyBpbnB1dC5maWx0ZXIoKGUsIGkpID0+IGlucHV0LmluZGV4T2YoZSkgPT09IGkpXG4gICAgICAgIDogaW5wdXQuZmlsdGVyKChlLCBpKSA9PiB7XG4gICAgICAgICAgICBsZXQgdmFsdWUgPSBleHRyYWN0RGVlcFByb3BlcnR5QnlNYXBLZXkoZSwgcHJvcGVydHlOYW1lKTtcbiAgICAgICAgICAgIHZhbHVlID0gaXNPYmplY3QodmFsdWUpID8gSlNPTi5zdHJpbmdpZnkodmFsdWUpIDogdmFsdWU7XG5cbiAgICAgICAgICAgIGlmIChpc1VuZGVmaW5lZCh2YWx1ZSkgfHwgdW5pcXVlc1t2YWx1ZV0pIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB1bmlxdWVzW3ZhbHVlXSA9IHRydWU7XG5cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH0pXG4gICAgICA6IGlucHV0O1xuICB9XG59XG4iXX0=