/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
var UnionPipe = /** @class */ (function () {
    function UnionPipe() {
    }
    /**
     * @param {?} input
     * @param {?=} args
     * @return {?}
     */
    UnionPipe.prototype.transform = /**
     * @param {?} input
     * @param {?=} args
     * @return {?}
     */
    function (input, args) {
        if (args === void 0) { args = []; }
        if (!Array.isArray(input) || !Array.isArray(args)) {
            return input;
        }
        return args.reduce((/**
         * @param {?} newArr
         * @param {?} currArr
         * @return {?}
         */
        function (newArr, currArr) {
            return newArr.concat(currArr.reduce((/**
             * @param {?} noDupArr
             * @param {?} curr
             * @return {?}
             */
            function (noDupArr, curr) {
                // tslint:disable-next-line:no-bitwise
                return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr) ? noDupArr.concat([curr]) : noDupArr;
            }), []));
        }), input);
    };
    UnionPipe.decorators = [
        { type: Pipe, args: [{ name: 'union' },] }
    ];
    return UnionPipe;
}());
export { UnionPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvYXJyYXkvdW5pb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBEO0lBQUE7SUFtQkEsQ0FBQzs7Ozs7O0lBZEMsNkJBQVM7Ozs7O0lBQVQsVUFBVSxLQUFVLEVBQUUsSUFBZ0I7UUFBaEIscUJBQUEsRUFBQSxTQUFnQjtRQUNwQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDakQsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sSUFBSSxDQUFDLE1BQU07Ozs7O1FBQUMsVUFBQyxNQUFNLEVBQUUsT0FBTztZQUNqQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQ2xCLE9BQU8sQ0FBQyxNQUFNOzs7OztZQUFDLFVBQUMsUUFBZSxFQUFFLElBQVM7Z0JBQ3hDLHNDQUFzQztnQkFDdEMsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztZQUNqRyxDQUFDLEdBQUUsRUFBRSxDQUFDLENBQ1AsQ0FBQztRQUNKLENBQUMsR0FBRSxLQUFLLENBQUMsQ0FBQztJQUNaLENBQUM7O2dCQWxCRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFOztJQW1CdkIsZ0JBQUM7Q0FBQSxBQW5CRCxJQW1CQztTQWxCWSxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AUGlwZSh7IG5hbWU6ICd1bmlvbicgfSlcbmV4cG9ydCBjbGFzcyBVbmlvblBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnlbXSwgYXJncz86IGFueVtdKTogYW55W107XG4gIHRyYW5zZm9ybTxUPihpbnB1dDogVCwgYXJncz86IGFueVtdKTogVDtcblxuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueSwgYXJnczogYW55W10gPSBbXSk6IGFueSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGlucHV0KSB8fCAhQXJyYXkuaXNBcnJheShhcmdzKSkge1xuICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH1cblxuICAgIHJldHVybiBhcmdzLnJlZHVjZSgobmV3QXJyLCBjdXJyQXJyKSA9PiB7XG4gICAgICByZXR1cm4gbmV3QXJyLmNvbmNhdChcbiAgICAgICAgY3VyckFyci5yZWR1Y2UoKG5vRHVwQXJyOiBhbnlbXSwgY3VycjogYW55KSA9PiB7XG4gICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWJpdHdpc2VcbiAgICAgICAgICByZXR1cm4gIX5ub0R1cEFyci5pbmRleE9mKGN1cnIpICYmICF+bmV3QXJyLmluZGV4T2YoY3VycikgPyBub0R1cEFyci5jb25jYXQoW2N1cnJdKSA6IG5vRHVwQXJyO1xuICAgICAgICB9LCBbXSlcbiAgICAgICk7XG4gICAgfSwgaW5wdXQpO1xuICB9XG59XG4iXX0=