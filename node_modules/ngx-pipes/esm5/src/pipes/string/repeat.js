/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isString } from '../helpers/helpers';
var RepeatPipe = /** @class */ (function () {
    function RepeatPipe() {
    }
    /**
     * @param {?} str
     * @param {?=} n
     * @param {?=} separator
     * @return {?}
     */
    RepeatPipe.prototype.transform = /**
     * @param {?} str
     * @param {?=} n
     * @param {?=} separator
     * @return {?}
     */
    function (str, n, separator) {
        if (n === void 0) { n = 1; }
        if (separator === void 0) { separator = ''; }
        if (n <= 0) {
            throw new RangeError();
        }
        return n === 1 ? str : this.repeat(str, n - 1, separator);
    };
    /**
     * @private
     * @param {?} str
     * @param {?} n
     * @param {?} separator
     * @return {?}
     */
    RepeatPipe.prototype.repeat = /**
     * @private
     * @param {?} str
     * @param {?} n
     * @param {?} separator
     * @return {?}
     */
    function (str, n, separator) {
        return isString(str) ? (n === 0 ? str : str + separator + this.repeat(str, n - 1, separator)) : str;
    };
    RepeatPipe.decorators = [
        { type: Pipe, args: [{ name: 'repeat' },] }
    ];
    return RepeatPipe;
}());
export { RepeatPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwZWF0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXBpcGVzLyIsInNvdXJjZXMiOlsic3JjL3BpcGVzL3N0cmluZy9yZXBlYXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUU5QztJQUFBO0lBYUEsQ0FBQzs7Ozs7OztJQVhDLDhCQUFTOzs7Ozs7SUFBVCxVQUFVLEdBQVcsRUFBRSxDQUFhLEVBQUUsU0FBc0I7UUFBckMsa0JBQUEsRUFBQSxLQUFhO1FBQUUsMEJBQUEsRUFBQSxjQUFzQjtRQUMxRCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDVixNQUFNLElBQUksVUFBVSxFQUFFLENBQUM7U0FDeEI7UUFFRCxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1RCxDQUFDOzs7Ozs7OztJQUVPLDJCQUFNOzs7Ozs7O0lBQWQsVUFBZSxHQUFXLEVBQUUsQ0FBUyxFQUFFLFNBQWlCO1FBQ3RELE9BQU8sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztJQUN0RyxDQUFDOztnQkFaRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFOztJQWF4QixpQkFBQztDQUFBLEFBYkQsSUFhQztTQVpZLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL2hlbHBlcnMvaGVscGVycyc7XG5cbkBQaXBlKHsgbmFtZTogJ3JlcGVhdCcgfSlcbmV4cG9ydCBjbGFzcyBSZXBlYXRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShzdHI6IHN0cmluZywgbjogbnVtYmVyID0gMSwgc2VwYXJhdG9yOiBzdHJpbmcgPSAnJyk6IHN0cmluZyB7XG4gICAgaWYgKG4gPD0gMCkge1xuICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbiA9PT0gMSA/IHN0ciA6IHRoaXMucmVwZWF0KHN0ciwgbiAtIDEsIHNlcGFyYXRvcik7XG4gIH1cblxuICBwcml2YXRlIHJlcGVhdChzdHI6IHN0cmluZywgbjogbnVtYmVyLCBzZXBhcmF0b3I6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGlzU3RyaW5nKHN0cikgPyAobiA9PT0gMCA/IHN0ciA6IHN0ciArIHNlcGFyYXRvciArIHRoaXMucmVwZWF0KHN0ciwgbiAtIDEsIHNlcGFyYXRvcikpIDogc3RyO1xuICB9XG59XG4iXX0=