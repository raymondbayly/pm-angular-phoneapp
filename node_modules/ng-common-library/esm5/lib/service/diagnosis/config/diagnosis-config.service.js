/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var DiagnosisConfigService = /** @class */ (function () {
    function DiagnosisConfigService() {
        this.primaryDiagnosesEndpoint = null;
    }
    /**
     * @return {?}
     */
    DiagnosisConfigService.prototype.getPrimaryDiagnosesEndpoint = /**
     * @return {?}
     */
    function () {
        if (!this.primaryDiagnosesEndpoint) {
            console.warn('Primary diagnoses endpoint is not set!');
        }
        return this.primaryDiagnosesEndpoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    DiagnosisConfigService.prototype.setPrimaryDiagnosesEndpoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.primaryDiagnosesEndpoint = value;
    };
    DiagnosisConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ DiagnosisConfigService.ngInjectableDef = i0.defineInjectable({ factory: function DiagnosisConfigService_Factory() { return new DiagnosisConfigService(); }, token: DiagnosisConfigService, providedIn: "root" });
    return DiagnosisConfigService;
}());
export { DiagnosisConfigService };
if (false) {
    /** @type {?} */
    DiagnosisConfigService.prototype.primaryDiagnosesEndpoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ25vc2lzLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctY29tbW9uLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS9kaWFnbm9zaXMvY29uZmlnL2RpYWdub3Npcy1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7Ozt3Q0FPTSxJQUFJOzs7OztJQUV4Qyw0REFBMkI7Ozs7UUFDOUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sQ0FBQyxJQUFJLENBQUMsd0NBQXdDLENBQUMsQ0FBQztTQUMxRDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUM7Ozs7OztJQUdsQyw0REFBMkI7Ozs7Y0FBQyxLQUFhO1FBQzVDLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxLQUFLLENBQUM7OztnQkFmN0MsVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7O2lDQUpEOztTQUthLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgRGlhZ25vc2lzQ29uZmlnU2VydmljZSB7XG5cbiAgICBwcml2YXRlIHByaW1hcnlEaWFnbm9zZXNFbmRwb2ludDogc3RyaW5nID0gbnVsbDtcblxuICAgIHB1YmxpYyBnZXRQcmltYXJ5RGlhZ25vc2VzRW5kcG9pbnQoKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKCF0aGlzLnByaW1hcnlEaWFnbm9zZXNFbmRwb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdQcmltYXJ5IGRpYWdub3NlcyBlbmRwb2ludCBpcyBub3Qgc2V0IScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnByaW1hcnlEaWFnbm9zZXNFbmRwb2ludDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0UHJpbWFyeURpYWdub3Nlc0VuZHBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wcmltYXJ5RGlhZ25vc2VzRW5kcG9pbnQgPSB2YWx1ZTtcbiAgICB9XG59XG4iXX0=