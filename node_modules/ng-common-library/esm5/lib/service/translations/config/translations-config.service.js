/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var TranslationsConfigService = /** @class */ (function () {
    function TranslationsConfigService() {
        this.translationsEndPoint = null;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    TranslationsConfigService.prototype.setTranslationsEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.translationsEndPoint = value;
    };
    /**
     * @return {?}
     */
    TranslationsConfigService.prototype.getTranslationsEndpoint = /**
     * @return {?}
     */
    function () {
        if (!this.translationsEndPoint) {
            console.warn('Translations endpoint is not set!');
        }
        return this.translationsEndPoint;
    };
    TranslationsConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ TranslationsConfigService.ngInjectableDef = i0.defineInjectable({ factory: function TranslationsConfigService_Factory() { return new TranslationsConfigService(); }, token: TranslationsConfigService, providedIn: "root" });
    return TranslationsConfigService;
}());
export { TranslationsConfigService };
if (false) {
    /** @type {?} */
    TranslationsConfigService.prototype.translationsEndPoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb25zLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctY29tbW9uLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS90cmFuc2xhdGlvbnMvY29uZmlnL3RyYW5zbGF0aW9ucy1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7OztvQ0FPRSxJQUFJOzs7Ozs7SUFFcEMsMkRBQXVCOzs7O2NBQUMsS0FBYTtRQUN4QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsS0FBSyxDQUFDOzs7OztJQUcvQiwyREFBdUI7Ozs7UUFDMUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDO1lBQzdCLE9BQU8sQ0FBQyxJQUFJLENBQUMsbUNBQW1DLENBQUMsQ0FBQztTQUNyRDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUM7OztnQkFmeEMsVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7O29DQUpEOztTQUthLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRpb25zQ29uZmlnU2VydmljZSB7XG5cbiAgICBwcml2YXRlIHRyYW5zbGF0aW9uc0VuZFBvaW50OiBzdHJpbmcgPSBudWxsO1xuXG4gICAgcHVibGljIHNldFRyYW5zbGF0aW9uc0VuZFBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy50cmFuc2xhdGlvbnNFbmRQb2ludCA9IHZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUcmFuc2xhdGlvbnNFbmRwb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMudHJhbnNsYXRpb25zRW5kUG9pbnQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignVHJhbnNsYXRpb25zIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRpb25zRW5kUG9pbnQ7XG4gICAgfVxufVxuIl19