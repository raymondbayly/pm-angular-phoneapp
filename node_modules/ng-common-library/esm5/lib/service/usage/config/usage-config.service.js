/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var UsageConfigService = /** @class */ (function () {
    function UsageConfigService() {
        this.usagePollingInterval = 5000;
    }
    /**
     * @param {?} value Endpoint for sending usage data.
     * @return {?}
     */
    UsageConfigService.prototype.setUsageDataEndPoint = /**
     * @param {?} value Endpoint for sending usage data.
     * @return {?}
     */
    function (value) {
        this.usageDataEndPoint = value;
    };
    /**
     * Endpoint for sending usage data.
     * @return {?}
     */
    UsageConfigService.prototype.getUsageDataEndPoint = /**
     * Endpoint for sending usage data.
     * @return {?}
     */
    function () {
        if (!this.usageDataEndPoint) {
            console.warn('usage data endpoint is not set!');
        }
        return this.usageDataEndPoint;
    };
    /**
     * Number of milliseconds between polling attempts.
     * @return {?}
     */
    UsageConfigService.prototype.getUsagePollingInterval = /**
     * Number of milliseconds between polling attempts.
     * @return {?}
     */
    function () {
        return this.usagePollingInterval;
    };
    /**
     * @param {?} value Number of milliseconds between polling attempts.
     * @return {?}
     */
    UsageConfigService.prototype.setUsagePollingInterval = /**
     * @param {?} value Number of milliseconds between polling attempts.
     * @return {?}
     */
    function (value) {
        this.usagePollingInterval = value;
    };
    UsageConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ UsageConfigService.ngInjectableDef = i0.defineInjectable({ factory: function UsageConfigService_Factory() { return new UsageConfigService(); }, token: UsageConfigService, providedIn: "root" });
    return UsageConfigService;
}());
export { UsageConfigService };
if (false) {
    /** @type {?} */
    UsageConfigService.prototype.usageDataEndPoint;
    /** @type {?} */
    UsageConfigService.prototype.usagePollingInterval;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNhZ2UtY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1jb21tb24tbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL3VzYWdlL2NvbmZpZy91c2FnZS1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7OztvQ0FRUixJQUFJOzs7Ozs7SUFHNUIsaURBQW9COzs7O2NBQUMsS0FBYTtRQUN2QyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDOzs7Ozs7SUFJMUIsaURBQW9COzs7OztRQUN6QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7WUFDNUIsT0FBTyxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1NBQ2pEO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQzs7Ozs7O0lBSXpCLG9EQUF1Qjs7Ozs7UUFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7O0lBSTVCLG9EQUF1Qjs7OztjQUFDLEtBQWE7UUFDMUMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLEtBQUssQ0FBQzs7O2dCQTVCckMsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7OzZCQUpEOztTQUthLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFVzYWdlQ29uZmlnU2VydmljZSB7XG4gIHByaXZhdGUgdXNhZ2VEYXRhRW5kUG9pbnQ6IHN0cmluZztcbiAgLy8gRGVmYXVsdCB0byBwb2xsaW5nIGV2ZXJ5IDUgc2Vjb25kc1xuICBwcml2YXRlIHVzYWdlUG9sbGluZ0ludGVydmFsID0gNTAwMDtcblxuICAvKiogQHBhcmFtIHZhbHVlIEVuZHBvaW50IGZvciBzZW5kaW5nIHVzYWdlIGRhdGEuICovXG4gIHB1YmxpYyBzZXRVc2FnZURhdGFFbmRQb2ludCh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy51c2FnZURhdGFFbmRQb2ludCA9IHZhbHVlO1xuICB9XG5cbiAgLyoqIEVuZHBvaW50IGZvciBzZW5kaW5nIHVzYWdlIGRhdGEuICovXG4gIHB1YmxpYyBnZXRVc2FnZURhdGFFbmRQb2ludCgpOiBzdHJpbmcge1xuICAgIGlmICghdGhpcy51c2FnZURhdGFFbmRQb2ludCkge1xuICAgICAgY29uc29sZS53YXJuKCd1c2FnZSBkYXRhIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnVzYWdlRGF0YUVuZFBvaW50O1xuICB9XG5cbiAgLyoqIE51bWJlciBvZiBtaWxsaXNlY29uZHMgYmV0d2VlbiBwb2xsaW5nIGF0dGVtcHRzLiAqL1xuICBwdWJsaWMgZ2V0VXNhZ2VQb2xsaW5nSW50ZXJ2YWwoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy51c2FnZVBvbGxpbmdJbnRlcnZhbDtcbiAgfVxuXG4gIC8qKiBAcGFyYW0gdmFsdWUgTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBiZXR3ZWVuIHBvbGxpbmcgYXR0ZW1wdHMuICovXG4gIHB1YmxpYyBzZXRVc2FnZVBvbGxpbmdJbnRlcnZhbCh2YWx1ZTogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy51c2FnZVBvbGxpbmdJbnRlcnZhbCA9IHZhbHVlO1xuICB9XG59XG4iXX0=