/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var CommonService = /** @class */ (function () {
    function CommonService() {
    }
    /**
     * Parse any primitive value (string, number, boolean, undefined or null) to a boolean true or false.
     * @param {?=} value Value to parse.
     * @return {?}
     */
    CommonService.prototype.primitiveToBoolean = /**
     * Parse any primitive value (string, number, boolean, undefined or null) to a boolean true or false.
     * @param {?=} value Value to parse.
     * @return {?}
     */
    function (value) {
        if (value == null) {
            return false;
        }
        if (value === 'true' || value === 'True' || value === 'TRUE') {
            return true;
        }
        return typeof value === 'string'
            ? !!+value // we parse string to number first
            : !!value;
    };
    CommonService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ CommonService.ngInjectableDef = i0.defineInjectable({ factory: function CommonService_Factory() { return new CommonService(); }, token: CommonService, providedIn: "root" });
    return CommonService;
}());
export { CommonService };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1jb21tb24tbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL2NvbW1vbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7O0lBVzlCLDBDQUFrQjs7Ozs7Y0FBQyxLQUF3QztRQUM5RCxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNoQixNQUFNLENBQUMsS0FBSyxDQUFDO1NBQ2hCO1FBRUQsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLE1BQU0sSUFBSSxLQUFLLEtBQUssTUFBTSxJQUFJLEtBQUssS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzNELE1BQU0sQ0FBQyxJQUFJLENBQUM7U0FDZjtRQUVELE1BQU0sQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRO1lBQzVCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ1YsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7OztnQkFwQnJCLFVBQVUsU0FBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckI7Ozt3QkFKRDs7U0FLYSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBDb21tb25TZXJ2aWNlIHtcblxuICAgIC8qKlxuICAgICAqIFBhcnNlIGFueSBwcmltaXRpdmUgdmFsdWUgKHN0cmluZywgbnVtYmVyLCBib29sZWFuLCB1bmRlZmluZWQgb3IgbnVsbCkgdG8gYSBib29sZWFuIHRydWUgb3IgZmFsc2UuXG4gICAgICogQHBhcmFtIHZhbHVlIFZhbHVlIHRvIHBhcnNlLlxuICAgICAqL1xuICAgIHB1YmxpYyBwcmltaXRpdmVUb0Jvb2xlYW4odmFsdWU/OiBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuIHwgbnVsbCk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlID09PSAndHJ1ZScgfHwgdmFsdWUgPT09ICdUcnVlJyB8fCB2YWx1ZSA9PT0gJ1RSVUUnKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnXG4gICAgICAgICAgICA/ICEhK3ZhbHVlICAgLy8gd2UgcGFyc2Ugc3RyaW5nIHRvIG51bWJlciBmaXJzdFxuICAgICAgICAgICAgOiAhIXZhbHVlO1xuICAgIH1cbn1cbiJdfQ==