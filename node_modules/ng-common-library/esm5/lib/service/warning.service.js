/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var WarningService = /** @class */ (function () {
    function WarningService() {
    }
    /**
     * Returns the correct warning color CSS class
     *
     * @param {?} warning Warning category
     * @return {?}
     */
    WarningService.prototype.getWarningClass = /**
     * Returns the correct warning color CSS class
     *
     * @param {?} warning Warning category
     * @return {?}
     */
    function (warning) {
        /** @type {?} */
        var warningClass = null;
        switch (warning) {
            case 'V':
                warningClass = 'vh-warning';
                break;
            case 'H':
                warningClass = 'h-warning';
                break;
            case 'M':
                warningClass = 'm-warning';
                break;
            default:
                break;
        }
        return warningClass;
    };
    WarningService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    WarningService.ctorParameters = function () { return []; };
    /** @nocollapse */ WarningService.ngInjectableDef = i0.defineInjectable({ factory: function WarningService_Factory() { return new WarningService(); }, token: WarningService, providedIn: "root" });
    return WarningService;
}());
export { WarningService };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FybmluZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctY29tbW9uLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS93YXJuaW5nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7OztJQU92QztLQUNDOzs7Ozs7O0lBT00sd0NBQWU7Ozs7OztjQUFDLE9BQWU7O1FBQ3BDLElBQUksWUFBWSxHQUFXLElBQUksQ0FBQztRQUNoQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLEtBQUssR0FBRztnQkFDTixZQUFZLEdBQUcsWUFBWSxDQUFDO2dCQUM1QixLQUFLLENBQUM7WUFDUixLQUFLLEdBQUc7Z0JBQ04sWUFBWSxHQUFHLFdBQVcsQ0FBQztnQkFDM0IsS0FBSyxDQUFDO1lBQ1IsS0FBSyxHQUFHO2dCQUNOLFlBQVksR0FBRyxXQUFXLENBQUM7Z0JBQzNCLEtBQUssQ0FBQztZQUNSO2dCQUNFLEtBQUssQ0FBQztTQUNUO1FBQ0QsTUFBTSxDQUFDLFlBQVksQ0FBQzs7O2dCQTVCdkIsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7eUJBSkQ7O1NBS2EsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFdhcm5pbmdTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBjb3JyZWN0IHdhcm5pbmcgY29sb3IgQ1NTIGNsYXNzXG4gICAqXG4gICAqIEBwYXJhbSB3YXJuaW5nIFdhcm5pbmcgY2F0ZWdvcnlcbiAgICovXG4gIHB1YmxpYyBnZXRXYXJuaW5nQ2xhc3Mod2FybmluZzogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBsZXQgd2FybmluZ0NsYXNzOiBzdHJpbmcgPSBudWxsO1xuICAgIHN3aXRjaCAod2FybmluZykge1xuICAgICAgY2FzZSAnVic6XG4gICAgICAgIHdhcm5pbmdDbGFzcyA9ICd2aC13YXJuaW5nJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdIJzpcbiAgICAgICAgd2FybmluZ0NsYXNzID0gJ2gtd2FybmluZyc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnTSc6XG4gICAgICAgIHdhcm5pbmdDbGFzcyA9ICdtLXdhcm5pbmcnO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gd2FybmluZ0NsYXNzO1xuICB9XG5cbn1cbiJdfQ==