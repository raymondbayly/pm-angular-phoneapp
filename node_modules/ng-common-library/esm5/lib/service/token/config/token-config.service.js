/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var TokenConfigService = /** @class */ (function () {
    function TokenConfigService() {
        this.checkTokenEndPoint = null;
        this.refreshTokenEndPoint = null;
        this.getTokenEndPoint = null;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    TokenConfigService.prototype.setCheckTokenEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.checkTokenEndPoint = value;
    };
    /**
     * @return {?}
     */
    TokenConfigService.prototype.getCheckTokenEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.checkTokenEndPoint) {
            console.warn('Check token endpoint is not set!');
        }
        return this.checkTokenEndPoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    TokenConfigService.prototype.setRefreshTokenEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.refreshTokenEndPoint = value;
    };
    /**
     * @return {?}
     */
    TokenConfigService.prototype.getRefreshTokenEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.refreshTokenEndPoint) {
            console.warn('Refresh token endpoint is not set!');
        }
        return this.refreshTokenEndPoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    TokenConfigService.prototype.setGetTokenEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.getTokenEndPoint = value;
    };
    /**
     * @return {?}
     */
    TokenConfigService.prototype.getGetTokenEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.getTokenEndPoint) {
            console.warn('Get token endpoint is not set!');
        }
        return this.getTokenEndPoint;
    };
    TokenConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ TokenConfigService.ngInjectableDef = i0.defineInjectable({ factory: function TokenConfigService_Factory() { return new TokenConfigService(); }, token: TokenConfigService, providedIn: "root" });
    return TokenConfigService;
}());
export { TokenConfigService };
if (false) {
    /** @type {?} */
    TokenConfigService.prototype.checkTokenEndPoint;
    /** @type {?} */
    TokenConfigService.prototype.refreshTokenEndPoint;
    /** @type {?} */
    TokenConfigService.prototype.getTokenEndPoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1jb21tb24tbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL3Rva2VuL2NvbmZpZy90b2tlbi1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7OztrQ0FNQSxJQUFJO29DQUNGLElBQUk7Z0NBQ1IsSUFBSTs7Ozs7O0lBRWhDLGtEQUFxQjs7OztjQUFDLEtBQWE7UUFDdEMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQzs7Ozs7SUFHN0Isa0RBQXFCOzs7O1FBQ3hCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztZQUMzQixPQUFPLENBQUMsSUFBSSxDQUFDLGtDQUFrQyxDQUFDLENBQUM7U0FDcEQ7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDOzs7Ozs7SUFHNUIsb0RBQXVCOzs7O2NBQUMsS0FBYTtRQUN4QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsS0FBSyxDQUFDOzs7OztJQUcvQixvREFBdUI7Ozs7UUFDMUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDO1lBQzdCLE9BQU8sQ0FBQyxJQUFJLENBQUMsb0NBQW9DLENBQUMsQ0FBQztTQUN0RDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUM7Ozs7OztJQUc5QixnREFBbUI7Ozs7Y0FBQyxLQUFhO1FBQ3BDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7Ozs7O0lBRzNCLGdEQUFtQjs7OztRQUN0QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7WUFDekIsT0FBTyxDQUFDLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1NBQ2xEO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQzs7O2dCQXRDcEMsVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7OzZCQUpEOztTQUthLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgVG9rZW5Db25maWdTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGNoZWNrVG9rZW5FbmRQb2ludDogc3RyaW5nID0gbnVsbDtcbiAgICBwcml2YXRlIHJlZnJlc2hUb2tlbkVuZFBvaW50OiBzdHJpbmcgPSBudWxsO1xuICAgIHByaXZhdGUgZ2V0VG9rZW5FbmRQb2ludDogc3RyaW5nID0gbnVsbDtcblxuICAgIHB1YmxpYyBzZXRDaGVja1Rva2VuRW5kUG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmNoZWNrVG9rZW5FbmRQb2ludCA9IHZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRDaGVja1Rva2VuRW5kUG9pbnQoKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKCF0aGlzLmNoZWNrVG9rZW5FbmRQb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdDaGVjayB0b2tlbiBlbmRwb2ludCBpcyBub3Qgc2V0IScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNoZWNrVG9rZW5FbmRQb2ludDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0UmVmcmVzaFRva2VuRW5kUG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlZnJlc2hUb2tlbkVuZFBvaW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFJlZnJlc2hUb2tlbkVuZFBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5yZWZyZXNoVG9rZW5FbmRQb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdSZWZyZXNoIHRva2VuIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucmVmcmVzaFRva2VuRW5kUG9pbnQ7XG4gICAgfVxuXG4gICAgcHVibGljIHNldEdldFRva2VuRW5kUG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmdldFRva2VuRW5kUG9pbnQgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0R2V0VG9rZW5FbmRQb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuZ2V0VG9rZW5FbmRQb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdHZXQgdG9rZW4gZW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5nZXRUb2tlbkVuZFBvaW50O1xuICAgIH1cbn1cbiJdfQ==