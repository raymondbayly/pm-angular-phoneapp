/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var PeragraphConfigService = /** @class */ (function () {
    function PeragraphConfigService() {
        this.singlePeraGraphEndPoint = null;
        this.allPeraGraphsEndPoint = null;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    PeragraphConfigService.prototype.setSinglePeraGraphEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.singlePeraGraphEndPoint = value;
    };
    /**
     * @return {?}
     */
    PeragraphConfigService.prototype.getSinglePeraGraphEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.singlePeraGraphEndPoint) {
            console.warn('Single PeraGraph endpoint is not set!');
        }
        return this.singlePeraGraphEndPoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PeragraphConfigService.prototype.setAllPeraGraphsEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.allPeraGraphsEndPoint = value;
    };
    /**
     * @return {?}
     */
    PeragraphConfigService.prototype.getAllPeraGraphsEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.allPeraGraphsEndPoint) {
            console.warn('All PeraGraph endpoint is not set!');
        }
        return this.allPeraGraphsEndPoint;
    };
    PeragraphConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ PeragraphConfigService.ngInjectableDef = i0.defineInjectable({ factory: function PeragraphConfigService_Factory() { return new PeragraphConfigService(); }, token: PeragraphConfigService, providedIn: "root" });
    return PeragraphConfigService;
}());
export { PeragraphConfigService };
if (false) {
    /** @type {?} */
    PeragraphConfigService.prototype.singlePeraGraphEndPoint;
    /** @type {?} */
    PeragraphConfigService.prototype.allPeraGraphsEndPoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyYWdyYXBoLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctY29tbW9uLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS9wZXJhZ3JhcGgvY29uZmlnL3BlcmFncmFwaC1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7Ozt1Q0FPSyxJQUFJO3FDQUNOLElBQUk7Ozs7OztJQUVyQywyREFBMEI7Ozs7Y0FBQyxLQUFhO1FBQzNDLElBQUksQ0FBQyx1QkFBdUIsR0FBRyxLQUFLLENBQUM7Ozs7O0lBR2xDLDJEQUEwQjs7OztRQUM3QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7WUFDaEMsT0FBTyxDQUFDLElBQUksQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO1NBQ3pEO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQzs7Ozs7O0lBR2pDLHlEQUF3Qjs7OztjQUFDLEtBQWE7UUFDekMsSUFBSSxDQUFDLHFCQUFxQixHQUFHLEtBQUssQ0FBQzs7Ozs7SUFHaEMseURBQXdCOzs7O1FBQzNCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQztZQUM5QixPQUFPLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7U0FDdEQ7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDOzs7Z0JBM0J6QyxVQUFVLFNBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCOzs7aUNBSkQ7O1NBS2Esc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBQZXJhZ3JhcGhDb25maWdTZXJ2aWNlIHtcblxuICAgIHByaXZhdGUgc2luZ2xlUGVyYUdyYXBoRW5kUG9pbnQ6IHN0cmluZyA9IG51bGw7XG4gICAgcHJpdmF0ZSBhbGxQZXJhR3JhcGhzRW5kUG9pbnQ6IHN0cmluZyA9IG51bGw7XG5cbiAgICBwdWJsaWMgc2V0U2luZ2xlUGVyYUdyYXBoRW5kUG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLnNpbmdsZVBlcmFHcmFwaEVuZFBvaW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFNpbmdsZVBlcmFHcmFwaEVuZFBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5zaW5nbGVQZXJhR3JhcGhFbmRQb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdTaW5nbGUgUGVyYUdyYXBoIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2luZ2xlUGVyYUdyYXBoRW5kUG9pbnQ7XG4gICAgfVxuXG4gICAgcHVibGljIHNldEFsbFBlcmFHcmFwaHNFbmRQb2ludCh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWxsUGVyYUdyYXBoc0VuZFBvaW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFsbFBlcmFHcmFwaHNFbmRQb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuYWxsUGVyYUdyYXBoc0VuZFBvaW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0FsbCBQZXJhR3JhcGggZW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5hbGxQZXJhR3JhcGhzRW5kUG9pbnQ7XG4gICAgfVxufVxuIl19