/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var FlowsheetsConfigService = /** @class */ (function () {
    function FlowsheetsConfigService() {
        this.singlePeraGraphFlowSheetEndPoint = null;
        this.allPeragraphFlowSheetsEndPoint = null;
        this.detailedFlowSheetColumnEndpoint = null;
        this.latestRiScoresEndPoint = null;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    FlowsheetsConfigService.prototype.setSinglePeraGraphFlowSheetEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.singlePeraGraphFlowSheetEndPoint = value;
    };
    /**
     * @return {?}
     */
    FlowsheetsConfigService.prototype.getSinglePeraGraphFlowSheetEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.singlePeraGraphFlowSheetEndPoint) {
            console.warn('Single PeraGraph flowsheet endpoint is not set!');
        }
        return this.singlePeraGraphFlowSheetEndPoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    FlowsheetsConfigService.prototype.setAllPeragraphFlowSheetsEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.allPeragraphFlowSheetsEndPoint = value;
    };
    /**
     * @return {?}
     */
    FlowsheetsConfigService.prototype.getAllPeragraphFlowSheetsEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.allPeragraphFlowSheetsEndPoint) {
            console.warn('All PeraGraph flowsheets endpoint is not set!');
        }
        return this.allPeragraphFlowSheetsEndPoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    FlowsheetsConfigService.prototype.setDetailedFlowSheetColumnEndpoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.detailedFlowSheetColumnEndpoint = value;
    };
    /**
     * @return {?}
     */
    FlowsheetsConfigService.prototype.getDetailedFlowSheetColumnEndpoint = /**
     * @return {?}
     */
    function () {
        if (!this.detailedFlowSheetColumnEndpoint) {
            console.warn('Detailed flowsheet column endpoint is not set!');
        }
        return this.detailedFlowSheetColumnEndpoint;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    FlowsheetsConfigService.prototype.setLatestRiScoresEndPoint = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.latestRiScoresEndPoint = value;
    };
    /**
     * @return {?}
     */
    FlowsheetsConfigService.prototype.getLatestRiScoresEndPoint = /**
     * @return {?}
     */
    function () {
        if (!this.latestRiScoresEndPoint) {
            console.warn('Latest RI Scores endpoint is not set!');
        }
        return this.latestRiScoresEndPoint;
    };
    FlowsheetsConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ FlowsheetsConfigService.ngInjectableDef = i0.defineInjectable({ factory: function FlowsheetsConfigService_Factory() { return new FlowsheetsConfigService(); }, token: FlowsheetsConfigService, providedIn: "root" });
    return FlowsheetsConfigService;
}());
export { FlowsheetsConfigService };
if (false) {
    /** @type {?} */
    FlowsheetsConfigService.prototype.singlePeraGraphFlowSheetEndPoint;
    /** @type {?} */
    FlowsheetsConfigService.prototype.allPeragraphFlowSheetsEndPoint;
    /** @type {?} */
    FlowsheetsConfigService.prototype.detailedFlowSheetColumnEndpoint;
    /** @type {?} */
    FlowsheetsConfigService.prototype.latestRiScoresEndPoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxvd3NoZWV0cy1jb25maWcuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWNvbW1vbi1saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2UvZmxvd3NoZWV0cy9jb25maWcvZmxvd3NoZWV0cy1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7OztnREFPYyxJQUFJOzhDQUNOLElBQUk7K0NBQ0gsSUFBSTtzQ0FDYixJQUFJOzs7Ozs7SUFFN0MscUVBQW1DOzs7O0lBQW5DLFVBQW9DLEtBQWE7UUFDN0MsSUFBSSxDQUFDLGdDQUFnQyxHQUFHLEtBQUssQ0FBQztLQUNqRDs7OztJQUVELHFFQUFtQzs7O0lBQW5DO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsQ0FBQyxDQUFDO1lBQ3pDLE9BQU8sQ0FBQyxJQUFJLENBQUMsaURBQWlELENBQUMsQ0FBQztTQUNuRTtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0NBQWdDLENBQUM7S0FDaEQ7Ozs7O0lBRUQsbUVBQWlDOzs7O0lBQWpDLFVBQWtDLEtBQWE7UUFDM0MsSUFBSSxDQUFDLDhCQUE4QixHQUFHLEtBQUssQ0FBQztLQUMvQzs7OztJQUVELG1FQUFpQzs7O0lBQWpDO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsOEJBQThCLENBQUMsQ0FBQyxDQUFDO1lBQ3ZDLE9BQU8sQ0FBQyxJQUFJLENBQUMsK0NBQStDLENBQUMsQ0FBQztTQUNqRTtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsOEJBQThCLENBQUM7S0FDOUM7Ozs7O0lBRUQsb0VBQWtDOzs7O0lBQWxDLFVBQW1DLEtBQWE7UUFDNUMsSUFBSSxDQUFDLCtCQUErQixHQUFHLEtBQUssQ0FBQztLQUNoRDs7OztJQUVELG9FQUFrQzs7O0lBQWxDO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsK0JBQStCLENBQUMsQ0FBQyxDQUFDO1lBQ3hDLE9BQU8sQ0FBQyxJQUFJLENBQUMsZ0RBQWdELENBQUMsQ0FBQztTQUNsRTtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsK0JBQStCLENBQUM7S0FDL0M7Ozs7O0lBRUQsMkRBQXlCOzs7O0lBQXpCLFVBQTBCLEtBQWE7UUFDbkMsSUFBSSxDQUFDLHNCQUFzQixHQUFHLEtBQUssQ0FBQztLQUN2Qzs7OztJQUVELDJEQUF5Qjs7O0lBQXpCO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO1lBQy9CLE9BQU8sQ0FBQyxJQUFJLENBQUMsdUNBQXVDLENBQUMsQ0FBQztTQUN6RDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUM7S0FDdEM7O2dCQXBESixVQUFVLFNBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCOzs7a0NBSkQ7O1NBS2EsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBGbG93c2hlZXRzQ29uZmlnU2VydmljZSB7XG5cbiAgICBwcml2YXRlIHNpbmdsZVBlcmFHcmFwaEZsb3dTaGVldEVuZFBvaW50OiBzdHJpbmcgPSBudWxsO1xuICAgIHByaXZhdGUgYWxsUGVyYWdyYXBoRmxvd1NoZWV0c0VuZFBvaW50OiBzdHJpbmcgPSBudWxsO1xuICAgIHByaXZhdGUgZGV0YWlsZWRGbG93U2hlZXRDb2x1bW5FbmRwb2ludDogc3RyaW5nID0gbnVsbDtcbiAgICBwcml2YXRlIGxhdGVzdFJpU2NvcmVzRW5kUG9pbnQ6IHN0cmluZyA9IG51bGw7XG5cbiAgICBzZXRTaW5nbGVQZXJhR3JhcGhGbG93U2hlZXRFbmRQb2ludCh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc2luZ2xlUGVyYUdyYXBoRmxvd1NoZWV0RW5kUG9pbnQgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXRTaW5nbGVQZXJhR3JhcGhGbG93U2hlZXRFbmRQb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuc2luZ2xlUGVyYUdyYXBoRmxvd1NoZWV0RW5kUG9pbnQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignU2luZ2xlIFBlcmFHcmFwaCBmbG93c2hlZXQgZW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5zaW5nbGVQZXJhR3JhcGhGbG93U2hlZXRFbmRQb2ludDtcbiAgICB9XG5cbiAgICBzZXRBbGxQZXJhZ3JhcGhGbG93U2hlZXRzRW5kUG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmFsbFBlcmFncmFwaEZsb3dTaGVldHNFbmRQb2ludCA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldEFsbFBlcmFncmFwaEZsb3dTaGVldHNFbmRQb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuYWxsUGVyYWdyYXBoRmxvd1NoZWV0c0VuZFBvaW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0FsbCBQZXJhR3JhcGggZmxvd3NoZWV0cyBlbmRwb2ludCBpcyBub3Qgc2V0IScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmFsbFBlcmFncmFwaEZsb3dTaGVldHNFbmRQb2ludDtcbiAgICB9XG5cbiAgICBzZXREZXRhaWxlZEZsb3dTaGVldENvbHVtbkVuZHBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kZXRhaWxlZEZsb3dTaGVldENvbHVtbkVuZHBvaW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0RGV0YWlsZWRGbG93U2hlZXRDb2x1bW5FbmRwb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuZGV0YWlsZWRGbG93U2hlZXRDb2x1bW5FbmRwb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdEZXRhaWxlZCBmbG93c2hlZXQgY29sdW1uIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZGV0YWlsZWRGbG93U2hlZXRDb2x1bW5FbmRwb2ludDtcbiAgICB9XG5cbiAgICBzZXRMYXRlc3RSaVNjb3Jlc0VuZFBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5sYXRlc3RSaVNjb3Jlc0VuZFBvaW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0TGF0ZXN0UmlTY29yZXNFbmRQb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMubGF0ZXN0UmlTY29yZXNFbmRQb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdMYXRlc3QgUkkgU2NvcmVzIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubGF0ZXN0UmlTY29yZXNFbmRQb2ludDtcbiAgICB9XG59XG4iXX0=