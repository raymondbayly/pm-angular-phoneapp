/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class WarningService {
    constructor() {
    }
    /**
     * Returns the correct warning color CSS class
     *
     * @param {?} warning Warning category
     * @return {?}
     */
    getWarningClass(warning) {
        /** @type {?} */
        let warningClass = null;
        switch (warning) {
            case 'V':
                warningClass = 'vh-warning';
                break;
            case 'H':
                warningClass = 'h-warning';
                break;
            case 'M':
                warningClass = 'm-warning';
                break;
            default:
                break;
        }
        return warningClass;
    }
}
WarningService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
WarningService.ctorParameters = () => [];
/** @nocollapse */ WarningService.ngInjectableDef = i0.defineInjectable({ factory: function WarningService_Factory() { return new WarningService(); }, token: WarningService, providedIn: "root" });

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FybmluZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctY29tbW9uLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS93YXJuaW5nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7O0FBS3pDLE1BQU07SUFFSjtLQUNDOzs7Ozs7O0lBT00sZUFBZSxDQUFDLE9BQWU7O1FBQ3BDLElBQUksWUFBWSxHQUFXLElBQUksQ0FBQztRQUNoQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLEtBQUssR0FBRztnQkFDTixZQUFZLEdBQUcsWUFBWSxDQUFDO2dCQUM1QixLQUFLLENBQUM7WUFDUixLQUFLLEdBQUc7Z0JBQ04sWUFBWSxHQUFHLFdBQVcsQ0FBQztnQkFDM0IsS0FBSyxDQUFDO1lBQ1IsS0FBSyxHQUFHO2dCQUNOLFlBQVksR0FBRyxXQUFXLENBQUM7Z0JBQzNCLEtBQUssQ0FBQztZQUNSO2dCQUNFLEtBQUssQ0FBQztTQUNUO1FBQ0QsTUFBTSxDQUFDLFlBQVksQ0FBQzs7OztZQTVCdkIsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgV2FybmluZ1NlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGNvcnJlY3Qgd2FybmluZyBjb2xvciBDU1MgY2xhc3NcbiAgICpcbiAgICogQHBhcmFtIHdhcm5pbmcgV2FybmluZyBjYXRlZ29yeVxuICAgKi9cbiAgcHVibGljIGdldFdhcm5pbmdDbGFzcyh3YXJuaW5nOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGxldCB3YXJuaW5nQ2xhc3M6IHN0cmluZyA9IG51bGw7XG4gICAgc3dpdGNoICh3YXJuaW5nKSB7XG4gICAgICBjYXNlICdWJzpcbiAgICAgICAgd2FybmluZ0NsYXNzID0gJ3ZoLXdhcm5pbmcnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0gnOlxuICAgICAgICB3YXJuaW5nQ2xhc3MgPSAnaC13YXJuaW5nJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdNJzpcbiAgICAgICAgd2FybmluZ0NsYXNzID0gJ20td2FybmluZyc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiB3YXJuaW5nQ2xhc3M7XG4gIH1cblxufVxuIl19