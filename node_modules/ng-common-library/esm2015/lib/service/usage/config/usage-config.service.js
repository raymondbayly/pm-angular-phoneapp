/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class UsageConfigService {
    constructor() {
        this.usagePollingInterval = 5000;
    }
    /**
     * @param {?} value Endpoint for sending usage data.
     * @return {?}
     */
    setUsageDataEndPoint(value) {
        this.usageDataEndPoint = value;
    }
    /**
     * Endpoint for sending usage data.
     * @return {?}
     */
    getUsageDataEndPoint() {
        if (!this.usageDataEndPoint) {
            console.warn('usage data endpoint is not set!');
        }
        return this.usageDataEndPoint;
    }
    /**
     * Number of milliseconds between polling attempts.
     * @return {?}
     */
    getUsagePollingInterval() {
        return this.usagePollingInterval;
    }
    /**
     * @param {?} value Number of milliseconds between polling attempts.
     * @return {?}
     */
    setUsagePollingInterval(value) {
        this.usagePollingInterval = value;
    }
}
UsageConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ UsageConfigService.ngInjectableDef = i0.defineInjectable({ factory: function UsageConfigService_Factory() { return new UsageConfigService(); }, token: UsageConfigService, providedIn: "root" });
if (false) {
    /** @type {?} */
    UsageConfigService.prototype.usageDataEndPoint;
    /** @type {?} */
    UsageConfigService.prototype.usagePollingInterval;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNhZ2UtY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1jb21tb24tbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL3VzYWdlL2NvbmZpZy91c2FnZS1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFLekMsTUFBTTs7b0NBRzJCLElBQUk7Ozs7OztJQUc1QixvQkFBb0IsQ0FBQyxLQUFhO1FBQ3ZDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7Ozs7OztJQUkxQixvQkFBb0I7UUFDekIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO1lBQzVCLE9BQU8sQ0FBQyxJQUFJLENBQUMsaUNBQWlDLENBQUMsQ0FBQztTQUNqRDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUM7Ozs7OztJQUl6Qix1QkFBdUI7UUFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7O0lBSTVCLHVCQUF1QixDQUFDLEtBQWE7UUFDMUMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLEtBQUssQ0FBQzs7OztZQTVCckMsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgVXNhZ2VDb25maWdTZXJ2aWNlIHtcbiAgcHJpdmF0ZSB1c2FnZURhdGFFbmRQb2ludDogc3RyaW5nO1xuICAvLyBEZWZhdWx0IHRvIHBvbGxpbmcgZXZlcnkgNSBzZWNvbmRzXG4gIHByaXZhdGUgdXNhZ2VQb2xsaW5nSW50ZXJ2YWwgPSA1MDAwO1xuXG4gIC8qKiBAcGFyYW0gdmFsdWUgRW5kcG9pbnQgZm9yIHNlbmRpbmcgdXNhZ2UgZGF0YS4gKi9cbiAgcHVibGljIHNldFVzYWdlRGF0YUVuZFBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLnVzYWdlRGF0YUVuZFBvaW50ID0gdmFsdWU7XG4gIH1cblxuICAvKiogRW5kcG9pbnQgZm9yIHNlbmRpbmcgdXNhZ2UgZGF0YS4gKi9cbiAgcHVibGljIGdldFVzYWdlRGF0YUVuZFBvaW50KCk6IHN0cmluZyB7XG4gICAgaWYgKCF0aGlzLnVzYWdlRGF0YUVuZFBvaW50KSB7XG4gICAgICBjb25zb2xlLndhcm4oJ3VzYWdlIGRhdGEgZW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMudXNhZ2VEYXRhRW5kUG9pbnQ7XG4gIH1cblxuICAvKiogTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBiZXR3ZWVuIHBvbGxpbmcgYXR0ZW1wdHMuICovXG4gIHB1YmxpYyBnZXRVc2FnZVBvbGxpbmdJbnRlcnZhbCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnVzYWdlUG9sbGluZ0ludGVydmFsO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB2YWx1ZSBOdW1iZXIgb2YgbWlsbGlzZWNvbmRzIGJldHdlZW4gcG9sbGluZyBhdHRlbXB0cy4gKi9cbiAgcHVibGljIHNldFVzYWdlUG9sbGluZ0ludGVydmFsKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLnVzYWdlUG9sbGluZ0ludGVydmFsID0gdmFsdWU7XG4gIH1cbn1cbiJdfQ==