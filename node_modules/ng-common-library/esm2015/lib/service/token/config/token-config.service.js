/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class TokenConfigService {
    constructor() {
        this.checkTokenEndPoint = null;
        this.refreshTokenEndPoint = null;
        this.getTokenEndPoint = null;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setCheckTokenEndPoint(value) {
        this.checkTokenEndPoint = value;
    }
    /**
     * @return {?}
     */
    getCheckTokenEndPoint() {
        if (!this.checkTokenEndPoint) {
            console.warn('Check token endpoint is not set!');
        }
        return this.checkTokenEndPoint;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setRefreshTokenEndPoint(value) {
        this.refreshTokenEndPoint = value;
    }
    /**
     * @return {?}
     */
    getRefreshTokenEndPoint() {
        if (!this.refreshTokenEndPoint) {
            console.warn('Refresh token endpoint is not set!');
        }
        return this.refreshTokenEndPoint;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setGetTokenEndPoint(value) {
        this.getTokenEndPoint = value;
    }
    /**
     * @return {?}
     */
    getGetTokenEndPoint() {
        if (!this.getTokenEndPoint) {
            console.warn('Get token endpoint is not set!');
        }
        return this.getTokenEndPoint;
    }
}
TokenConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ TokenConfigService.ngInjectableDef = i0.defineInjectable({ factory: function TokenConfigService_Factory() { return new TokenConfigService(); }, token: TokenConfigService, providedIn: "root" });
if (false) {
    /** @type {?} */
    TokenConfigService.prototype.checkTokenEndPoint;
    /** @type {?} */
    TokenConfigService.prototype.refreshTokenEndPoint;
    /** @type {?} */
    TokenConfigService.prototype.getTokenEndPoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1jb21tb24tbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL3Rva2VuL2NvbmZpZy90b2tlbi1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFLekMsTUFBTTs7a0NBQ21DLElBQUk7b0NBQ0YsSUFBSTtnQ0FDUixJQUFJOzs7Ozs7SUFFaEMscUJBQXFCLENBQUMsS0FBYTtRQUN0QyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsS0FBSyxDQUFDOzs7OztJQUc3QixxQkFBcUI7UUFDeEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO1lBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsa0NBQWtDLENBQUMsQ0FBQztTQUNwRDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUM7Ozs7OztJQUc1Qix1QkFBdUIsQ0FBQyxLQUFhO1FBQ3hDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLENBQUM7Ozs7O0lBRy9CLHVCQUF1QjtRQUMxQixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7WUFDN0IsT0FBTyxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1NBQ3REO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7O0lBRzlCLG1CQUFtQixDQUFDLEtBQWE7UUFDcEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQzs7Ozs7SUFHM0IsbUJBQW1CO1FBQ3RCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztZQUN6QixPQUFPLENBQUMsSUFBSSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7U0FDbEQ7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDOzs7O1lBdENwQyxVQUFVLFNBQUM7Z0JBQ1IsVUFBVSxFQUFFLE1BQU07YUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFRva2VuQ29uZmlnU2VydmljZSB7XG4gICAgcHJpdmF0ZSBjaGVja1Rva2VuRW5kUG9pbnQ6IHN0cmluZyA9IG51bGw7XG4gICAgcHJpdmF0ZSByZWZyZXNoVG9rZW5FbmRQb2ludDogc3RyaW5nID0gbnVsbDtcbiAgICBwcml2YXRlIGdldFRva2VuRW5kUG9pbnQ6IHN0cmluZyA9IG51bGw7XG5cbiAgICBwdWJsaWMgc2V0Q2hlY2tUb2tlbkVuZFBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jaGVja1Rva2VuRW5kUG9pbnQgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Q2hlY2tUb2tlbkVuZFBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5jaGVja1Rva2VuRW5kUG9pbnQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignQ2hlY2sgdG9rZW4gZW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jaGVja1Rva2VuRW5kUG9pbnQ7XG4gICAgfVxuXG4gICAgcHVibGljIHNldFJlZnJlc2hUb2tlbkVuZFBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5yZWZyZXNoVG9rZW5FbmRQb2ludCA9IHZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRSZWZyZXNoVG9rZW5FbmRQb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMucmVmcmVzaFRva2VuRW5kUG9pbnQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignUmVmcmVzaCB0b2tlbiBlbmRwb2ludCBpcyBub3Qgc2V0IScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnJlZnJlc2hUb2tlbkVuZFBvaW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRHZXRUb2tlbkVuZFBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5nZXRUb2tlbkVuZFBvaW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEdldFRva2VuRW5kUG9pbnQoKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKCF0aGlzLmdldFRva2VuRW5kUG9pbnQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignR2V0IHRva2VuIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VG9rZW5FbmRQb2ludDtcbiAgICB9XG59XG4iXX0=