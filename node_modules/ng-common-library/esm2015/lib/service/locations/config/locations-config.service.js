/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class LocationsConfigService {
    constructor() {
        this.activeFacilitiesEndpoint = null;
        this.activeUnitsEndpoint = null;
    }
    /**
     * @return {?}
     */
    getActiveFacilitiesEndpoint() {
        if (!this.activeFacilitiesEndpoint) {
            console.warn('Active facilities endpoint is not set!');
        }
        return this.activeFacilitiesEndpoint;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setActiveFacilitiesEndpoint(value) {
        this.activeFacilitiesEndpoint = value;
    }
    /**
     * @return {?}
     */
    getActiveUnitsEndpoint() {
        if (!this.activeUnitsEndpoint) {
            console.warn('Active units endpoint is not set!');
        }
        return this.activeUnitsEndpoint;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setActiveUnitsEndpoint(value) {
        this.activeUnitsEndpoint = value;
    }
}
LocationsConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ LocationsConfigService.ngInjectableDef = i0.defineInjectable({ factory: function LocationsConfigService_Factory() { return new LocationsConfigService(); }, token: LocationsConfigService, providedIn: "root" });
if (false) {
    /** @type {?} */
    LocationsConfigService.prototype.activeFacilitiesEndpoint;
    /** @type {?} */
    LocationsConfigService.prototype.activeUnitsEndpoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYXRpb25zLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctY29tbW9uLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS9sb2NhdGlvbnMvY29uZmlnL2xvY2F0aW9ucy1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFLekMsTUFBTTs7d0NBQ3lDLElBQUk7bUNBQ1QsSUFBSTs7Ozs7SUFFbkMsMkJBQTJCO1FBQzlCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUMsQ0FBQztZQUNqQyxPQUFPLENBQUMsSUFBSSxDQUFDLHdDQUF3QyxDQUFDLENBQUM7U0FDMUQ7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDOzs7Ozs7SUFHbEMsMkJBQTJCLENBQUMsS0FBYTtRQUM1QyxJQUFJLENBQUMsd0JBQXdCLEdBQUcsS0FBSyxDQUFDOzs7OztJQUduQyxzQkFBc0I7UUFDekIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO1lBQzVCLE9BQU8sQ0FBQyxJQUFJLENBQUMsbUNBQW1DLENBQUMsQ0FBQztTQUNyRDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUM7Ozs7OztJQUc3QixzQkFBc0IsQ0FBQyxLQUFhO1FBQ3ZDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxLQUFLLENBQUM7Ozs7WUExQnhDLFVBQVUsU0FBQztnQkFDUixVQUFVLEVBQUUsTUFBTTthQUNyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTG9jYXRpb25zQ29uZmlnU2VydmljZSB7XG4gICAgcHJpdmF0ZSBhY3RpdmVGYWNpbGl0aWVzRW5kcG9pbnQ6IHN0cmluZyA9IG51bGw7XG4gICAgcHJpdmF0ZSBhY3RpdmVVbml0c0VuZHBvaW50OiBzdHJpbmcgPSBudWxsO1xuXG4gICAgcHVibGljIGdldEFjdGl2ZUZhY2lsaXRpZXNFbmRwb2ludCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuYWN0aXZlRmFjaWxpdGllc0VuZHBvaW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0FjdGl2ZSBmYWNpbGl0aWVzIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlRmFjaWxpdGllc0VuZHBvaW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRBY3RpdmVGYWNpbGl0aWVzRW5kcG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmFjdGl2ZUZhY2lsaXRpZXNFbmRwb2ludCA9IHZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRBY3RpdmVVbml0c0VuZHBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5hY3RpdmVVbml0c0VuZHBvaW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0FjdGl2ZSB1bml0cyBlbmRwb2ludCBpcyBub3Qgc2V0IScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmFjdGl2ZVVuaXRzRW5kcG9pbnQ7XG4gICAgfVxuXG4gICAgcHVibGljIHNldEFjdGl2ZVVuaXRzRW5kcG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmFjdGl2ZVVuaXRzRW5kcG9pbnQgPSB2YWx1ZTtcbiAgICB9XG59XG4iXX0=