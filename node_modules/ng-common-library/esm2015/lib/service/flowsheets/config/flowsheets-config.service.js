/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class FlowsheetsConfigService {
    constructor() {
        this.singlePeraGraphFlowSheetEndPoint = null;
        this.allPeragraphFlowSheetsEndPoint = null;
        this.detailedFlowSheetColumnEndpoint = null;
        this.latestRiScoresEndPoint = null;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setSinglePeraGraphFlowSheetEndPoint(value) {
        this.singlePeraGraphFlowSheetEndPoint = value;
    }
    /**
     * @return {?}
     */
    getSinglePeraGraphFlowSheetEndPoint() {
        if (!this.singlePeraGraphFlowSheetEndPoint) {
            console.warn('Single PeraGraph flowsheet endpoint is not set!');
        }
        return this.singlePeraGraphFlowSheetEndPoint;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setAllPeragraphFlowSheetsEndPoint(value) {
        this.allPeragraphFlowSheetsEndPoint = value;
    }
    /**
     * @return {?}
     */
    getAllPeragraphFlowSheetsEndPoint() {
        if (!this.allPeragraphFlowSheetsEndPoint) {
            console.warn('All PeraGraph flowsheets endpoint is not set!');
        }
        return this.allPeragraphFlowSheetsEndPoint;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setDetailedFlowSheetColumnEndpoint(value) {
        this.detailedFlowSheetColumnEndpoint = value;
    }
    /**
     * @return {?}
     */
    getDetailedFlowSheetColumnEndpoint() {
        if (!this.detailedFlowSheetColumnEndpoint) {
            console.warn('Detailed flowsheet column endpoint is not set!');
        }
        return this.detailedFlowSheetColumnEndpoint;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setLatestRiScoresEndPoint(value) {
        this.latestRiScoresEndPoint = value;
    }
    /**
     * @return {?}
     */
    getLatestRiScoresEndPoint() {
        if (!this.latestRiScoresEndPoint) {
            console.warn('Latest RI Scores endpoint is not set!');
        }
        return this.latestRiScoresEndPoint;
    }
}
FlowsheetsConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ FlowsheetsConfigService.ngInjectableDef = i0.defineInjectable({ factory: function FlowsheetsConfigService_Factory() { return new FlowsheetsConfigService(); }, token: FlowsheetsConfigService, providedIn: "root" });
if (false) {
    /** @type {?} */
    FlowsheetsConfigService.prototype.singlePeraGraphFlowSheetEndPoint;
    /** @type {?} */
    FlowsheetsConfigService.prototype.allPeragraphFlowSheetsEndPoint;
    /** @type {?} */
    FlowsheetsConfigService.prototype.detailedFlowSheetColumnEndpoint;
    /** @type {?} */
    FlowsheetsConfigService.prototype.latestRiScoresEndPoint;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxvd3NoZWV0cy1jb25maWcuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWNvbW1vbi1saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2UvZmxvd3NoZWV0cy9jb25maWcvZmxvd3NoZWV0cy1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFLekMsTUFBTTs7Z0RBRWlELElBQUk7OENBQ04sSUFBSTsrQ0FDSCxJQUFJO3NDQUNiLElBQUk7Ozs7OztJQUU3QyxtQ0FBbUMsQ0FBQyxLQUFhO1FBQzdDLElBQUksQ0FBQyxnQ0FBZ0MsR0FBRyxLQUFLLENBQUM7S0FDakQ7Ozs7SUFFRCxtQ0FBbUM7UUFDL0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsQ0FBQyxDQUFDO1lBQ3pDLE9BQU8sQ0FBQyxJQUFJLENBQUMsaURBQWlELENBQUMsQ0FBQztTQUNuRTtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0NBQWdDLENBQUM7S0FDaEQ7Ozs7O0lBRUQsaUNBQWlDLENBQUMsS0FBYTtRQUMzQyxJQUFJLENBQUMsOEJBQThCLEdBQUcsS0FBSyxDQUFDO0tBQy9DOzs7O0lBRUQsaUNBQWlDO1FBQzdCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLDhCQUE4QixDQUFDLENBQUMsQ0FBQztZQUN2QyxPQUFPLENBQUMsSUFBSSxDQUFDLCtDQUErQyxDQUFDLENBQUM7U0FDakU7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLDhCQUE4QixDQUFDO0tBQzlDOzs7OztJQUVELGtDQUFrQyxDQUFDLEtBQWE7UUFDNUMsSUFBSSxDQUFDLCtCQUErQixHQUFHLEtBQUssQ0FBQztLQUNoRDs7OztJQUVELGtDQUFrQztRQUM5QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxDQUFDLENBQUM7WUFDeEMsT0FBTyxDQUFDLElBQUksQ0FBQyxnREFBZ0QsQ0FBQyxDQUFDO1NBQ2xFO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQywrQkFBK0IsQ0FBQztLQUMvQzs7Ozs7SUFFRCx5QkFBeUIsQ0FBQyxLQUFhO1FBQ25DLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxLQUFLLENBQUM7S0FDdkM7Ozs7SUFFRCx5QkFBeUI7UUFDckIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO1lBQy9CLE9BQU8sQ0FBQyxJQUFJLENBQUMsdUNBQXVDLENBQUMsQ0FBQztTQUN6RDtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUM7S0FDdEM7OztZQXBESixVQUFVLFNBQUM7Z0JBQ1IsVUFBVSxFQUFFLE1BQU07YUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEZsb3dzaGVldHNDb25maWdTZXJ2aWNlIHtcblxuICAgIHByaXZhdGUgc2luZ2xlUGVyYUdyYXBoRmxvd1NoZWV0RW5kUG9pbnQ6IHN0cmluZyA9IG51bGw7XG4gICAgcHJpdmF0ZSBhbGxQZXJhZ3JhcGhGbG93U2hlZXRzRW5kUG9pbnQ6IHN0cmluZyA9IG51bGw7XG4gICAgcHJpdmF0ZSBkZXRhaWxlZEZsb3dTaGVldENvbHVtbkVuZHBvaW50OiBzdHJpbmcgPSBudWxsO1xuICAgIHByaXZhdGUgbGF0ZXN0UmlTY29yZXNFbmRQb2ludDogc3RyaW5nID0gbnVsbDtcblxuICAgIHNldFNpbmdsZVBlcmFHcmFwaEZsb3dTaGVldEVuZFBvaW50KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zaW5nbGVQZXJhR3JhcGhGbG93U2hlZXRFbmRQb2ludCA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldFNpbmdsZVBlcmFHcmFwaEZsb3dTaGVldEVuZFBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5zaW5nbGVQZXJhR3JhcGhGbG93U2hlZXRFbmRQb2ludCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdTaW5nbGUgUGVyYUdyYXBoIGZsb3dzaGVldCBlbmRwb2ludCBpcyBub3Qgc2V0IScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnNpbmdsZVBlcmFHcmFwaEZsb3dTaGVldEVuZFBvaW50O1xuICAgIH1cblxuICAgIHNldEFsbFBlcmFncmFwaEZsb3dTaGVldHNFbmRQb2ludCh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWxsUGVyYWdyYXBoRmxvd1NoZWV0c0VuZFBvaW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0QWxsUGVyYWdyYXBoRmxvd1NoZWV0c0VuZFBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5hbGxQZXJhZ3JhcGhGbG93U2hlZXRzRW5kUG9pbnQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignQWxsIFBlcmFHcmFwaCBmbG93c2hlZXRzIGVuZHBvaW50IGlzIG5vdCBzZXQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYWxsUGVyYWdyYXBoRmxvd1NoZWV0c0VuZFBvaW50O1xuICAgIH1cblxuICAgIHNldERldGFpbGVkRmxvd1NoZWV0Q29sdW1uRW5kcG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmRldGFpbGVkRmxvd1NoZWV0Q29sdW1uRW5kcG9pbnQgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXREZXRhaWxlZEZsb3dTaGVldENvbHVtbkVuZHBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5kZXRhaWxlZEZsb3dTaGVldENvbHVtbkVuZHBvaW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0RldGFpbGVkIGZsb3dzaGVldCBjb2x1bW4gZW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5kZXRhaWxlZEZsb3dTaGVldENvbHVtbkVuZHBvaW50O1xuICAgIH1cblxuICAgIHNldExhdGVzdFJpU2NvcmVzRW5kUG9pbnQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmxhdGVzdFJpU2NvcmVzRW5kUG9pbnQgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXRMYXRlc3RSaVNjb3Jlc0VuZFBvaW50KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5sYXRlc3RSaVNjb3Jlc0VuZFBvaW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0xhdGVzdCBSSSBTY29yZXMgZW5kcG9pbnQgaXMgbm90IHNldCEnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5sYXRlc3RSaVNjb3Jlc0VuZFBvaW50O1xuICAgIH1cbn1cbiJdfQ==