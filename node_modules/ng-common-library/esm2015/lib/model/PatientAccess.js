/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
export class PatientAccess {
    /**
     * @param {?} viewedBy
     * @param {?} patient
     * @param {?} vipIndicator
     * @param {?} vnm
     * @param {?} mrn
     * @param {?} admitDate
     * @param {?} dischargeDate
     * @param {?} facilityId
     * @param {?} unitId
     * @param {?} provider
     * @param {?} utcCode
     * @param {?} usageCode
     * @param {?} viewDate
     */
    constructor(viewedBy, patient, vipIndicator, vnm, mrn, admitDate, dischargeDate, facilityId, unitId, provider, utcCode, usageCode, viewDate) {
        this.viewedBy = viewedBy;
        this.patient = patient;
        this.vipIndicator = vipIndicator;
        this.vnm = vnm;
        this.mrn = mrn;
        this.admitDate = admitDate;
        this.dischargeDate = dischargeDate;
        this.facilityId = facilityId;
        this.unitId = unitId;
        this.provider = provider;
        this.utcCode = utcCode;
        this.usageCode = usageCode;
        this.viewDate = viewDate;
    }
}
if (false) {
    /** @type {?} */
    PatientAccess.prototype.viewedBy;
    /** @type {?} */
    PatientAccess.prototype.patient;
    /** @type {?} */
    PatientAccess.prototype.vipIndicator;
    /** @type {?} */
    PatientAccess.prototype.vnm;
    /** @type {?} */
    PatientAccess.prototype.mrn;
    /** @type {?} */
    PatientAccess.prototype.admitDate;
    /** @type {?} */
    PatientAccess.prototype.dischargeDate;
    /** @type {?} */
    PatientAccess.prototype.facilityId;
    /** @type {?} */
    PatientAccess.prototype.unitId;
    /** @type {?} */
    PatientAccess.prototype.provider;
    /** @type {?} */
    PatientAccess.prototype.utcCode;
    /** @type {?} */
    PatientAccess.prototype.usageCode;
    /** @type {?} */
    PatientAccess.prototype.viewDate;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aWVudEFjY2Vzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWNvbW1vbi1saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL21vZGVsL1BhdGllbnRBY2Nlc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7SUFnQkosWUFBWSxRQUFnQixFQUNoQixPQUFlLEVBQ2YsWUFBb0IsRUFDcEIsR0FBVyxFQUNYLEdBQVcsRUFDWCxTQUFpQixFQUNqQixhQUFxQixFQUNyQixVQUFrQixFQUNsQixNQUFjLEVBQ2QsUUFBZ0IsRUFDaEIsT0FBZSxFQUNmLFNBQWlCLEVBQ2pCLFFBQWdCO1FBQzFCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDZixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztRQUNuQyxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztLQUMxQjtDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFBhdGllbnRBY2Nlc3Mge1xuICBwdWJsaWMgdmlld2VkQnk6IHN0cmluZztcbiAgcHVibGljIHBhdGllbnQ6IHN0cmluZztcbiAgcHVibGljIHZpcEluZGljYXRvcjogc3RyaW5nO1xuICBwdWJsaWMgdm5tOiBzdHJpbmc7XG4gIHB1YmxpYyBtcm46IHN0cmluZztcbiAgcHVibGljIGFkbWl0RGF0ZTogbnVtYmVyO1xuICBwdWJsaWMgZGlzY2hhcmdlRGF0ZTogbnVtYmVyO1xuICBwdWJsaWMgZmFjaWxpdHlJZDogc3RyaW5nO1xuICBwdWJsaWMgdW5pdElkOiBzdHJpbmc7XG4gIHB1YmxpYyBwcm92aWRlcjogc3RyaW5nO1xuICBwdWJsaWMgdXRjQ29kZTogc3RyaW5nO1xuICBwdWJsaWMgdXNhZ2VDb2RlOiBzdHJpbmc7XG4gIHB1YmxpYyB2aWV3RGF0ZTogbnVtYmVyO1xuXG5cbiAgY29uc3RydWN0b3Iodmlld2VkQnk6IHN0cmluZyxcbiAgICAgICAgICAgICAgcGF0aWVudDogc3RyaW5nLFxuICAgICAgICAgICAgICB2aXBJbmRpY2F0b3I6IHN0cmluZyxcbiAgICAgICAgICAgICAgdm5tOiBzdHJpbmcsXG4gICAgICAgICAgICAgIG1ybjogc3RyaW5nLFxuICAgICAgICAgICAgICBhZG1pdERhdGU6IG51bWJlcixcbiAgICAgICAgICAgICAgZGlzY2hhcmdlRGF0ZTogbnVtYmVyLFxuICAgICAgICAgICAgICBmYWNpbGl0eUlkOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHVuaXRJZDogc3RyaW5nLFxuICAgICAgICAgICAgICBwcm92aWRlcjogc3RyaW5nLFxuICAgICAgICAgICAgICB1dGNDb2RlOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHVzYWdlQ29kZTogc3RyaW5nLFxuICAgICAgICAgICAgICB2aWV3RGF0ZTogbnVtYmVyKSB7XG4gICAgdGhpcy52aWV3ZWRCeSA9IHZpZXdlZEJ5O1xuICAgIHRoaXMucGF0aWVudCA9IHBhdGllbnQ7XG4gICAgdGhpcy52aXBJbmRpY2F0b3IgPSB2aXBJbmRpY2F0b3I7XG4gICAgdGhpcy52bm0gPSB2bm07XG4gICAgdGhpcy5tcm4gPSBtcm47XG4gICAgdGhpcy5hZG1pdERhdGUgPSBhZG1pdERhdGU7XG4gICAgdGhpcy5kaXNjaGFyZ2VEYXRlID0gZGlzY2hhcmdlRGF0ZTtcbiAgICB0aGlzLmZhY2lsaXR5SWQgPSBmYWNpbGl0eUlkO1xuICAgIHRoaXMudW5pdElkID0gdW5pdElkO1xuICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICB0aGlzLnV0Y0NvZGUgPSB1dGNDb2RlO1xuICAgIHRoaXMudXNhZ2VDb2RlID0gdXNhZ2VDb2RlO1xuICAgIHRoaXMudmlld0RhdGUgPSB2aWV3RGF0ZTtcbiAgfVxufVxuIl19