import { AfterViewChecked, ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit } from '@angular/core';
import { ArrayViewService } from './service/array-view.service';
import { BehaviorSubject } from 'rxjs';
import { PeraGraphService } from './group/pera-graph/service/pera-graph.service';
import { ArrayViewConfigService } from './service/array-view-config.service';
import { PeraGraph } from 'ng-common-library/lib/model/PeraGraph';
import { PriorWarningsConfigService } from './service/prior-warnings/config/prior-warnings-config.service';
import { PriorWarningsApiService } from './service/prior-warnings/api/prior-warnings-api.service';
import { FlowsheetsApiService, PeragraphApiService } from 'ng-common-library';
import { FilterService, SortService, GroupService } from 'ng-filters-library';
export declare class ArrayViewComponent implements OnInit, OnDestroy, OnChanges, AfterViewChecked {
    arrayViewService: ArrayViewService;
    private arrayViewConfigService;
    private peragraphApiService;
    private filterService;
    private flowsheetsApiService;
    private priorWarningsConfigService;
    private priorWarningsApiService;
    private peraGraphService;
    private sortService;
    private groupService;
    private ref;
    private peraGraphSubscription;
    private flowSheetSubscription;
    private priorWarningSubscription;
    private filteredPeraGraphsSubscription;
    filteredPeraGraphs$: BehaviorSubject<PeraGraph[]>;
    peraGraphSortingFunction: (firstGraph: PeraGraph, secondGraph: PeraGraph) => number;
    peraGraphTitleFunction: (graph: PeraGraph) => string;
    groups$: any;
    disableGroups: boolean;
    numGroupsDisplay: BehaviorSubject<number>;
    peraGraphHeight: number;
    peraGraphWidth: number;
    arrayViewElementRef: ElementRef;
    scrollContainerWidth: string;
    expandedSubject$: BehaviorSubject<boolean>;
    constructor(arrayViewService: ArrayViewService, arrayViewConfigService: ArrayViewConfigService, peragraphApiService: PeragraphApiService, filterService: FilterService, flowsheetsApiService: FlowsheetsApiService, priorWarningsConfigService: PriorWarningsConfigService, priorWarningsApiService: PriorWarningsApiService, peraGraphService: PeraGraphService, sortService: SortService, groupService: GroupService, ref: ChangeDetectorRef);
    ngOnInit(): void;
    initializeArrayView(): void;
    ngAfterViewChecked(): void;
    /**
     * Used to dynamically set the width of the scroll container (based on the width of the array view component)
     */
    getScrollContainerWidth(): string;
    ngOnChanges(): void;
    /**
     * Updates the fields in the array view service and in this component based on the input so that we see the desired behavior
     */
    private updateBehaviorBasedOnInputs;
    /**
     * If we pass in an explicit width/height, use them
     */
    private updatePeraGraphDimensions;
    /**
     * This sets the array view service's sorting function to the input passed to the array view component
     */
    private setPeraGraphSortingFunction;
    /**
     * If groups are disabled or absent, add a single group that will catch all graphs and not display a header
     */
    private disableGroupsIfAppropriate;
    ngOnDestroy(): void;
}
