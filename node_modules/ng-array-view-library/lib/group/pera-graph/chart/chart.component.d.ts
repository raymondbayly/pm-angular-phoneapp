import { ChangeDetectorRef, OnChanges, OnDestroy, OnInit } from '@angular/core';
import { ArrayViewService } from '../../../service/array-view.service';
import { PeraGraph } from 'ng-common-library/lib/model/PeraGraph';
import { ChartService, DateService } from 'ng-common-library';
import { FlowSheetBase } from 'ng-common-library/lib/model/FlowSheetBase';
export declare class ChartComponent implements OnInit, OnChanges, OnDestroy {
    private dateService;
    private chartService;
    private arrayViewService;
    private ref;
    flowsheets: Array<FlowSheetBase>;
    graph: PeraGraph;
    currentTimestamp: number;
    Highcharts: any;
    chartOptions: any;
    X_AXIS_DAYS: number;
    DAY_IN_MILLISECONDS: number;
    minRiScore: number;
    minRecordedDt: number;
    maxRecordedDt: number;
    series: any;
    constructor(dateService: DateService, chartService: ChartService, arrayViewService: ArrayViewService, ref: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(): void;
    /**
     * Updates the chart
     */
    updateChart(): void;
    /**
     * Updates the pieces of the Y axis that need updating
     */
    updateYAxis(): void;
    /**
     * Updates the pieces of the X axis that need updating
     */
    updateXAxis(): void;
    /**
     * Returns the chart options
     */
    getChartOptions(): {
        chart: {
            type: string;
            spacing: number[];
            marginLeft: number;
            marginRight: number;
            plotBackgroundColor: string;
            reflow: boolean;
            animation: boolean;
            alignTicks: boolean;
        };
        tooltip: {
            enabled: boolean;
            animation: boolean;
        };
        plotOptions: {
            series: {
                color: string;
                turboThreshold: number;
                animation: boolean;
                enableMouseTracking: boolean;
                stickyTracking: boolean;
                shadow: boolean;
                dataLabels: {
                    style: {
                        textShadow: boolean;
                    };
                };
            };
            line: {
                animation: boolean;
                enableMouseTracking: boolean;
                stickyTracking: boolean;
                shadow: boolean;
                dataLabels: {
                    style: {
                        textShadow: boolean;
                    };
                };
            };
        };
        credits: {
            enabled: boolean;
        };
        legend: {
            enabled: boolean;
        };
        title: {
            text: string;
        };
        xAxis: any[];
        yAxis: any[];
        series: any;
    };
    getXaxis(): any[];
    getMaxXAxisValue(): number;
    getMinXAxisValue(): number;
    getYaxis(): any[];
    getChartSeries(): any[];
    getArrayOfLocationChanges(fscList: any): (string | number)[][];
    getDataPoints(data: any): any[];
    ngOnDestroy(): void;
}
