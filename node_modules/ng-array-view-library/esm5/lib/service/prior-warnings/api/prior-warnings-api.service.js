/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { PriorWarningsConfigService } from '../config/prior-warnings-config.service';
import { BehaviorSubject, timer } from 'rxjs';
import { switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "../config/prior-warnings-config.service";
var PriorWarningsApiService = /** @class */ (function () {
    function PriorWarningsApiService(http, priorWarningsConfigService) {
        this.http = http;
        this.priorWarningsConfigService = priorWarningsConfigService;
        this.pollInstance$ = timer(0, 60000);
        this._priorWarningSubject = new BehaviorSubject(null);
    }
    /**
     * @return {?}
     */
    PriorWarningsApiService.prototype.getPriorWarningSubjectValue = /**
     * @return {?}
     */
    function () {
        return this._priorWarningSubject.value;
    };
    /**
     * @return {?}
     */
    PriorWarningsApiService.prototype.getPriorWarningSubject = /**
     * @return {?}
     */
    function () {
        return this._priorWarningSubject;
    };
    /**
     * @return {?}
     */
    PriorWarningsApiService.prototype.getPriorWarnings = /**
     * @return {?}
     */
    function () {
        return this.http.get(this.priorWarningsConfigService.getPriorWarningEndPoint(), { observe: 'response' });
    };
    /**
     * @return {?}
     */
    PriorWarningsApiService.prototype.getPriorWarningInterval = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return this.pollInstance$.pipe(switchMap(function () { return _this.getPriorWarnings(); }));
    };
    PriorWarningsApiService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    PriorWarningsApiService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: PriorWarningsConfigService }
    ]; };
    /** @nocollapse */ PriorWarningsApiService.ngInjectableDef = i0.defineInjectable({ factory: function PriorWarningsApiService_Factory() { return new PriorWarningsApiService(i0.inject(i1.HttpClient), i0.inject(i2.PriorWarningsConfigService)); }, token: PriorWarningsApiService, providedIn: "root" });
    return PriorWarningsApiService;
}());
export { PriorWarningsApiService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PriorWarningsApiService.prototype._priorWarningSubject;
    /**
     * @type {?}
     * @private
     */
    PriorWarningsApiService.prototype.pollInstance$;
    /**
     * @type {?}
     * @private
     */
    PriorWarningsApiService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    PriorWarningsApiService.prototype.priorWarningsConfigService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpb3Itd2FybmluZ3MtYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1hcnJheS12aWV3LWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS9wcmlvci13YXJuaW5ncy9hcGkvcHJpb3Itd2FybmluZ3MtYXBpLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ2hELE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLHlDQUF5QyxDQUFDO0FBQ25GLE9BQU8sRUFBQyxlQUFlLEVBQWMsS0FBSyxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ3hELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUV6QztJQVFFLGlDQUFvQixJQUFnQixFQUNoQiwwQkFBc0Q7UUFEdEQsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUNoQiwrQkFBMEIsR0FBMUIsMEJBQTBCLENBQTRCO1FBQ3hFLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxlQUFlLENBQXNCLElBQUksQ0FBQyxDQUFDO0lBQzdFLENBQUM7Ozs7SUFFTSw2REFBMkI7OztJQUFsQztRQUNFLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQztJQUN6QyxDQUFDOzs7O0lBRU0sd0RBQXNCOzs7SUFBN0I7UUFDRSxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQztJQUNuQyxDQUFDOzs7O0lBRUQsa0RBQWdCOzs7SUFBaEI7UUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQywwQkFBMEIsQ0FBQyx1QkFBdUIsRUFBRSxFQUFFLEVBQUMsT0FBTyxFQUFFLFVBQVUsRUFBQyxDQUFDLENBQUM7SUFDekcsQ0FBQzs7OztJQUVNLHlEQUF1Qjs7O0lBQTlCO1FBQUEsaUJBR0M7UUFGQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUM1QixTQUFTLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxnQkFBZ0IsRUFBRSxFQUF2QixDQUF1QixDQUFDLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkE3QkYsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7OztnQkFQTyxVQUFVO2dCQUNWLDBCQUEwQjs7O2tDQUZsQztDQXFDQyxBQS9CRCxJQStCQztTQTVCWSx1QkFBdUI7Ozs7OztJQUVsQyx1REFBNEU7Ozs7O0lBQzVFLGdEQUF1Qzs7Ozs7SUFFM0IsdUNBQXdCOzs7OztJQUN4Qiw2REFBOEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtIdHRwQ2xpZW50fSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQge1ByaW9yV2FybmluZ3NDb25maWdTZXJ2aWNlfSBmcm9tICcuLi9jb25maWcvcHJpb3Itd2FybmluZ3MtY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHtCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUsIHRpbWVyfSBmcm9tICdyeGpzJztcbmltcG9ydCB7c3dpdGNoTWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFByaW9yV2FybmluZ3NBcGlTZXJ2aWNlIHtcblxuICBwcml2YXRlIHJlYWRvbmx5IF9wcmlvcldhcm5pbmdTdWJqZWN0OiBCZWhhdmlvclN1YmplY3Q8TWFwPG51bWJlciwgc3RyaW5nPj47XG4gIHByaXZhdGUgcG9sbEluc3RhbmNlJDogT2JzZXJ2YWJsZTxhbnk+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCxcbiAgICAgICAgICAgICAgcHJpdmF0ZSBwcmlvcldhcm5pbmdzQ29uZmlnU2VydmljZTogUHJpb3JXYXJuaW5nc0NvbmZpZ1NlcnZpY2UpIHtcbiAgICB0aGlzLnBvbGxJbnN0YW5jZSQgPSB0aW1lcigwLCA2MDAwMCk7XG4gICAgdGhpcy5fcHJpb3JXYXJuaW5nU3ViamVjdCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8TWFwPG51bWJlciwgc3RyaW5nPj4obnVsbCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0UHJpb3JXYXJuaW5nU3ViamVjdFZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLl9wcmlvcldhcm5pbmdTdWJqZWN0LnZhbHVlO1xuICB9XG5cbiAgcHVibGljIGdldFByaW9yV2FybmluZ1N1YmplY3QoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ByaW9yV2FybmluZ1N1YmplY3Q7XG4gIH1cblxuICBnZXRQcmlvcldhcm5pbmdzKCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5wcmlvcldhcm5pbmdzQ29uZmlnU2VydmljZS5nZXRQcmlvcldhcm5pbmdFbmRQb2ludCgpLCB7b2JzZXJ2ZTogJ3Jlc3BvbnNlJ30pO1xuICB9XG5cbiAgcHVibGljIGdldFByaW9yV2FybmluZ0ludGVydmFsKCkge1xuICAgIHJldHVybiB0aGlzLnBvbGxJbnN0YW5jZSQucGlwZShcbiAgICAgIHN3aXRjaE1hcCgoKSA9PiB0aGlzLmdldFByaW9yV2FybmluZ3MoKSkpO1xuICB9XG5cbn1cbiJdfQ==