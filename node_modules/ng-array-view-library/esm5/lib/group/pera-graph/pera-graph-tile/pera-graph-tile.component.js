/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, Input } from '@angular/core';
import { PeraGraphService } from '../service/pera-graph.service';
import { WarningService } from 'ng-common-library';
import { ArrayViewService } from '../../../service/array-view.service';
var PeraGraphTileComponent = /** @class */ (function () {
    function PeraGraphTileComponent(peraGraphService, warningService, arrayViewService, ref) {
        this.peraGraphService = peraGraphService;
        this.warningService = warningService;
        this.arrayViewService = arrayViewService;
        this.ref = ref;
    }
    /**
     * @return {?}
     */
    PeraGraphTileComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // Subscribe to the chart title subject and invoke change detection when new value is pushed.
        this.arrayViewService.chartTitleSubject$.subscribe(function () {
            if (_this.ref) {
                _this.ref.detectChanges();
            }
        });
    };
    /**
     * @return {?}
     */
    PeraGraphTileComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.updateBackgroundColor();
    };
    /**
     * @return {?}
     */
    PeraGraphTileComponent.prototype.updateBackgroundColor = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var warning = (this.graph) ? this.graph.activeWarning : null;
        this.style = {
            backgroundColor: this.peraGraphService.getBackgroundColorByWarningAndRi(warning, this.latestRi, this.graph.discharged)
        };
        this.priorWarningIndicator = this.warningService.getWarningClass(this.priorWarning);
    };
    PeraGraphTileComponent.decorators = [
        { type: Component, args: [{
                    selector: 'phlib-pera-graph-tile',
                    template: "<!-- Outer div establishes QA test lookup ID, other divs display over the top of each other -->\n<div id=\"{{ arrayViewService.chartTitleSubject$.value.returnFunc(this.graph) }}\" class=\"ph-tile\">\n    <div class=\"inner ph-tile {{ priorWarningIndicator }}\" [ngStyle]=\"style\">\n    </div>\n    <div class=\"inner ph-tile-score\" style=\"background-color: transparent\">\n        {{ this.peraGraphService.getRiScoreToDisplay(this.latestRi) }}\n    </div>\n</div>\n",
                    styles: [".inner{position:absolute}.ph-tile{width:100%;height:100%;text-align:center;cursor:pointer}.ph-tile-score{font-size:1.3em;padding-top:25%;text-align:center;text-shadow:1px 1px 3px #3b3b3b;color:#fff;width:100%;height:100%}.vh-warning{width:0;height:0;border-style:solid;border-width:0 63px 63px 0;border-color:transparent #d51c19 transparent transparent}.h-warning{width:0;height:0;border-style:solid;border-width:0 63px 63px 0;border-color:transparent #fc7134 transparent transparent}.m-warning{width:0;height:0;border-style:solid;border-width:0 63px 63px 0;border-color:transparent #fdc43a transparent transparent}"]
                }] }
    ];
    /** @nocollapse */
    PeraGraphTileComponent.ctorParameters = function () { return [
        { type: PeraGraphService },
        { type: WarningService },
        { type: ArrayViewService },
        { type: ChangeDetectorRef }
    ]; };
    PeraGraphTileComponent.propDecorators = {
        graph: [{ type: Input }],
        latestRi: [{ type: Input }],
        priorWarning: [{ type: Input }]
    };
    return PeraGraphTileComponent;
}());
export { PeraGraphTileComponent };
if (false) {
    /** @type {?} */
    PeraGraphTileComponent.prototype.graph;
    /** @type {?} */
    PeraGraphTileComponent.prototype.latestRi;
    /** @type {?} */
    PeraGraphTileComponent.prototype.priorWarning;
    /** @type {?} */
    PeraGraphTileComponent.prototype.priorWarningIndicator;
    /** @type {?} */
    PeraGraphTileComponent.prototype.style;
    /** @type {?} */
    PeraGraphTileComponent.prototype.peraGraphService;
    /** @type {?} */
    PeraGraphTileComponent.prototype.warningService;
    /** @type {?} */
    PeraGraphTileComponent.prototype.arrayViewService;
    /** @type {?} */
    PeraGraphTileComponent.prototype.ref;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyYS1ncmFwaC10aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWFycmF5LXZpZXctbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9ncm91cC9wZXJhLWdyYXBoL3BlcmEtZ3JhcGgtdGlsZS9wZXJhLWdyYXBoLXRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFDL0QsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBRXJFO0lBb0JFLGdDQUFtQixnQkFBa0MsRUFDbEMsY0FBOEIsRUFDOUIsZ0JBQWtDLEVBQ2xDLEdBQXNCO1FBSHRCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsUUFBRyxHQUFILEdBQUcsQ0FBbUI7SUFDekMsQ0FBQzs7OztJQUVELHlDQUFROzs7SUFBUjtRQUFBLGlCQU9DO1FBTkcsNkZBQTZGO1FBQzdGLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUM7WUFDL0MsSUFBSSxLQUFJLENBQUMsR0FBRyxFQUFFO2dCQUNWLEtBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7YUFDNUI7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Ozs7SUFFRCw0Q0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUMvQixDQUFDOzs7O0lBRUQsc0RBQXFCOzs7SUFBckI7O1lBQ1EsT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSTtRQUM5RCxJQUFJLENBQUMsS0FBSyxHQUFHO1lBQ1gsZUFBZSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQ0FBZ0MsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQztTQUN2SCxDQUFDO1FBRUYsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUV0RixDQUFDOztnQkEvQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLGdlQUErQzs7aUJBRWhEOzs7O2dCQVJPLGdCQUFnQjtnQkFDaEIsY0FBYztnQkFDZCxnQkFBZ0I7Z0JBSGhCLGlCQUFpQjs7O3dCQVl0QixLQUFLOzJCQUdMLEtBQUs7K0JBR0wsS0FBSzs7SUFtQ1IsNkJBQUM7Q0FBQSxBQWhERCxJQWdEQztTQTNDWSxzQkFBc0I7OztJQUVqQyx1Q0FDTTs7SUFFTiwwQ0FDUzs7SUFFVCw4Q0FDcUI7O0lBRXJCLHVEQUFzQjs7SUFFdEIsdUNBQXFCOztJQUVULGtEQUF5Qzs7SUFDekMsZ0RBQXFDOztJQUNyQyxrREFBeUM7O0lBQ3pDLHFDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UGVyYUdyYXBoU2VydmljZX0gZnJvbSAnLi4vc2VydmljZS9wZXJhLWdyYXBoLnNlcnZpY2UnO1xuaW1wb3J0IHtXYXJuaW5nU2VydmljZX0gZnJvbSAnbmctY29tbW9uLWxpYnJhcnknO1xuaW1wb3J0IHtBcnJheVZpZXdTZXJ2aWNlfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlL2FycmF5LXZpZXcuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BobGliLXBlcmEtZ3JhcGgtdGlsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wZXJhLWdyYXBoLXRpbGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wZXJhLWdyYXBoLXRpbGUuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFBlcmFHcmFwaFRpbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG5cbiAgQElucHV0KClcbiAgZ3JhcGg7XG5cbiAgQElucHV0KClcbiAgbGF0ZXN0Umk7XG5cbiAgQElucHV0KClcbiAgcHJpb3JXYXJuaW5nOiBzdHJpbmc7XG5cbiAgcHJpb3JXYXJuaW5nSW5kaWNhdG9yO1xuXG4gIHB1YmxpYyBzdHlsZTogb2JqZWN0O1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwZXJhR3JhcGhTZXJ2aWNlOiBQZXJhR3JhcGhTZXJ2aWNlLFxuICAgICAgICAgICAgICBwdWJsaWMgd2FybmluZ1NlcnZpY2U6IFdhcm5pbmdTZXJ2aWNlLFxuICAgICAgICAgICAgICBwdWJsaWMgYXJyYXlWaWV3U2VydmljZTogQXJyYXlWaWV3U2VydmljZSxcbiAgICAgICAgICAgICAgcHVibGljIHJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgICAgLy8gU3Vic2NyaWJlIHRvIHRoZSBjaGFydCB0aXRsZSBzdWJqZWN0IGFuZCBpbnZva2UgY2hhbmdlIGRldGVjdGlvbiB3aGVuIG5ldyB2YWx1ZSBpcyBwdXNoZWQuXG4gICAgICB0aGlzLmFycmF5Vmlld1NlcnZpY2UuY2hhcnRUaXRsZVN1YmplY3QkLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMucmVmKSB7XG4gICAgICAgICAgICAgIHRoaXMucmVmLmRldGVjdENoYW5nZXMoKTtcbiAgICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIHRoaXMudXBkYXRlQmFja2dyb3VuZENvbG9yKCk7XG4gIH1cblxuICB1cGRhdGVCYWNrZ3JvdW5kQ29sb3IoKSB7XG4gICAgY29uc3Qgd2FybmluZyA9ICh0aGlzLmdyYXBoKSA/IHRoaXMuZ3JhcGguYWN0aXZlV2FybmluZyA6IG51bGw7XG4gICAgdGhpcy5zdHlsZSA9IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5wZXJhR3JhcGhTZXJ2aWNlLmdldEJhY2tncm91bmRDb2xvckJ5V2FybmluZ0FuZFJpKHdhcm5pbmcsIHRoaXMubGF0ZXN0UmksIHRoaXMuZ3JhcGguZGlzY2hhcmdlZClcbiAgICB9O1xuXG4gICAgdGhpcy5wcmlvcldhcm5pbmdJbmRpY2F0b3IgPSB0aGlzLndhcm5pbmdTZXJ2aWNlLmdldFdhcm5pbmdDbGFzcyh0aGlzLnByaW9yV2FybmluZyk7XG5cbiAgfVxufVxuIl19