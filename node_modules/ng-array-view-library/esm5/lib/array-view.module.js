/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ArrayViewComponent } from './array-view.component';
import { GroupComponent } from './group/group.component';
import { PeraGraphComponent } from './group/pera-graph/pera-graph.component';
import { ChartComponent } from './group/pera-graph/chart/chart.component';
import { HighchartsChartModule } from 'highcharts-angular';
import { VirtualScrollModule } from 'od-virtualscroll';
import { ResizableModule } from 'angular-resizable-element';
import { PeraGraphTileComponent } from './group/pera-graph/pera-graph-tile/pera-graph-tile.component';
import { GroupHeaderComponent } from './group/group-header/group-header.component';
import { PeraGraphHeaderComponent } from './group/pera-graph/pera-graph-header/pera-graph-header.component';
import { TooltipComponent } from './group/pera-graph/tooltip/tooltip.component';
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { FilterQueryConfigService, FilterQueryRestService, FilterService } from 'ng-filters-library';
var ArrayViewModule = /** @class */ (function () {
    function ArrayViewModule() {
    }
    /**
     * @return {?}
     */
    ArrayViewModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: ArrayViewModule,
            providers: [FilterService, FilterQueryRestService, FilterQueryConfigService]
        };
    };
    ArrayViewModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule,
                        HighchartsChartModule,
                        VirtualScrollModule,
                        ResizableModule,
                        NgbModule
                    ],
                    declarations: [
                        ArrayViewComponent,
                        GroupComponent,
                        GroupHeaderComponent,
                        PeraGraphComponent,
                        ChartComponent,
                        PeraGraphTileComponent,
                        TooltipComponent,
                        PeraGraphHeaderComponent
                    ],
                    exports: [ArrayViewComponent]
                },] }
    ];
    return ArrayViewModule;
}());
export { ArrayViewModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXktdmlldy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1hcnJheS12aWV3LWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvYXJyYXktdmlldy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFDM0UsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLDBDQUEwQyxDQUFDO0FBQ3hFLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw4REFBOEQsQ0FBQztBQUNwRyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUNqRixPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSxrRUFBa0UsQ0FBQztBQUMxRyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUM5RSxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFDckQsT0FBTyxFQUFDLHdCQUF3QixFQUFFLHNCQUFzQixFQUFFLGFBQWEsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25HO0lBQUE7SUF5QkEsQ0FBQzs7OztJQU5RLHVCQUFPOzs7SUFBZDtRQUNFLE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUUsQ0FBQyxhQUFhLEVBQUUsc0JBQXNCLEVBQUUsd0JBQXdCLENBQUM7U0FDN0UsQ0FBQztJQUNKLENBQUM7O2dCQXhCRixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWTt3QkFDcEIscUJBQXFCO3dCQUNyQixtQkFBbUI7d0JBQ25CLGVBQWU7d0JBQ2YsU0FBUztxQkFDVjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1osa0JBQWtCO3dCQUNsQixjQUFjO3dCQUNkLG9CQUFvQjt3QkFDcEIsa0JBQWtCO3dCQUNsQixjQUFjO3dCQUNkLHNCQUFzQjt3QkFDdEIsZ0JBQWdCO3dCQUNoQix3QkFBd0I7cUJBQUM7b0JBQzNCLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixDQUFDO2lCQUM5Qjs7SUFRRCxzQkFBQztDQUFBLEFBekJELElBeUJDO1NBUFksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge0FycmF5Vmlld0NvbXBvbmVudH0gZnJvbSAnLi9hcnJheS12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQge0dyb3VwQ29tcG9uZW50fSBmcm9tICcuL2dyb3VwL2dyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQge1BlcmFHcmFwaENvbXBvbmVudH0gZnJvbSAnLi9ncm91cC9wZXJhLWdyYXBoL3BlcmEtZ3JhcGguY29tcG9uZW50JztcbmltcG9ydCB7Q2hhcnRDb21wb25lbnR9IGZyb20gJy4vZ3JvdXAvcGVyYS1ncmFwaC9jaGFydC9jaGFydC5jb21wb25lbnQnO1xuaW1wb3J0IHtIaWdoY2hhcnRzQ2hhcnRNb2R1bGV9IGZyb20gJ2hpZ2hjaGFydHMtYW5ndWxhcic7XG5pbXBvcnQge1ZpcnR1YWxTY3JvbGxNb2R1bGV9IGZyb20gJ29kLXZpcnR1YWxzY3JvbGwnO1xuaW1wb3J0IHtSZXNpemFibGVNb2R1bGV9IGZyb20gJ2FuZ3VsYXItcmVzaXphYmxlLWVsZW1lbnQnO1xuaW1wb3J0IHtQZXJhR3JhcGhUaWxlQ29tcG9uZW50fSBmcm9tICcuL2dyb3VwL3BlcmEtZ3JhcGgvcGVyYS1ncmFwaC10aWxlL3BlcmEtZ3JhcGgtdGlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHtHcm91cEhlYWRlckNvbXBvbmVudH0gZnJvbSAnLi9ncm91cC9ncm91cC1oZWFkZXIvZ3JvdXAtaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQge1BlcmFHcmFwaEhlYWRlckNvbXBvbmVudH0gZnJvbSAnLi9ncm91cC9wZXJhLWdyYXBoL3BlcmEtZ3JhcGgtaGVhZGVyL3BlcmEtZ3JhcGgtaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQge1Rvb2x0aXBDb21wb25lbnR9IGZyb20gJy4vZ3JvdXAvcGVyYS1ncmFwaC90b29sdGlwL3Rvb2x0aXAuY29tcG9uZW50JztcbmltcG9ydCB7TmdiTW9kdWxlfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XG5pbXBvcnQge0ZpbHRlclF1ZXJ5Q29uZmlnU2VydmljZSwgRmlsdGVyUXVlcnlSZXN0U2VydmljZSwgRmlsdGVyU2VydmljZX0gZnJvbSAnbmctZmlsdGVycy1saWJyYXJ5JztcblxuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLFxuICAgIEhpZ2hjaGFydHNDaGFydE1vZHVsZSxcbiAgICBWaXJ0dWFsU2Nyb2xsTW9kdWxlLFxuICAgIFJlc2l6YWJsZU1vZHVsZSxcbiAgICBOZ2JNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgQXJyYXlWaWV3Q29tcG9uZW50LFxuICAgIEdyb3VwQ29tcG9uZW50LFxuICAgIEdyb3VwSGVhZGVyQ29tcG9uZW50LFxuICAgIFBlcmFHcmFwaENvbXBvbmVudCxcbiAgICBDaGFydENvbXBvbmVudCxcbiAgICBQZXJhR3JhcGhUaWxlQ29tcG9uZW50LFxuICAgIFRvb2x0aXBDb21wb25lbnQsXG4gICAgUGVyYUdyYXBoSGVhZGVyQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW0FycmF5Vmlld0NvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgQXJyYXlWaWV3TW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBBcnJheVZpZXdNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtGaWx0ZXJTZXJ2aWNlLCBGaWx0ZXJRdWVyeVJlc3RTZXJ2aWNlLCBGaWx0ZXJRdWVyeUNvbmZpZ1NlcnZpY2VdXG4gICAgfTtcbiAgfVxufVxuIl19