/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { DateService } from 'ng-common-library';
export class TooltipComponent {
    /**
     * @param {?} dateService
     */
    constructor(dateService) {
        this.dateService = dateService;
    }
    /**
     * @return {?}
     */
    getAdmitDate() {
        if (this.graph && this.graph.timeZone && this.graph.admitDate) {
            return this.dateService.getDateFormat(this.graph.timeZone, this.graph.admitDate, 'MM/DD/YY HH:mm z');
        }
        return '';
    }
    /**
     * @return {?}
     */
    getDischargeDate() {
        if (this.graph && this.graph.timeZone && this.graph.discharged && this.graph.dischargeDate) {
            return this.dateService.getDateFormat(this.graph.timeZone, this.graph.dischargeDate, 'MM/DD/YY HH:mm z');
        }
        return '';
    }
    /**
     * @return {?}
     */
    isDischarged() {
        return (this.graph && this.graph.isDischarged);
    }
}
TooltipComponent.decorators = [
    { type: Component, args: [{
                selector: 'phlib-chart-tooltip',
                template: "<span class=\"patientToolTip\">\n  <b>Patient: </b><span style=\"text-transform: capitalize;\">{{graph?.displayName.toLowerCase()}}</span><br>\n  <b>Facility: </b>{{graph?.facilityId}}<br>\n  <b>Unit Room Bed: </b>{{graph?.unitId}} {{graph?.room}} {{graph?.bed}}<br>\n  <b>DOB: </b>{{graph?.patient?.dob | date:'MM/dd/yy'}}<br>\n  <b>Visit: </b>{{graph?.vnm}}<br>\n  <b>MRN: </b>{{graph?.patient.medicalRecordNumber}}<br>\n  <b>Diagnosis: </b>{{graph?.diagnosis}}<br>\n  <b>Admit Date: </b>{{getAdmitDate()}}<br>\n  <span id=\"dischargeDate\" *ngIf=\"isDischarged()\"><b>Discharge Date: </b>{{getDischargeDate()}}<br></span>\n  <b>Provider: </b>{{ graph?.attendingProvider?.firstName}} {{graph?.attendingProvider?.lastName}}<br>\n  <b>Other Visits with RI Scores: </b>{{graph?.numberVisitsWithValidRI}}<br>\n  <span id=\"dischargeName\"*ngIf=\"isDischarged()\"><b>Discharge Disposition: </b>{{graph?.dischargeDispositionDisplayName}}</span>\n</span>\n",
                styles: [".patientToolTip{font-size:1em}"]
            }] }
];
/** @nocollapse */
TooltipComponent.ctorParameters = () => [
    { type: DateService }
];
TooltipComponent.propDecorators = {
    graph: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TooltipComponent.prototype.graph;
    /**
     * @type {?}
     * @private
     */
    TooltipComponent.prototype.dateService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1hcnJheS12aWV3LWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvZ3JvdXAvcGVyYS1ncmFwaC90b29sdGlwL3Rvb2x0aXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFROUMsTUFBTSxPQUFPLGdCQUFnQjs7OztJQUszQixZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUM1QyxDQUFDOzs7O0lBRU0sWUFBWTtRQUNqQixJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUU7WUFDN0QsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1NBQ3RHO1FBQ0QsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDOzs7O0lBRUQsZ0JBQWdCO1FBQ2QsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFO1lBQzFGLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztTQUMxRztRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQzs7OztJQUVELFlBQVk7UUFDVixPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2pELENBQUM7OztZQTdCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsbThCQUF1Qzs7YUFFeEM7Ozs7WUFQTyxXQUFXOzs7b0JBVWhCLEtBQUs7Ozs7SUFBTixpQ0FDd0I7Ozs7O0lBRVosdUNBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGF0ZVNlcnZpY2V9IGZyb20gJ25nLWNvbW1vbi1saWJyYXJ5JztcbmltcG9ydCB7UGVyYUdyYXBofSBmcm9tICduZy1jb21tb24tbGlicmFyeS9saWIvbW9kZWwvUGVyYUdyYXBoJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncGhsaWItY2hhcnQtdG9vbHRpcCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90b29sdGlwLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdG9vbHRpcC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVG9vbHRpcENvbXBvbmVudCB7XG5cbiAgQElucHV0KClcbiAgcHVibGljIGdyYXBoOiBQZXJhR3JhcGg7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRlU2VydmljZTogRGF0ZVNlcnZpY2UpIHtcbiAgfVxuXG4gIHB1YmxpYyBnZXRBZG1pdERhdGUoKTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5ncmFwaCAmJiB0aGlzLmdyYXBoLnRpbWVab25lICYmIHRoaXMuZ3JhcGguYWRtaXREYXRlKSB7XG4gICAgICByZXR1cm4gdGhpcy5kYXRlU2VydmljZS5nZXREYXRlRm9ybWF0KHRoaXMuZ3JhcGgudGltZVpvbmUsIHRoaXMuZ3JhcGguYWRtaXREYXRlLCAnTU0vREQvWVkgSEg6bW0geicpO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBnZXREaXNjaGFyZ2VEYXRlKCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMuZ3JhcGggJiYgdGhpcy5ncmFwaC50aW1lWm9uZSAmJiB0aGlzLmdyYXBoLmRpc2NoYXJnZWQgJiYgdGhpcy5ncmFwaC5kaXNjaGFyZ2VEYXRlKSB7XG4gICAgICByZXR1cm4gdGhpcy5kYXRlU2VydmljZS5nZXREYXRlRm9ybWF0KHRoaXMuZ3JhcGgudGltZVpvbmUsIHRoaXMuZ3JhcGguZGlzY2hhcmdlRGF0ZSwgJ01NL0REL1lZIEhIOm1tIHonKTtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaXNEaXNjaGFyZ2VkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAodGhpcy5ncmFwaCAmJiB0aGlzLmdyYXBoLmlzRGlzY2hhcmdlZCk7XG4gIH1cbn1cbiJdfQ==