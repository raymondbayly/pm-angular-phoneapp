{"version":3,"file":"ng-array-view-library.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ng-array-view-library/lib/service/array-view-config.service.ts","ng://ng-array-view-library/lib/service/chartTitleEnum.ts","ng://ng-array-view-library/lib/service/array-view.service.ts","ng://ng-array-view-library/lib/model/WarningColors.ts","ng://ng-array-view-library/lib/group/pera-graph/service/pera-graph.service.ts","ng://ng-array-view-library/lib/service/prior-warnings/config/prior-warnings-config.service.ts","ng://ng-array-view-library/lib/service/prior-warnings/api/prior-warnings-api.service.ts","ng://ng-array-view-library/lib/array-view.component.ts","ng://ng-array-view-library/lib/group/group.component.ts","ng://ng-array-view-library/lib/group/pera-graph/service/tooltip.service.ts","ng://ng-array-view-library/lib/group/pera-graph/pera-graph.component.ts","ng://ng-array-view-library/lib/group/pera-graph/chart/chart.component.ts","ng://ng-array-view-library/lib/group/pera-graph/pera-graph-tile/pera-graph-tile.component.ts","ng://ng-array-view-library/lib/group/group-header/group-header.component.ts","ng://ng-array-view-library/lib/group/pera-graph/pera-graph-header/pera-graph-header.component.ts","ng://ng-array-view-library/lib/group/pera-graph/tooltip/tooltip.component.ts","ng://ng-array-view-library/lib/array-view.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Injectable} from '@angular/core';\nimport * as moment_ from 'moment';\nimport {BehaviorSubject, Subject} from 'rxjs';\n\n// The JavaScript compiler gives a weird \"moment cannot be used as a namespace\" type of error\n// This is the workaround...\nconst moment = moment_;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArrayViewConfigService {\n    public configurationLoaded$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private currentTimestamp: number = null;\n    private toolTipInfoEndPoint: string = null;\n\n    public getToolTipInfoEndPoint() {\n        if (!this.toolTipInfoEndPoint) {\n            console.warn('Tooltip endpoint is not set!');\n        }\n        return this.toolTipInfoEndPoint;\n    }\n\n    public setToolTipInfoEndPoint(val: string) {\n        this.toolTipInfoEndPoint = val;\n    }\n\n    public getCurrentTimestamp(): number {\n        return this.currentTimestamp;\n    }\n\n    public setCurrentTimestamp(value: number): void {\n        this.currentTimestamp = value;\n    }\n}\n","export enum ChartTitleChoices {\n    VNM = 'Visit Number',\n    ADMIT_DATE = 'Admission Date',\n    MRN = 'Medical Record Number',\n    PATIENT_NAME = 'Patient Name',\n    LOCATION = 'Room Number',\n    ANONYMOUS = 'Anonymous'\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport * as moment_ from 'moment-timezone';\nimport {ArrayViewConfigService} from './array-view-config.service';\nimport {DateService, FlowsheetsApiService, PeragraphApiService} from 'ng-common-library';\nimport {PeraGraph} from 'ng-common-library/lib/model/PeraGraph';\nimport {FilterQueryRestService, FilterService, GroupService, SortService} from 'ng-filters-library';\nimport {BehaviorSubject, forkJoin, Observable, of, Subject} from 'rxjs';\nimport {ChartTitleChoices} from './chartTitleEnum';\n\n// The JavaScript compiler gives a weird \"moment cannot be used as a namespace\" type of error\n// This is the workaround...\nconst moment = moment_;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArrayViewService {\n\n    // The possible chart title selections\n    titleChoices: {description: string, returnFunc: (peraGraph: PeraGraph) => any}[] = [\n        {\n            description: ChartTitleChoices.VNM,\n            returnFunc: (peraGraph: PeraGraph) => {\n                return peraGraph.vnm;\n            }\n        },\n        {\n            description: ChartTitleChoices.ADMIT_DATE,\n            returnFunc: (peraGraph: PeraGraph) => {\n                if (peraGraph && peraGraph.timeZone && peraGraph.admitDate) {\n                    return this.dateService.getDateFormat(peraGraph.timeZone, peraGraph.admitDate, 'MM/DD/YY HH:mm z');\n                }\n                return '';\n            }\n        },\n        {\n            description: ChartTitleChoices.MRN,\n            returnFunc: (peraGraph: PeraGraph) => {\n                return peraGraph.patient.medicalRecordNumber;\n            }\n        },\n        {\n            description: ChartTitleChoices.PATIENT_NAME,\n            returnFunc: (peraGraph: PeraGraph) => {\n                if (peraGraph.vipIndicator) {\n                    return peraGraph.patient.aliasLastName + ', ' + peraGraph.patient.aliasFirstName;\n                } else {\n                    return peraGraph.displayName;\n                }\n            }\n        },\n        {\n            description: ChartTitleChoices.LOCATION,\n            returnFunc: (peraGraph: PeraGraph) => {\n                return peraGraph.unitId + '-' + peraGraph.room + '-' + peraGraph.bed;\n            }\n        },\n        {\n            description: ChartTitleChoices.ANONYMOUS,\n            returnFunc: (peraGraph: PeraGraph) => {\n                return 'Chart ' + peraGraph.anonymous;\n            }\n        }\n    ];\n\n    // Current chart title selection - defaults to Patient Name\n    selectedChartTitle: {description: string, returnFunc: (peraGraph: PeraGraph) => any} = {\n        description: ChartTitleChoices.PATIENT_NAME,\n        returnFunc: (peraGraph: PeraGraph) => {\n            return peraGraph.displayName;\n        }\n    };\n\n    // Subject for the title selection\n    public chartTitleSubject$ = new BehaviorSubject<{description: string,\n        returnFunc: (peraGraph: PeraGraph) => any}>(this.selectedChartTitle);\n\n    private maxGraphCountPerGroup = 50;\n    private maxGraphsInDom = 150;\n    private currentTimestamp = null;\n    private displayTiles = false;\n    private peraGraphDefaultHeight = 145;\n    private peraGraphDefaultWidth = 185;\n    private peraGraphTileDefault = 75;\n    public peraGraphHeight: number = this.peraGraphDefaultHeight;\n    public peraGraphWidth: number = this.peraGraphDefaultWidth;\n    public startedRefresh$: Subject<void> = new Subject<void>();\n    public completedRefresh$: Subject<void> = new Subject<void>();\n    public tokenRefresh$: Subject<void> = new Subject<void>();\n\n    constructor(private http: HttpClient,\n                private configService: ArrayViewConfigService,\n                private filterService: FilterService,\n                private filterQueryRestService: FilterQueryRestService,\n                private flowsheetsApiService: FlowsheetsApiService,\n                private peragraphApiService: PeragraphApiService,\n                private sortService: SortService,\n                private groupService: GroupService,\n                private dateService: DateService) {\n    }\n\n    /**\n     * runs the peragraph through all the filters and returns true if none of them return false\n     * @param peraGraph - peragraph to evaluate\n     * @param filters - object of filter functions\n     */\n    filterPeragraph(peraGraph, filters): boolean {\n        // return true if filter object has no properties\n        if ((Object.keys(filters).length === 0 && filters.constructor === Object)) {\n            return true;\n        } else {\n            // traverse filter object and test peragraph against each filter until one returns false\n            for (const filter in filters) {\n                if (filters.hasOwnProperty(filter)) {\n                    if (!(filters[filter](peraGraph))) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * limit the number of groups to load open on application of filtering/sorting/grouping based on the number of graphs in the dom\n     * @param peraGraphs - graphs to make count based off of\n     */\n    calculateNumberOfGroupsToShow(peraGraphs: PeraGraph[]): {groupsToShow: number, expanded: boolean} {\n        let groupsToShow = 0;\n        let graphCount = 0;\n        let expanded = true;\n        let numOfGroupsWithGraphs = 0;\n        // for each group, count the number of graphs in that group, capped at the maxGraphsPerGroup variable\n        // once the graphs exceed the maxGraphs in dom value return the number of groupstoShow to be applied to groups\n        for (const group of this.groupService.groupSubject$.value) {\n            let groupGraphCount = 0;\n            // helper variable for tracking how many groups have graphs\n            let groupIsFresh = true;\n            for(const peraGraph of peraGraphs) {\n                if(group.laneFunction(peraGraph)) {\n                    if(groupIsFresh) {\n                        numOfGroupsWithGraphs++;\n                        groupIsFresh = false;\n                    }\n                    groupGraphCount++;\n                    if(groupGraphCount >= this.maxGraphCountPerGroup) {\n                        break;\n                    }\n                }\n            }\n            graphCount += groupGraphCount;\n            groupsToShow++;\n            if (graphCount > this.maxGraphsInDom) {\n                groupsToShow--;\n                break;\n            }\n        }\n        return {groupsToShow: groupsToShow, expanded: numOfGroupsWithGraphs <= 1};\n    }\n\n    /**\n     * if sorting by RI Score...get RI Scores from server and append to peraGraphs\n     * @param peraGraphs - peraGraphs to have Ris attached to\n     */\n    addRIToPeraGraphs(peraGraphs: PeraGraph[]): Observable<PeraGraph[]> {\n        if (this.sortService.activeSortName === 'latestRi') {\n            return this.flowsheetsApiService.getAllRiScores().pipe(map((riScores) => {\n                const riMap = riScores.body;\n                for(const peraGraph of peraGraphs) {\n                    if (riScores.body[peraGraph.visitId]) {\n                        peraGraph.latestRi = riMap[peraGraph.visitId];\n                    }\n                }\n                return peraGraphs;\n            }));\n        } else {\n            return of(peraGraphs);\n        }\n    }\n\n    /**\n     * sorts peraGraphs based on function passed in through sort parameter then subsorts if needed based on the default sort method\n     * if no function is provided, the default sort function is used\n     * @param peraGraphA - peraGraph to be sorted\n     * @param peraGraphB - peraGraph to be sorted\n     * @param sortFunction - function to sort peraGraphs\n     */\n    sortGraphs(peraGraphA, peraGraphB, sortFunction?: (peragraphA: PeraGraph, peraGraphB: PeraGraph) => number) {\n        // default sort method for peragraphs\n        const defaultSort = function (peraGraphA: PeraGraph, peraGraphB: PeraGraph): number {\n            let comparison = 0;\n            if (peraGraphA.displayName > peraGraphB.displayName) {\n                comparison = 1;\n            } else if (peraGraphA.displayName < peraGraphB.displayName) {\n                comparison = -1;\n            }\n            return comparison;\n        };\n\n        if (this.sortService.nonStandardSortFunctionActive && this.sortService.nonStandardSortFunction) {\n           sortFunction = this.sortService.nonStandardSortFunction;\n        }\n\n        // if a function is passed in -> use it. if not use the default sort\n        if (!sortFunction) {\n            // if no function is provided, use default sort\n            return defaultSort(peraGraphA, peraGraphB)\n        }\n        let comparison;\n        comparison = sortFunction(peraGraphA, peraGraphB);\n        if (comparison == 0) {\n            comparison = defaultSort(peraGraphA, peraGraphB);\n        }\n        return comparison;\n    }\n\n    /**\n     * If a timestamp is provided by config use that, otherwise update the current timestamp every 5 seconds\n     */\n    calcCurrentTimestamp() {\n        if (this.configService.getCurrentTimestamp()) {\n            this.currentTimestamp = this.configService.getCurrentTimestamp();\n        }\n    }\n\n    /**\n     * returns the timestamp sent by the server if it isn't null\n     * otherwise calls Date.now() to get an up to date timestamp to\n     * return\n     */\n    public getCurrentTimestamp(): number {\n        /*\n            The currentTimestamp property is only set if the server sends a specific timestamp\n            it wants us to use. If that is not provided, we call Date.now() to get the up to date\n            timestamp every time this function is invoked\n        */\n        return this.currentTimestamp ? this.currentTimestamp : Date.now();\n    }\n\n    public isDisplayingTiles(): boolean {\n        return this.displayTiles;\n    }\n\n    public toggleTileView() {\n        // Toggle whether or not we display the tile view and set the width/height accordingly\n        this.displayTiles = !this.displayTiles;\n        this.peraGraphHeight = (this.displayTiles) ? this.peraGraphTileDefault : this.peraGraphDefaultHeight;\n        this.peraGraphWidth = (this.displayTiles) ? this.peraGraphTileDefault : this.peraGraphDefaultWidth;\n        this.refreshViewPort();\n    }\n\n    // Force a refresh of the viewport by toggling the data\n    public refreshViewPort() {\n        const previousPeraGraphs = this.peragraphApiService.getPeraGraphSubject().value;\n        this.peragraphApiService.getPeraGraphSubject().next([]);\n        setTimeout(() => {\n            this.peragraphApiService.getPeraGraphSubject().next(previousPeraGraphs);\n        }, 1);\n    }\n\n    /**\n     * Called on manual refresh or application of filters - refreshes graphs and FSCs\n     * and fires completedRefresh$ Subject upon completion\n     */\n    public refreshGraphs(getFilterQuery?: boolean) {\n        this.startedRefresh$.next();\n        if (getFilterQuery) {\n            // we use fork join here to combine the REST calls for server side filtering and getting new PeraGraphs\n            // quick aside on fork join - all it does is wait for both observables to COMPLETE and then feed you both results\n            // before getting to the fork join the vnms from the server side filter query are stored in the filter service\n            //      -> this is done to ensure that once the forkjoin completes, client side filtering can commence\n            // after filtering the graphs, they are passed to the array view per usual\n            forkJoin(this.filterQueryRestService.getFilteredVisits(this.filterService.getActiveServerFilterCriteria()), this.peragraphApiService.getAllPeragraphs()).subscribe((graphsAndFilteredVisits) => {\n                this.peragraphApiService.getPeraGraphSubject().next(graphsAndFilteredVisits[1]);\n                this.filterService.serverFilteredVisits = graphsAndFilteredVisits[0];\n                this.filterService.filterSubject$.next(this.filterService.activeFilters);\n                this.completedRefresh$.next();\n            });\n        } else {\n            // if we don't need to do server side filtering -> filter in the client immediately\n            this.peragraphApiService.getAllPeragraphs().subscribe((graphs) => {\n                this.peragraphApiService.getPeraGraphSubject().next(graphs);\n            });\n        }\n        this.flowsheetsApiService.getAllPeraGraphFlowSheets().subscribe((flowsheets) => this.flowsheetsApiService.getFlowSheetSubject().next(flowsheets.body));\n    }\n\n}\n","export enum WarningColors {\n    VeryHigh = '#D51C19',\n    High = '#EE834C',\n    Medium = '#F6CC5D',\n    NoCurrent = '#3185B8',\n    NoRi = '#AAABAC',\n}\n","import {Injectable} from '@angular/core';\nimport {WarningColors} from '../../../model/WarningColors';\nimport {NgbPopover} from '@ng-bootstrap/ng-bootstrap';\nimport {Subject} from 'rxjs';\nimport {PeraGraph} from 'ng-common-library';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeraGraphService {\n    // Subject for navigating to the PSG\n    public graphClicked$: Subject<PeraGraph> = new Subject<PeraGraph>();\n\n    // The currently displayed tooltip\n    // NOTE: This was implemented to solve a problem where multiple tooltips would be open at the same time\n    public tooltip: NgbPopover;\n\n    constructor() {\n    }\n\n    public graphClickedEvent(graph: PeraGraph) {\n        this.closeToolTip();\n        this.graphClicked$.next(graph);\n    }\n\n    public getBackgroundColorByWarningAndRi(warning, latestRi: number, isDischarged: boolean): string {\n        let backgroundColor;\n        if (warning && !isDischarged) {\n            switch (warning.category) {\n                case 'V':\n                    backgroundColor = WarningColors.VeryHigh;\n                    break;\n                case 'H':\n                    backgroundColor = WarningColors.High;\n                    break;\n                case 'M':\n                    backgroundColor = WarningColors.Medium;\n                    break;\n            }\n        } else if (latestRi && !isDischarged) {\n            backgroundColor = WarningColors.NoCurrent;\n        } else {\n            backgroundColor = WarningColors.NoRi;\n        }\n\n        return backgroundColor;\n    }\n\n    public getRiScoreToDisplay(latestRi: number): string {\n        return (latestRi) ? latestRi + '' : '--';\n    }\n\n    closeToolTip() {\n        if (this.tooltip && this.tooltip.isOpen) {\n            this.tooltip.close();\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PriorWarningsConfigService {\n\n  private priorWarningEndPoint: string;\n\n  constructor() {\n  }\n\n  setPriorWarningEndPoint(value: string): void {\n    this.priorWarningEndPoint = value;\n  }\n\n  getPriorWarningEndPoint(): string {\n    return this.priorWarningEndPoint;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {PriorWarningsConfigService} from '../config/prior-warnings-config.service';\nimport {BehaviorSubject, Observable, timer} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PriorWarningsApiService {\n\n  private readonly _priorWarningSubject: BehaviorSubject<Map<number, string>>;\n  private pollInstance$: Observable<any>;\n\n  constructor(private http: HttpClient,\n              private priorWarningsConfigService: PriorWarningsConfigService) {\n    this.pollInstance$ = timer(0, 60000);\n    this._priorWarningSubject = new BehaviorSubject<Map<number, string>>(null);\n  }\n\n  public getPriorWarningSubjectValue() {\n    return this._priorWarningSubject.value;\n  }\n\n  public getPriorWarningSubject() {\n    return this._priorWarningSubject;\n  }\n\n  getPriorWarnings(): Observable<any> {\n    return this.http.get(this.priorWarningsConfigService.getPriorWarningEndPoint(), {observe: 'response'});\n  }\n\n  public getPriorWarningInterval() {\n    return this.pollInstance$.pipe(\n      switchMap(() => this.getPriorWarnings()));\n  }\n\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {ArrayViewService} from './service/array-view.service';\nimport {BehaviorSubject, combineLatest, of} from 'rxjs';\nimport {filter, first, map, mergeMap, tap} from 'rxjs/operators';\nimport {PeraGraphService} from './group/pera-graph/service/pera-graph.service';\nimport {ArrayViewConfigService} from './service/array-view-config.service';\nimport {PeraGraph} from 'ng-common-library/lib/model/PeraGraph';\nimport {PriorWarningsConfigService} from './service/prior-warnings/config/prior-warnings-config.service';\nimport {PriorWarningsApiService} from './service/prior-warnings/api/prior-warnings-api.service';\nimport {FlowsheetsApiService, PeragraphApiService} from 'ng-common-library';\nimport {FilterService, SortService, GroupService} from 'ng-filters-library';\n\n@Component({\n    selector: 'phlib-array-view',\n    templateUrl: './array-view.component.html',\n    styleUrls: ['./array-view.component.css']\n})\nexport class ArrayViewComponent implements OnInit, OnDestroy, OnChanges, AfterViewChecked {\n\n    private peraGraphSubscription;\n    private flowSheetSubscription;\n    private priorWarningSubscription;\n    private filteredPeraGraphsSubscription;\n\n    // collects all the peraGraphs from their input sources combines them, filters them, and then passes them onto the groups\n    filteredPeraGraphs$ = new BehaviorSubject<PeraGraph[]>([]);\n\n    @Input()\n    peraGraphSortingFunction: (firstGraph: PeraGraph, secondGraph: PeraGraph) => number;\n\n    @Input()\n    peraGraphTitleFunction: (graph: PeraGraph) => string;\n\n    groups$;\n\n    @Input()\n    disableGroups: boolean;\n\n    @Input()\n    numGroupsDisplay: BehaviorSubject<number>;\n\n    @Input()\n    peraGraphHeight: number;\n\n    @Input()\n    peraGraphWidth: number;\n\n    @ViewChild('arrayView')\n    arrayViewElementRef: ElementRef;\n\n    scrollContainerWidth: string;\n\n    expandedSubject$: BehaviorSubject<boolean>;\n\n    constructor(public arrayViewService: ArrayViewService,\n                private arrayViewConfigService: ArrayViewConfigService,\n                private peragraphApiService: PeragraphApiService,\n                private filterService: FilterService,\n                private flowsheetsApiService: FlowsheetsApiService,\n                private priorWarningsConfigService: PriorWarningsConfigService,\n                private priorWarningsApiService: PriorWarningsApiService,\n                private peraGraphService: PeraGraphService,\n                private sortService: SortService,\n                private groupService: GroupService,\n                private ref: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.numGroupsDisplay = this.groupService.changeNumberOfGroupsToShow$;\n        this.expandedSubject$ = this.groupService.expandGroups$;\n        this.groups$ = this.groupService.groupSubject$;\n        // Load the configuration for the array view and subscribe to the PeraGraphs and Flowsheet services.\n        this.arrayViewConfigService.configurationLoaded$.pipe(filter((isReady: boolean) => isReady), first()).subscribe(() => this.initializeArrayView());\n\n        this.updateBehaviorBasedOnInputs();\n    }\n\n    initializeArrayView() {\n\n        // Once we have the configuration, we can get the rest of the information that we need\n        this.arrayViewService.calcCurrentTimestamp();\n\n        // get all Peragraphs on an interval and push them into the peraGraphSubject to be filtered\n        this.peraGraphSubscription = this.peragraphApiService.getPeraGraphInterval().subscribe(\n            peraGraphs => {\n                this.peragraphApiService.getPeraGraphSubject().next(peraGraphs);\n            }\n        );\n\n        // uses combineLatest to update the array view when either new graphs are added (peraGraph Subject - sourced by peraGraphInterval and manual graph refreshes) or new filters are added (filterSubject)\n        // and then filters before pushing to groups\n        this.filteredPeraGraphsSubscription = combineLatest(this.peragraphApiService.getPeraGraphSubject(), this.filterService.filterSubject$).pipe(\n            map((peraGraphsAndFilters) => peraGraphsAndFilters[0].filter(peraGraph =>\n            this.arrayViewService.filterPeragraph(peraGraph, this.filterService.activeFilters))\n        ), mergeMap((peraGraphs) => this.arrayViewService.addRIToPeraGraphs(peraGraphs)\n        ), map((peraGraphs: PeraGraph[]) => peraGraphs.sort((peraGraphA: PeraGraph, peraGraphB: PeraGraph) => this.arrayViewService.sortGraphs(peraGraphA, peraGraphB, this.sortService.activeSortFunction)\n        )), tap((peraGraphs: PeraGraph[]) => {\n            // if this iteration of the filtered graphs subject was triggered by the apply filters button\n            // then recalculate and close the proper groups\n            // if generated by refresh button or interval, don't reset the closed groups\n            const groupDisplay: {groupsToShow: number, expanded: boolean} = this.arrayViewService.calculateNumberOfGroupsToShow(peraGraphs);\n            if (this.groupService.changeGroupsClosed) {\n                this.groupService.changeNumberOfGroupsToShow$.next(groupDisplay.groupsToShow);\n                this.groupService.changeGroupsClosed = false;\n            }\n            this.groupService.expandGroups$.next(groupDisplay.expanded);\n        })).subscribe((peraGraphs: PeraGraph[]) => {\n            // Assign an index to the anonymous property of the PeraGraph - used by the Anonymous Patient chart title.\n            let anonymousIndex = 1;\n            peraGraphs.forEach(graph => {\n                graph.anonymous = anonymousIndex;\n                anonymousIndex++;\n            });\n            this.filteredPeraGraphs$.next(peraGraphs);\n            this.arrayViewService.completedRefresh$.next();\n\n            // Push the new Chart title selection through the Subject.\n            this.arrayViewService.chartTitleSubject$.next(this.arrayViewService.selectedChartTitle);\n        });\n\n        // Whenever we get new FSCs (on an interval) push them out through the subject so the groups receive the updated map of FSCs\n        this.flowSheetSubscription = this.flowsheetsApiService.getFlowSheetInterval().subscribe(\n            flowsheets => this.flowsheetsApiService.getFlowSheetSubject().next(flowsheets.body));\n\n        // Whenever we get new prior warnings (on an interval) push them out through the subject so the groups receive the updated map of warnings\n        if (this.priorWarningsConfigService.getPriorWarningEndPoint()) {\n            this.priorWarningSubscription = this.priorWarningsApiService.getPriorWarningInterval().subscribe(\n                priorWarnings => this.priorWarningsApiService.getPriorWarningSubject().next(priorWarnings.body));\n        }\n    }\n\n    ngAfterViewChecked(): void {\n        if (this.scrollContainerWidth !== this.getScrollContainerWidth()) {\n            this.scrollContainerWidth = this.getScrollContainerWidth();\n            if (this.ref) {\n                this.ref.detectChanges();\n            }\n        }\n    }\n\n    /**\n     * Used to dynamically set the width of the scroll container (based on the width of the array view component)\n     */\n    public getScrollContainerWidth(): string {\n        const width = this.arrayViewElementRef.nativeElement.offsetWidth;\n        // Ensure that the container has padding\n        const padding = width * .11;\n        // Get the number of graphs that we should be able to display in the window (taking the padding into account)\n        const numGraphsInRow = Math.floor((width - padding) / this.arrayViewService.peraGraphWidth);\n        // Return the width\n        return numGraphsInRow * this.arrayViewService.peraGraphWidth + 'px';\n    }\n\n    ngOnChanges() {\n        this.updateBehaviorBasedOnInputs();\n        // TODO update this when we add the ability to change the title/grouping/sorting\n    }\n\n    /**\n     * Updates the fields in the array view service and in this component based on the input so that we see the desired behavior\n     */\n    private updateBehaviorBasedOnInputs() {\n        this.disableGroupsIfAppropriate();\n        this.setPeraGraphSortingFunction();\n        this.updatePeraGraphDimensions();\n    }\n\n    /**\n     * If we pass in an explicit width/height, use them\n     */\n    private updatePeraGraphDimensions() {\n        if (this.peraGraphHeight && this.peraGraphWidth) {\n            this.arrayViewService.peraGraphWidth = this.peraGraphWidth;\n            this.arrayViewService.peraGraphHeight = this.peraGraphHeight;\n            this.arrayViewService.refreshViewPort();\n        }\n    }\n\n    /**\n     * This sets the array view service's sorting function to the input passed to the array view component\n     */\n    private setPeraGraphSortingFunction() {\n        if (this.peraGraphSortingFunction) {\n            this.arrayViewService.sortGraphs = this.peraGraphSortingFunction;\n        }\n    }\n\n    /**\n     * If groups are disabled or absent, add a single group that will catch all graphs and not display a header\n     */\n    private disableGroupsIfAppropriate() {\n        // If groups are disabled or if we don't have groups\n        if (this.disableGroups || this.groups$ == null) {\n            this.groups$ = of([[null, function (peraGraph: PeraGraph) {\n                return true;\n            }]]);\n        }\n    }\n\n    // not sure if this is needed since we are using combinedLatest above but I left it just in case\n    // public filterChanged() {\n    //   // Get the current list of PeraGraphs without making another call\n    //   let peraGraphs = this.peragraphApiService.getPeraGraphSubject().value;\n    //   // Filter the list according to the updated matchesFilter function within the arrayView service\n    //   peraGraphs = this.arrayViewService.filterPeragraphs(peraGraphs, this.filterService.activeFilters)\n    //   // Publish result to all subscribing groups\n    //   this.peragraphApiService.getPeraGraphSubject().next(peraGraphs);\n    // }\n\n    ngOnDestroy() {\n        if (this.ref) {\n            this.ref.detach();\n            this.ref = null;\n        }\n        if (this.peraGraphSubscription && !this.peraGraphSubscription.closed) {\n            this.peraGraphSubscription.unsubscribe();\n        }\n        if (this.flowSheetSubscription && !this.flowSheetSubscription.closed) {\n            this.flowSheetSubscription.unsubscribe();\n        }\n        if (this.priorWarningSubscription && !this.priorWarningSubscription.closed) {\n            this.priorWarningSubscription.unsubscribe();\n        }\n        if (this.filteredPeraGraphsSubscription && !this.filteredPeraGraphs$.closed) {\n            this.filteredPeraGraphsSubscription.unsubscribe();\n        }\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ElementRef, HostBinding,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit, Renderer2\n} from '@angular/core';\nimport {ArrayViewService} from '../service/array-view.service';\nimport {BehaviorSubject, Observable, Subscription} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {ResizeEvent} from 'angular-resizable-element';\nimport {PeraGraphService} from './pera-graph/service/pera-graph.service';\nimport {PeraGraph} from 'ng-common-library/lib/model/PeraGraph';\nimport {PeragraphApiService} from 'ng-common-library';\nimport {FilterService} from \"ng-filters-library\";\n\n@Component({\n    selector: 'phlib-group',\n    templateUrl: './group.component.html',\n    styleUrls: ['./group.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GroupComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public showPeraGraphs = false;\n    @Input()\n    expanded = false;\n    @Input()\n    public group: { laneFunction: (peraGraph: PeraGraph) => boolean, laneTitle: string };\n    @Input()\n    public peraGraphHeight: number;\n    @Input()\n    public peraGraphWidth: number;\n    @Input()\n    public scrollContainerWidth: string;\n    @Input()\n    public filteredPeraGraphs$: BehaviorSubject<PeraGraph[]>;\n\n    // Group information\n    public groupName: string;\n    private filterFunction = null;\n\n    // Default number of rows - TODO possibly make this configurable, or remember the user's last selection and save it\n    private nonExpandedRows = 3;\n    private expandedRows = 6;\n    private currentNumberOfRowsDisplayed = this.nonExpandedRows;\n\n    // Observables\n    public peraGraphs$: Observable<Array<PeraGraph>>;\n    public peraGraphs_length$: Subscription;\n    options$ = new BehaviorSubject<{ itemHeight: number, itemWidth: number, numAdditionalRows: number }>(null);\n\n    // Maintained to determine chart equality\n    private previousPeraGraphs: Array<PeraGraph>;\n    private currentPeraGraphs: Array<PeraGraph>;\n\n    // Displayed in the header\n    public groupLength: number;\n\n    // Differentiate between a single click and a double click\n    private clickTimer = 0;\n    private preventSingleClick = false;\n\n    // Allows for simple resizing of the viewport\n    private viewContainerMaxHeight: string;\n    public style: object = {maxHeight: this.viewContainerMaxHeight};\n\n    public hideGroup = false;\n\n    constructor(private arrayViewService: ArrayViewService,\n                private filterService: FilterService,\n                private peraGraphService: PeraGraphService,\n                private peragraphApiService: PeragraphApiService,\n                private ref: ChangeDetectorRef,\n                private elementRef: ElementRef,\n                private renderer: Renderer2) {\n    }\n\n    // TODO break pieces out into a service as appropriate\n\n    ngOnInit() {\n        // Set the group information\n        this.groupName = this.group.laneTitle;\n        this.filterFunction = this.group.laneFunction;\n        this.updatePeraGraphs();\n        if (this.expanded) {\n            this.currentNumberOfRowsDisplayed = this.expandedRows\n        } else {\n            this.currentNumberOfRowsDisplayed = this.nonExpandedRows;\n        }\n    }\n\n    ngOnChanges() {\n        this.updateNumberOfItemsInViewport();\n        // Identify the ideal width, and set both it and the height through ng-style on the viewport container\n        this.updateViewPortPerCurrentRows();\n        this.updatePeraGraphs();\n        this.maintainGroupLength();\n    }\n\n    hideOrDisplayGroup() {\n        if (this.elementRef) {\n            if (this.groupLength === 0) {\n                this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n            } else {\n                this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'block');\n            }\n        }\n    }\n\n    private updatePeraGraphs() {\n        this.peraGraphs$ = this.filteredPeraGraphs$.pipe(\n            map(peraGraphs => peraGraphs.filter(peraGraph => this.matchesGroup(peraGraph))),\n            tap(peraGraphs => {\n                // Used to determine equality for virtual scrolling\n                this.previousPeraGraphs = this.currentPeraGraphs;\n                this.currentPeraGraphs = peraGraphs;\n                // Specifies the number of graphs in a group\n                this.groupLength = peraGraphs.length;\n                this.hideOrDisplayGroup();\n            }));\n    }\n\n    /**\n     * When we're not displaying PeraGraphs, we don't pass the observable to the virtual scroll which typically populates the group length.\n     * This function will conditionally get the group length through other means.\n     */\n    maintainGroupLength() {\n        if (!this.showPeraGraphs) {\n            // If we're not showing peraGraphs, subscribe separately so that we can get the group length\n            this.peraGraphs_length$ = this.filteredPeraGraphs$.pipe(map(peraGraphs =>\n                peraGraphs.filter(peraGraph => this.matchesGroup(peraGraph)))).subscribe((peraGraphs) => {\n                this.groupLength = peraGraphs.length;\n                this.hideOrDisplayGroup();\n                if (this.ref) {\n                    this.ref.detectChanges();\n                }\n            });\n        } else if (this.peraGraphs_length$ && !this.peraGraphs_length$.closed) {\n            // If we're showing peraGraphs, there's no need for this subscription\n            this.peraGraphs_length$.unsubscribe();\n        }\n    }\n\n    /**\n     * This function determines which graphs belong to this group\n     *\n     * @param peraGraph\n     * @returns\n     */\n    matchesGroup(peraGraph: PeraGraph): boolean {\n        if (this.filterFunction) {\n            return this.filterFunction(peraGraph);\n        }\n        return true;\n    }\n\n    /**\n     * Function to determine equality, given two indicies in the array (optional, default: (p,c) => p === c))\n     *\n     * @param prevDataIndex\n     * @param curDataIndex\n     * @returns\n     */\n    equals = (prevDataIndex: number, curDataIndex: number) => {\n        const curPeraGraph = this.currentPeraGraphs[curDataIndex];\n        const previousPeraGraph = (this.previousPeraGraphs) ? this.previousPeraGraphs[prevDataIndex] : null;\n        /*\n         Most browsers maintain the order of the fields so this should work in most cases and when it fails, it'll just return false so anything\n         else is an optimization\n         */\n        return previousPeraGraph != null && curPeraGraph != null && JSON.stringify(previousPeraGraph) === JSON.stringify(curPeraGraph);\n    };\n\n    /**\n     * Called when the viewport is being resized manually\n     *\n     * @param event\n     */\n    onResizing(event: ResizeEvent): void {\n        // Set the height according to the event\n        this.viewContainerMaxHeight = event.rectangle.height + 'px';\n        // Set the number of rows that should be displayed according to the new height\n        this.currentNumberOfRowsDisplayed = Math.ceil(event.rectangle.height / this.peraGraphHeight);\n        this.updateViewPortPerCurrentRows();\n    }\n\n    /**\n     * Called when the header is clicked\n     */\n    click() {\n        this.preventSingleClick = false;\n        // @ts-ignore\n        this.clickTimer = setTimeout(() => {\n            if (!this.preventSingleClick) {\n                this.toggleShow();\n                if (this.ref) {\n                    this.ref.detectChanges();\n                }\n            }\n        }, 200);\n    }\n\n    /**\n     * Called when the header is double clicked\n     */\n    doubleClick() {\n        clearTimeout(this.clickTimer);\n        this.preventSingleClick = true;\n        this.toggleExpand();\n    }\n\n    /**\n     * Updates the height/width of the viewport container as well as the height/width/number of items in the viewport\n     */\n    updateViewPortPerCurrentRows() {\n        if (this.expanded) {\n            this.currentNumberOfRowsDisplayed = this.expandedRows\n        } else {\n            this.currentNumberOfRowsDisplayed = this.nonExpandedRows;\n        }\n        // Set the height of the container from the number of rows that should be displayed\n        this.viewContainerMaxHeight = this.getViewPortHeightFromRowsAsString(this.currentNumberOfRowsDisplayed);\n        this.setStyle(this.viewContainerMaxHeight);\n        // Update the options so that the correct number of rows are displayed in the viewport\n        this.updateNumberOfItemsInViewport();\n    }\n\n    /**\n     * Toggles whether or not any PeraGraphs are shown in the group\n     */\n    toggleShow() {\n        // Switch from removing the element from the DOM via ngIf to using the hidden attribute once it's rendered once\n        this.hideGroup = (this.showPeraGraphs) ? !this.hideGroup : false;\n        this.arrayViewService.tokenRefresh$.next();\n\n        // If we have never displayed PeraGraphs in this group\n        if (!this.showPeraGraphs) {\n            // Start rendering graphs for the first time\n            this.startRenderingPeraGraphs();\n        }\n    }\n\n    /**\n     * This function toggles expansion of the viewport height\n     */\n    toggleExpand() {\n        this.arrayViewService.tokenRefresh$.next();\n        this.expanded = !this.expanded;\n        // Update the number of rows being displayed according to the current expanded status\n        this.currentNumberOfRowsDisplayed = (this.expanded) ? this.expandedRows : this.nonExpandedRows;\n        // Update the viewport\n        this.updateViewPortPerCurrentRows();\n        // If we're not showing graphs, show them\n        if (!this.showPeraGraphs || this.hideGroup) {\n            this.hideGroup = false;\n            // If we have never displayed peragraphs in this group\n            if (!this.showPeraGraphs) {\n                // Start rendering graphs for the first time\n                this.startRenderingPeraGraphs();\n            }\n        }\n    }\n\n    /**\n     * If ngIf is currently evaluating to false, trigger a change and update the view container\n     */\n    startRenderingPeraGraphs() {\n        this.showPeraGraphs = true;\n        this.updateViewPortPerCurrentRows();\n        if (this.ref) {\n            this.ref.detectChanges();\n        }\n    }\n\n    /**\n     * Updates item size and the number of rows being rendered\n     */\n    updateNumberOfItemsInViewport() {\n        this.options$.next({\n            itemHeight: this.peraGraphHeight,\n            itemWidth: this.peraGraphWidth,\n            numAdditionalRows: this.getNumberOfRowsToRender()\n        });\n    }\n\n    /**\n     * Applies a buffer to the number of rows being displayed to improve scrolling performance\n     *\n     * @returns\n     */\n    getNumberOfRowsToRender(): number {\n        const additionalRowsToRender = (this.arrayViewService.isDisplayingTiles()) ? 100 : 2;\n        return this.currentNumberOfRowsDisplayed + additionalRowsToRender;\n    }\n\n    /**\n     * Set the height and width of the viewport container\n     *\n     * @param height\n     */\n    setStyle(height: string) {\n        this.style = {\n            maxHeight: height,\n            width: this.scrollContainerWidth\n        };\n    }\n\n    /**\n     * Returns the ideal viewport height for the number of rows passed to the function\n     *\n     * @param rows\n     * @returns\n     */\n    getViewPortHeightFromRowsAsString(rows: number): string {\n        return this.peraGraphHeight * rows + 'px';\n    }\n\n    ngOnDestroy(): void {\n        if (this.ref) {\n            this.ref.detach();\n            this.ref = null;\n        }\n        this.filterFunction = null;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ArrayViewService} from '../../../service/array-view.service';\nimport {first} from 'rxjs/operators';\nimport {TooltipInfo} from '../../../model/TooltipInfo';\nimport {PeraGraphService} from './pera-graph.service';\nimport {ArrayViewConfigService} from '../../../service/array-view-config.service';\nimport {PeraGraph} from 'ng-common-library/lib/model/PeraGraph';\nimport {LoginService} from 'ng-login-library';\nimport {TokenApiService} from 'ng-common-library';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TooltipService {\n\n    public toolTipInfoUpdated$: Subject<TooltipInfo> = new Subject<TooltipInfo>();\n\n    constructor(private graphService: PeraGraphService,\n                private arrayViewService: ArrayViewService,\n                private http: HttpClient,\n                private loginService: LoginService,\n                private tokenApiService: TokenApiService,\n                private arrayViewConfigService: ArrayViewConfigService) {\n    }\n\n    updateToolTipInfo(graph: PeraGraph) {\n        this.tokenApiService.refreshToken(this.loginService.getCurrentUser());\n        // Get the current tooltip info from the server.\n        this.http.get(this.arrayViewConfigService.getToolTipInfoEndPoint() + '/pid/' + graph.patient.pid + '/visit/' + graph.visitId).pipe(first()).subscribe((toolTipInfo: TooltipInfo) => {\n            // Ensure that the user hasn't moved onto a new graph with a different during the time that the call was made to the server\n            if (graph.visitId === toolTipInfo.visitId) {\n                const numberOfOtherVisitsWithValidRi = toolTipInfo.numberOfOtherVisitsWithValidRi;\n                // The query will return a -1 value if the current and only visit has no valid RI scores.\n                graph.numberVisitsWithValidRI = (numberOfOtherVisitsWithValidRi > 0) ? numberOfOtherVisitsWithValidRi : 0;\n                // Tooltip diagnosis formatting\n                if (toolTipInfo.diagnosis != null) {\n                    // Replace the first ^ with nothing\n                    const tmpDiag = toolTipInfo.diagnosis.replace('^', '');\n                    // Replace the rest of the ^ with ', '\n                    graph.diagnosis = tmpDiag.replace(/\\^/g, ', ');\n                }\n                this.toolTipInfoUpdated$.next(toolTipInfo);\n            }\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges\n} from '@angular/core';\nimport {ArrayViewService} from '../../service/array-view.service';\nimport {PeraGraphService} from './service/pera-graph.service';\nimport {NgbPopover} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpClient} from '@angular/common/http';\nimport {TooltipService} from './service/tooltip.service';\nimport {Subscription} from 'rxjs';\nimport {FlowsheetsApiService, PeraGraph, UsageApiService, UsageType} from 'ng-common-library';\nimport {PriorWarningsApiService} from '../../service/prior-warnings/api/prior-warnings-api.service';\nimport {FlowSheetBase} from 'ng-common-library/lib/model/FlowSheetBase';\nimport {TooltipInfo} from '../../model/TooltipInfo';\n\n@Component({\n    selector: 'phlib-pera-graph',\n    templateUrl: './pera-graph.component.html',\n    styleUrls: ['./pera-graph.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PeraGraphComponent implements OnInit, OnDestroy, OnChanges {\n\n    @Input()\n    public graph: PeraGraph;\n\n    @Input()\n    public peraGraphWidth: number;\n\n    @Input()\n    public peraGraphHeight: number;\n\n    public style;\n    private margin = 10;\n\n    public flowsheets: Array<FlowSheetBase>;\n    public priorWarning: string;\n    private flowSheetMap$: Subscription;\n    private priorWarningMap$: Subscription;\n    private toolTipInfoEvent$: Subscription;\n    public latestRi: number;\n    private isMouseOverPeraGraph = false;\n    private tooltip: NgbPopover;\n\n    constructor(public service: ArrayViewService,\n                private flowsheetsApiService: FlowsheetsApiService,\n                private priorWarningsApiService: PriorWarningsApiService,\n                private usageService: UsageApiService,\n                private graphService: PeraGraphService,\n                private toolTipService: TooltipService,\n                private http: HttpClient,\n                private ref: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.subscribeToPeraGraphDataFeeds();\n        this.subscribeToToolTipInfoEvent();\n        this.style = {\n            width: this.peraGraphWidth - this.margin + 'px',\n            height: this.peraGraphHeight - this.margin + 'px'\n        };\n        this.usageService.addUsageData(this.graph, UsageType.Array);\n        // Manage change detection explicitly\n        this.ref.detach();\n    }\n\n    /**\n     * Subscribe to the interval observables/subjects that pass information the PeraGraph needs\n     *\n     * Currently, this includes prior warnings and flowsheets\n     */\n    subscribeToPeraGraphDataFeeds() {\n        this.flowSheetMap$ = this.flowsheetsApiService.getFlowSheetSubject().subscribe((fscMap) => {\n            this.getFlowSheetsForVisit(fscMap);\n            if (this.ref) {\n                this.ref.detectChanges();\n            }\n        });\n\n        this.priorWarningMap$ = this.priorWarningsApiService.getPriorWarningSubject().subscribe((pwMap) => {\n            this.getPriorWarningsForVisit(pwMap);\n            if (this.ref) {\n                this.ref.detectChanges();\n            }\n        });\n    }\n\n    subscribeToToolTipInfoEvent() {\n        this.toolTipInfoEvent$ = this.toolTipService.toolTipInfoUpdated$.subscribe((toolTipInfo: TooltipInfo) => {\n            // Ensure that the user hasn't moved onto a new graph with a different during the time that the call was made to the server\n            if (this.isMouseOverPeraGraph && toolTipInfo.visitId === this.graph.visitId) {\n                // If the service takes a second to respond and the popover is no longer there, don't try to open it\n                if (this.tooltip) {\n                    this.graphService.tooltip = this.tooltip;\n                    this.tooltip.open();\n                }\n                if (this.ref) {\n                    this.ref.detectChanges();\n                }\n            }\n        });\n    }\n\n    /**\n     * This only fires when the user passes the mouse over the graph to get the tooltip.\n     * For those graphs, force a change detection cycle so that the ToolTip component updates.\n     */\n    mouseEnterHandler(po: NgbPopover): void {\n        if (!this.isMouseOverPeraGraph && !po.isOpen()) {\n            this.isMouseOverPeraGraph = true;\n            this.tooltip = po;\n            if (this.graph) {\n                // Close any existing tooltip\n                this.graphService.closeToolTip();\n                this.toolTipService.updateToolTipInfo(this.graph);\n            }\n        }\n    }\n\n    /**\n     * This fires when the user passes the mouse over the graph, and then moves the mouse off of the graph\n     * For those graphs, close the tooltip\n     *\n     * @param po\n     */\n    mouseLeaveHandler(po: NgbPopover): void {\n        this.isMouseOverPeraGraph = false;\n        if (po.isOpen()) {\n            po.close();\n        }\n    }\n\n    graphClicked(graph: PeraGraph) {\n        if (this.tooltip && this.tooltip.isOpen()) {\n            // console.log('Forcefully closing tooltip');\n            this.tooltip.close();\n            this.tooltip = null;\n        }\n        this.graphService.graphClickedEvent(graph);\n        this.service.tokenRefresh$.next();\n    }\n\n    isShown(po: NgbPopover): void {\n        if (!this.tooltip) {\n            // Closing tooltip\n            setTimeout(() => po.close(), 1);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // If the item size changed, update style\n        if (changes && changes.peraGraphWidth && changes.peraGraphWidth.previousValue !== changes.peraGraphWidth.currentValue) {\n            this.style = {\n                width: this.peraGraphWidth - this.margin + 'px',\n                height: this.peraGraphHeight - this.margin + 'px'\n            };\n        }\n\n        // If the graph changed, update the related data so that we're showing the right information\n        if (changes &&\n            changes.graph &&\n            changes.graph.currentValue !== changes.graph.previousValue &&\n            !changes.graph.firstChange &&\n            changes.graph.currentValue.visitId !== changes.graph.previousValue.visitId) {\n\n            // console.log('ArrayView change: Adding usage data for ' + this.graph.vnm);\n            this.usageService.addUsageData(this.graph, UsageType.Array);\n\n            // The graph that we're displaying changed so get the new FSCs from the map\n            const fscMap = this.flowsheetsApiService.getFlowSheetSubjectValue();\n            this.getFlowSheetsForVisit(fscMap);\n            // Get the prior warning for this graph instead of the stale graph\n            const priorWarnings = this.priorWarningsApiService.getPriorWarningSubjectValue();\n            this.getPriorWarningsForVisit(priorWarnings);\n            // Push the changes\n            if (this.ref) {\n                this.ref.detectChanges();\n            }\n        }\n    }\n\n    getFlowSheetsForVisit(fscMap) {\n        if (fscMap) {\n            const fsc = fscMap[this.graph.visitId];\n            // Update the RI-related fields if necessary\n            if (fsc && !(this.flowsheets === fsc) && JSON.stringify(this.flowsheets) !== JSON.stringify(fsc)) {\n                // Note this may trigger extra changes based on how browsers handle JSON object order\n                this.flowsheets = fsc;\n                this.latestRi = fsc[this.flowsheets.length - 1].riScore;\n            } else if (!fsc && this.flowsheets !== null) {\n                // Clear the RI-related fields\n                this.flowsheets = [];\n                this.latestRi = null;\n            }\n        }\n    }\n\n    getPriorWarningsForVisit(priorWarnings) {\n        if (priorWarnings) {\n            const pw = priorWarnings[this.graph.visitId];\n            // TODO can we set this.priorWarning = pw without the logic below?\n            // If we have a prior warning and it's not the same, trigger a change\n            if (pw && pw !== this.priorWarning) {\n                this.priorWarning = pw;\n            } else if (!pw) {\n                // No prior warning exists, update our prior warning to reflect this\n                this.priorWarning = null;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ref) {\n            this.ref.detach();\n            this.ref = null;\n        }\n        // Unsubscribe when the component is destroyed\n        if (this.flowSheetMap$ && !this.flowSheetMap$.closed) {\n            this.flowSheetMap$.unsubscribe();\n        }\n        if (this.priorWarningMap$ && !this.priorWarningMap$.closed) {\n            this.priorWarningMap$.unsubscribe();\n        }\n        if (this.toolTipInfoEvent$ && !this.toolTipInfoEvent$.closed) {\n            this.toolTipInfoEvent$.unsubscribe();\n        }\n    }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\n\nimport * as moment_ from 'moment-timezone';\nimport {ArrayViewService} from '../../../service/array-view.service';\nimport {PeraGraph} from 'ng-common-library/lib/model/PeraGraph';\nimport {ChartService, DateService} from 'ng-common-library';\nimport {FlowSheetBase} from 'ng-common-library/lib/model/FlowSheetBase';\n\ndeclare var require: any;\nconst Highcharts = require('highcharts');\n\n// The JavaScript compiler gives a weird \"moment cannot be used as a namespace\" type of error\n// This is the workaround...\nconst moment = moment_;\n\n@Component({\n  selector: 'phlib-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChartComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  flowsheets: Array<FlowSheetBase>;\n\n  @Input()\n  public graph: PeraGraph;\n\n  @Input()\n  currentTimestamp: number;\n\n  Highcharts = Highcharts;\n  chartOptions;\n\n  X_AXIS_DAYS = 5;\n  DAY_IN_MILLISECONDS = 86400000;\n\n  minRiScore = 0;\n  minRecordedDt = 999999999999999999999;\n  maxRecordedDt = 0;\n\n  series;\n\n  constructor(private dateService: DateService,\n              private chartService: ChartService,\n              private arrayViewService: ArrayViewService,\n              private ref: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    // Manage change detection explicitly\n    this.ref.detach();\n    // Get the series\n    this.series = this.getChartSeries();\n    // Build the chart options\n    this.chartOptions = this.getChartOptions();\n    // Trigger change detection\n    this.ref.detectChanges();\n  }\n\n  ngOnChanges() {\n    // Ensure that a chart already exists\n    if (this.Highcharts && this.chartOptions) {\n      // Fetch the series using the latest flowsheet information\n      this.series = this.getChartSeries();\n      // If the series is different\n      if (this.series !== this.chartOptions.series) {\n        this.updateChart();\n        this.chartOptions = {...this.chartOptions};\n        if (this.ref) {\n          this.ref.detectChanges();\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the chart\n   */\n  updateChart() {\n    this.chartOptions.series = this.series;\n    this.updateXAxis();\n    this.updateYAxis();\n  }\n\n  /**\n   * Updates the pieces of the Y axis that need updating\n   */\n  updateYAxis() {\n    const minYAxisTick = this.chartService.getMinYAxisTick(this.minRiScore);\n    // If the min Y axis value would change, update it\n    if (this.chartOptions.yAxis[0].min !== minYAxisTick) {\n      this.chartOptions.yAxis[0].min = minYAxisTick;\n      this.chartOptions.yAxis[0].plotLines = this.chartService.createZeroAxisLine(this.minRiScore);\n    }\n  }\n\n  /**\n   * Updates the pieces of the X axis that need updating\n   */\n  updateXAxis() {\n    this.chartOptions.xAxis = this.getXaxis();\n  }\n\n  /**\n   * Returns the chart options\n   */\n  getChartOptions() {\n    return {\n      chart: {\n        type: 'line',\n        spacing: [2, 0, 0, 0],\n        marginLeft: 18,\n        marginRight: 2,\n        plotBackgroundColor: 'white',\n        reflow: false,\n        animation: false,\n        alignTicks: false\n      },\n      tooltip: {\n        enabled: false,\n        animation: false\n      },\n      plotOptions: {\n        series: {\n          color: '#848484',\n          turboThreshold: 0,\n          animation: false,\n          enableMouseTracking: false,\n          stickyTracking: false,\n          shadow: false,\n          dataLabels: {\n            style: {\n              textShadow: false\n            }\n          }\n        },\n        line: {\n          animation: false,\n          enableMouseTracking: false,\n          stickyTracking: false,\n          shadow: false,\n          dataLabels: {\n            style: {\n              textShadow: false\n            }\n          }\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      legend: {\n        enabled: false\n      },\n      title: {\n        text: ''\n      },\n      xAxis: this.getXaxis(),\n      yAxis: this.getYaxis(),\n      series: this.series\n    };\n  }\n\n  getXaxis() {\n    const xAxis = [];\n    xAxis.push({\n      type: 'datetime',\n      startOnTick: false,\n      endOnTick: false,\n      tickInterval: this.graph.isDischarged ? null : this.DAY_IN_MILLISECONDS,\n      gridLineWidth: 1,\n      plotLines: this.chartService.updateAlertPlotLine(this.graph),\n      title: {\n        text: ' '\n      },\n      labels: {\n        distance: 20,\n        style: {\n          color: 'black',\n          'font-size': '.6em'\n        },\n        formatter: function () {\n          return moment(this.value).utcOffset(0).format('MM/DD');\n        },\n        step: 1\n      },\n      min: this.getMinXAxisValue(),\n      max: this.getMaxXAxisValue(),\n    });\n    return xAxis;\n  }\n\n  getMaxXAxisValue() {\n    return (this.graph.discharged) ? null : this.dateService.translateDate(this.arrayViewService.getCurrentTimestamp(), this.graph.timeZone);\n  }\n\n  getMinXAxisValue() {\n    return (this.graph.discharged) ? null : this.dateService.translateDate(\n      this.arrayViewService.getCurrentTimestamp(), this.graph.timeZone) - this.X_AXIS_DAYS * this.DAY_IN_MILLISECONDS;\n  }\n\n  getYaxis() {\n    const yAxis = [];\n    yAxis.push({\n      title: {\n        text: ' '\n      },\n      labels: {\n        style: {\n          color: 'black',\n          'font-size': '.6em'\n        },\n        padding: 1,\n        align: 'center'\n      },\n      offset: -12,\n      //     gridLineColor : colorHealthScoreGridLine,\n      gridLineWidth: 1,\n      min: this.chartService.getMinYAxisTick(this.minRiScore),\n      max: 100,\n      plotLines: this.chartService.createZeroAxisLine(this.minRiScore),\n      tickPositioner: function (min, max) {\n\n        let tick = min;\n        const ticks = [];\n\n        while (tick <= max) {\n          ticks.push(tick);\n          tick += 20;\n        }\n\n        return ticks;\n\n      }\n    });\n    return yAxis;\n  }\n\n  getChartSeries() {\n    const series = [];\n    series.push({\n      name: '',\n      data: this.getDataPoints(this.flowsheets),\n      showInLegend: false,\n      turboThreshold: 0,\n      color: {\n        linearGradient: {x1: 0, x2: 1, y1: 0, y2: 0},\n        stops: this.getArrayOfLocationChanges(this.flowsheets)\n      },\n      marker: {\n        enabled: (this.flowsheets && this.flowsheets.length === 1) ? true : false,\n        color: (this.flowsheets && this.flowsheets.length === 1) ? this.chartService.getMarkerColor(this.flowsheets[0].unitType) : null,\n        radius: 1.5\n      }\n    });\n    return series;\n  }\n\n  getArrayOfLocationChanges(fscList) {\n    const range = this.maxRecordedDt - this.minRecordedDt;\n    const colors = [[0, 'black']];\n    let color = 'black';\n    let unitType = null;\n    let xval = 0;\n\n    if (fscList && range > 0) {\n      fscList.forEach((fsc) => {\n        // If the unit type changed\n        if (fsc.unitType !== unitType) {\n          // Get the percentage across the X axis by recorded date\n          xval = (fsc.key.recordedDt - this.minRecordedDt) / range;\n          // add an entry just prior to this point to smooth the gradient\n          colors.push([xval - .0001, color]);\n          // The the appropriate color for this unitType\n          color = this.chartService.getMarkerColor(fsc.unitType);\n          // Push the change in color\n          colors.push([xval, color]);\n          // Remember the current unit type\n          unitType = fsc.unitType;\n        }\n      });\n    }\n\n    return colors;\n  }\n\n  getDataPoints(data) {\n    const dataPoints = [];\n    // Reset the variables\n    this.minRiScore = 100;\n    this.minRecordedDt = 999999999999999999999;\n    this.maxRecordedDt = 0;\n\n    // If we have data\n    if (data) {\n      data.forEach((fsc) => {\n        dataPoints.push([this.dateService.translateDate(fsc.key.recordedDt, this.graph.timeZone), fsc.riScore + (Math.random() / 1000)]);\n        // Keep track of the extreme values - they are used elsewhere\n        this.minRecordedDt = (this.minRecordedDt > fsc.key.recordedDt) ? fsc.key.recordedDt : this.minRecordedDt;\n        this.maxRecordedDt = (this.maxRecordedDt < fsc.key.recordedDt) ? fsc.key.recordedDt : this.maxRecordedDt;\n        this.minRiScore = (this.minRiScore > fsc.riScore) ? fsc.riScore : this.minRiScore;\n      });\n    }\n    return dataPoints;\n  }\n\n  ngOnDestroy(): void {\n    if (this.ref) {\n      this.ref.detach();\n      this.ref = null;\n    }\n  }\n}\n","import {ChangeDetectorRef, Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {PeraGraphService} from '../service/pera-graph.service';\nimport {WarningService} from 'ng-common-library';\nimport {ArrayViewService} from '../../../service/array-view.service';\n\n@Component({\n  selector: 'phlib-pera-graph-tile',\n  templateUrl: './pera-graph-tile.component.html',\n  styleUrls: ['./pera-graph-tile.component.css']\n})\nexport class PeraGraphTileComponent implements OnInit, OnChanges {\n\n  @Input()\n  graph;\n\n  @Input()\n  latestRi;\n\n  @Input()\n  priorWarning: string;\n\n  priorWarningIndicator;\n\n  public style: object;\n\n  constructor(public peraGraphService: PeraGraphService,\n              public warningService: WarningService,\n              public arrayViewService: ArrayViewService,\n              public ref: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n      // Subscribe to the chart title subject and invoke change detection when new value is pushed.\n      this.arrayViewService.chartTitleSubject$.subscribe(() => {\n          if (this.ref) {\n              this.ref.detectChanges();\n          }\n      });\n  }\n\n  ngOnChanges() {\n    this.updateBackgroundColor();\n  }\n\n  updateBackgroundColor() {\n    const warning = (this.graph) ? this.graph.activeWarning : null;\n    this.style = {\n      backgroundColor: this.peraGraphService.getBackgroundColorByWarningAndRi(warning, this.latestRi, this.graph.discharged)\n    };\n\n    this.priorWarningIndicator = this.warningService.getWarningClass(this.priorWarning);\n\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-group-header',\n  templateUrl: './group-header.component.html',\n  styleUrls: ['./group-header.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GroupHeaderComponent implements OnInit {\n\n  @Input()\n  public numberOfPatients;\n\n  @Input()\n  public name;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges\n} from '@angular/core';\nimport {PeraGraphService} from '../service/pera-graph.service';\nimport {WarningService} from 'ng-common-library';\nimport {ArrayViewService} from '../../../service/array-view.service';\n\n@Component({\n  selector: 'phlib-pera-graph-header',\n  templateUrl: './pera-graph-header.component.html',\n  styleUrls: ['./pera-graph-header.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PeraGraphHeaderComponent implements OnInit, OnChanges {\n\n  @Input()\n  graph;\n\n  @Input()\n  latestRi;\n\n  public style: object;\n\n  priorWarningIndicator;\n  priorWarningIndicatorId;\n\n  @Input()\n  priorWarning: string;\n\n  constructor(public peraGraphService: PeraGraphService,\n              public warningService: WarningService,\n              public arrayViewService: ArrayViewService,\n              public ref: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n      // Subscribe to the chart title subject and invoke change detection when new value is pushed.\n      this.arrayViewService.chartTitleSubject$.subscribe(() => {\n          if (this.ref) {\n              this.ref.detectChanges();\n          }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If the latest RI or graph changed, update the header color\n    if (changes.latestRi || changes.graph) {\n      this.updateHeaderColor();\n    }\n    this.priorWarningIndicator = this.warningService.getWarningClass(this.priorWarning);\n    // This is so that QA can find the prior warning indicator and ensure that it has the correct color\n    this.priorWarningIndicatorId = 'priorWarningIndicator-' + this.graph.vnm;\n  }\n\n  updateHeaderColor() {\n    const warning = (this.graph) ? this.graph.activeWarning : null;\n    this.style = {\n      backgroundColor: this.peraGraphService.getBackgroundColorByWarningAndRi(warning, this.latestRi, this.graph.discharged),\n      width: '100%',\n    };\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {DateService} from 'ng-common-library';\nimport {PeraGraph} from 'ng-common-library/lib/model/PeraGraph';\n\n@Component({\n  selector: 'phlib-chart-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.css']\n})\nexport class TooltipComponent {\n\n  @Input()\n  public graph: PeraGraph;\n\n  constructor(private dateService: DateService) {\n  }\n\n  public getAdmitDate(): string {\n    if (this.graph && this.graph.timeZone && this.graph.admitDate) {\n      return this.dateService.getDateFormat(this.graph.timeZone, this.graph.admitDate, 'MM/DD/YY HH:mm z');\n    }\n    return '';\n  }\n\n  getDischargeDate(): string {\n    if (this.graph && this.graph.timeZone && this.graph.discharged && this.graph.dischargeDate) {\n      return this.dateService.getDateFormat(this.graph.timeZone, this.graph.dischargeDate, 'MM/DD/YY HH:mm z');\n    }\n    return '';\n  }\n\n  isDischarged(): boolean {\n    return (this.graph && this.graph.isDischarged);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ArrayViewComponent} from './array-view.component';\nimport {GroupComponent} from './group/group.component';\nimport {PeraGraphComponent} from './group/pera-graph/pera-graph.component';\nimport {ChartComponent} from './group/pera-graph/chart/chart.component';\nimport {HighchartsChartModule} from 'highcharts-angular';\nimport {VirtualScrollModule} from 'od-virtualscroll';\nimport {ResizableModule} from 'angular-resizable-element';\nimport {PeraGraphTileComponent} from './group/pera-graph/pera-graph-tile/pera-graph-tile.component';\nimport {GroupHeaderComponent} from './group/group-header/group-header.component';\nimport {PeraGraphHeaderComponent} from './group/pera-graph/pera-graph-header/pera-graph-header.component';\nimport {TooltipComponent} from './group/pera-graph/tooltip/tooltip.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FilterQueryConfigService, FilterQueryRestService, FilterService} from 'ng-filters-library';\n\n\n@NgModule({\n  imports: [CommonModule,\n    HighchartsChartModule,\n    VirtualScrollModule,\n    ResizableModule,\n    NgbModule\n  ],\n  declarations: [\n    ArrayViewComponent,\n    GroupComponent,\n    GroupHeaderComponent,\n    PeraGraphComponent,\n    ChartComponent,\n    PeraGraphTileComponent,\n    TooltipComponent,\n    PeraGraphHeaderComponent],\n  exports: [ArrayViewComponent]\n})\nexport class ArrayViewModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ArrayViewModule,\n      providers: [FilterService, FilterQueryRestService, FilterQueryConfigService]\n    };\n  }\n}\n"],"names":["BehaviorSubject","Injectable","Subject","tslib_1.__values","map","of","forkJoin","HttpClient","FilterService","FilterQueryRestService","FlowsheetsApiService","PeragraphApiService","SortService","GroupService","DateService","timer","switchMap","filter","first","combineLatest","mergeMap","tap","Component","ChangeDetectorRef","Input","ViewChild","ChangeDetectionStrategy","ElementRef","Renderer2","LoginService","TokenApiService","UsageType","UsageApiService","moment","moment_","ChartService","WarningService","FilterQueryConfigService","NgModule","CommonModule","HighchartsChartModule","VirtualScrollModule","ResizableModule","NgbModule"],"mappings":"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"}
